openapi: 3.0.1
info:
  title: FASTTRAK Partner API
  description: Provides access to operator databases via an east to use REST/JSON API.
  termsOfService: 'https://www.fasttrakcloud.com/index.php/features/termsandconditions.html'
  contact:
    name: Adam Morrison
    url: 'https://www.fasttrakcloud.com'
    email: adam@fasttrakcloud.com
  license:
    name: FASTTRAK License
    url: 'https://www.fasttrakcloud.com/index.php/features/termsandconditions.html'
  version: '2'
paths:
  /api/affiliates:
    get:
      tags:
        - Affiliates
      summary: Get Affiliates
      description: 'Requires [AffiliateRead] Permission'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AffiliateInfoApiItemListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/AffiliateInfoApiItemListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/AffiliateInfoApiItemListResponse'
  /api/airlines:
    get:
      tags:
        - Airlines
      summary: Get Airlines
      description: 'Requires [SystemInformationRead] Permission'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AirlineInfoApiItemListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/AirlineInfoApiItemListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/AirlineInfoApiItemListResponse'
  /api/airports:
    get:
      tags:
        - Airports
      summary: Get Airports
      description: '[]'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AirportInfoApiItemListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/AirportInfoApiItemListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/AirportInfoApiItemListResponse'
  /api/attachments:
    get:
      tags:
        - Attachments
      summary: Get Attachments
      description: 'Requires [SystemInformationRead] Permission'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AttachmentInfoApiItemListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentInfoApiItemListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/AttachmentInfoApiItemListResponse'
  /api/authentication/partner:
    post:
      tags:
        - Authentication
      summary: Authenticate Partner
      description: Executes the partner authentication request
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AuthenticationResponseApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationResponseApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/AuthenticationResponseApiItemResponse'
  /api/authentication/web-service-user:
    post:
      tags:
        - Authentication
      summary: Authenticate Web Service User
      description: Executes the partner authentication request
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/WebServiceUserAuthRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/WebServiceUserAuthRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/WebServiceUserAuthRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/WebServiceUserAuthRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AuthenticationResponseApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationResponseApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/AuthenticationResponseApiItemResponse'
  /api/communication/send-document/defaults:
    post:
      tags:
        - Communications
      summary: Used to retrieve send defaults
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DocumentSendDefaultsRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentSendDefaultsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/DocumentSendDefaultsRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DocumentSendDefaultsRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DocumentSendRequestDetailApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentSendRequestDetailApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/DocumentSendRequestDetailApiItemResponse'
  /api/communication/send-document:
    post:
      tags:
        - Communications
      summary: Sends document using default settings based on send request detail
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DocumentSendRequestDetail'
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentSendRequestDetail'
          text/json:
            schema:
              $ref: '#/components/schemas/DocumentSendRequestDetail'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DocumentSendRequestDetail'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /api/communication/send-document/confirmation:
    post:
      tags:
        - Communications
      summary: Sends Confirmation using override settings based on send request detail
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DocumentSendReportRequestConfirmation'
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentSendReportRequestConfirmation'
          text/json:
            schema:
              $ref: '#/components/schemas/DocumentSendReportRequestConfirmation'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DocumentSendReportRequestConfirmation'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /api/communication/send-document/trip-ticket:
    post:
      tags:
        - Communications
      summary: Sends Trip Ticket using override settings based on send request detail
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DocumentSendReportRequestTripTicket'
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentSendReportRequestTripTicket'
          text/json:
            schema:
              $ref: '#/components/schemas/DocumentSendReportRequestTripTicket'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DocumentSendReportRequestTripTicket'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /api/communication/send-document/dispatch-manifest:
    post:
      tags:
        - Communications
      summary: Sends Dispatch Manifest using override settings based on send request detail
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DocumentSendReportRequestDispatchManifest'
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentSendReportRequestDispatchManifest'
          text/json:
            schema:
              $ref: '#/components/schemas/DocumentSendReportRequestDispatchManifest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DocumentSendReportRequestDispatchManifest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /api/communication/send-document/greet-sign:
    post:
      tags:
        - Communications
      summary: Sends Greet Sign using override settings based on send request detail
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DocumentSendReportRequestGreetSign'
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentSendReportRequestGreetSign'
          text/json:
            schema:
              $ref: '#/components/schemas/DocumentSendReportRequestGreetSign'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DocumentSendReportRequestGreetSign'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /api/communication/send-document/time-charges:
    post:
      tags:
        - Communications
      summary: Sends Time and Charges using override settings based on send request detail
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DocumentSendReportRequestTimeAndCharges'
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentSendReportRequestTimeAndCharges'
          text/json:
            schema:
              $ref: '#/components/schemas/DocumentSendReportRequestTimeAndCharges'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DocumentSendReportRequestTimeAndCharges'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /api/communication/send-document/trip-estimate:
    post:
      tags:
        - Communications
      summary: 'Sends Trip Estimate (aka Trip Invoice Estimate, Pre-Trip Estimate) using override settings based on send request detail'
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DocumentSendReportRequestTripEstimate'
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentSendReportRequestTripEstimate'
          text/json:
            schema:
              $ref: '#/components/schemas/DocumentSendReportRequestTripEstimate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DocumentSendReportRequestTripEstimate'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /api/communication/send-document/trip-manifest:
    post:
      tags:
        - Communications
      summary: Sends Trip Manifest using override settings based on send request detail
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DocumentSendReportRequestTripManifest'
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentSendReportRequestTripManifest'
          text/json:
            schema:
              $ref: '#/components/schemas/DocumentSendReportRequestTripManifest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DocumentSendReportRequestTripManifest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /api/communication/view-document:
    get:
      tags:
        - Communications
      summary: Retrieves URL to view single document with default settings (1 minute view token)
      parameters:
        - name: reservationId
          in: query
          schema:
            type: integer
            format: int32
        - name: reportType
          in: query
          schema:
            $ref: '#/components/schemas/FasttrakReportType'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StringApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/StringApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/StringApiItemResponse'
  /api/communication/view-document/confirmation:
    post:
      tags:
        - Communications
      summary: Retrieves URL to view multi-document with override settings (1 minute view token)
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ReportConfirmationRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/ReportConfirmationRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ReportConfirmationRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ReportConfirmationRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StringApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/StringApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/StringApiItemResponse'
  /api/communication/view-document/trip-ticket:
    post:
      tags:
        - Communications
      summary: Views Trip Ticket using override settings based on override report request
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ReportTripTicketRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/ReportTripTicketRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ReportTripTicketRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ReportTripTicketRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StringApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/StringApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/StringApiItemResponse'
  /api/communication/view-document/dispatch-manifest:
    post:
      tags:
        - Communications
      summary: Views Dispatch Manifest using override settings based on override report request
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ReportDispatchManifestRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/ReportDispatchManifestRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ReportDispatchManifestRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ReportDispatchManifestRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StringApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/StringApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/StringApiItemResponse'
  /api/communication/view-document/greet-sign:
    post:
      tags:
        - Communications
      summary: Views Greet Sign using override settings based on override report request
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ReportGreetSignRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/ReportGreetSignRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ReportGreetSignRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ReportGreetSignRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StringApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/StringApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/StringApiItemResponse'
  /api/communication/view-document/time-charges:
    post:
      tags:
        - Communications
      summary: Views Time and Charges using override settings based on override report request
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ReportTimeAndChargesRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/ReportTimeAndChargesRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ReportTimeAndChargesRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ReportTimeAndChargesRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StringApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/StringApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/StringApiItemResponse'
  /api/communication/view-document/trip-estimate:
    post:
      tags:
        - Communications
      summary: 'Views Trip Estimate (aka Trip Invoice Estimate, Pre-Trip Estimate) using override settings based on override report request'
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ReportTripInvoiceEstimateRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/ReportTripInvoiceEstimateRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ReportTripInvoiceEstimateRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ReportTripInvoiceEstimateRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StringApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/StringApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/StringApiItemResponse'
  /api/communication/view-document/trip-manifest:
    post:
      tags:
        - Communications
      summary: Views Trip Manifest using override settings based on override report request
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ReportTripManifestRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/ReportTripManifestRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ReportTripManifestRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ReportTripManifestRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StringApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/StringApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/StringApiItemResponse'
  /api/communication/view-document/deposit-receipt:
    post:
      tags:
        - Communications
      summary: Views Deposit Receipt
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ReportDepositReceiptRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/ReportDepositReceiptRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ReportDepositReceiptRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ReportDepositReceiptRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/StringApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/StringApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/StringApiItemResponse'
  /api/communication/send-defaults:
    get:
      tags:
        - Communications
      summary: Retrieves defaults for sending SMS/Email Communication
      parameters:
        - name: reservationId
          in: query
          description: 'Optional, pass zero for no reservation details.'
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SendSmsEmailDefaultsApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/SendSmsEmailDefaultsApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/SendSmsEmailDefaultsApiItemResponse'
  /api/communication/email:
    post:
      tags:
        - Communications
      summary: Send email based on request details
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SendEmailRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/SendEmailRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SendEmailRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /api/communication/sms:
    post:
      tags:
        - Communications
      summary: Send SMS based on request details
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SendSmsRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/SendSmsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/SendSmsRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SendSmsRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /api/communication/sms/incoming:
    get:
      tags:
        - Communications
      summary: Returns incoming SMS messages
      parameters:
        - name: maxResults
          in: query
          description: 100 by default
          schema:
            type: integer
            format: int32
            default: 100
        - name: minimumId
          in: query
          description: 'If > 0, only those messages higher than this value will be returned. Helpful for polling'
          schema:
            type: integer
            format: int32
            default: 0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SmsMessageInfoApiItemListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/SmsMessageInfoApiItemListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/SmsMessageInfoApiItemListResponse'
  /api/communication/sms/outgoing:
    get:
      tags:
        - Communications
      summary: Returns outgoing SMS Messages
      parameters:
        - name: maxResults
          in: query
          description: 100 by default
          schema:
            type: integer
            format: int32
            default: 100
        - name: minimumId
          in: query
          description: 'If > 0, only those messages higher than this value will be returned. Helpful for polling'
          schema:
            type: integer
            format: int32
            default: 0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SmsOutgoingMessageInfoApiItemListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/SmsOutgoingMessageInfoApiItemListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/SmsOutgoingMessageInfoApiItemListResponse'
  /api/communication/internet-bookings:
    get:
      tags:
        - Communications
      summary: Retrieves list of intenet bookings not marked as read
      parameters:
        - name: maxResults
          in: query
          description: 'default, 100'
          schema:
            type: integer
            format: int32
            default: 100
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/InternetBookingInfoApiItemListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/InternetBookingInfoApiItemListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/InternetBookingInfoApiItemListResponse'
  /api/communication/internet-bookings/mark-read:
    post:
      tags:
        - Communications
      summary: Marks all reservations in list as read
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/InternetBookingsMarkAllReadRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/InternetBookingsMarkAllReadRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/InternetBookingsMarkAllReadRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/InternetBookingsMarkAllReadRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /api/communication/support-messages:
    get:
      tags:
        - Communications
      summary: Returns internal support messages
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SupportMessageInfoApiItemListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/SupportMessageInfoApiItemListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/SupportMessageInfoApiItemListResponse'
  /api/communication/support-messages/mark-read:
    post:
      tags:
        - Communications
      summary: Marks support messages mathcing ID read
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/SupportMessagesMarkAllReadRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/SupportMessagesMarkAllReadRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/SupportMessagesMarkAllReadRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/SupportMessagesMarkAllReadRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /api/companies/primary:
    get:
      tags:
        - Companies
      summary: Retrieves the primary company detail information
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyInfoApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyInfoApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyInfoApiItemResponse'
  '/api/companies/{companyId}':
    get:
      tags:
        - Companies
      summary: Retrieves single company info
      parameters:
        - name: companyId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyInfoApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyInfoApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyInfoApiItemResponse'
  /api/companies:
    get:
      tags:
        - Companies
      summary: Retrieves list of companies
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CompanyInfoApiItemListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyInfoApiItemListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CompanyInfoApiItemListResponse'
  /api/companies/alternate-contracts:
    get:
      tags:
        - Companies
      summary: Returns list of alternate contracts within database
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AlternateContractInfoApiItemListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/AlternateContractInfoApiItemListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/AlternateContractInfoApiItemListResponse'
  /api/corporate-profiles:
    get:
      tags:
        - CorporateProfiles
      summary: Retrieves all corporate profile info
      description: Returns all Corporate Profile info records within database.
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CorporateProfileInfoApiItemListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CorporateProfileInfoApiItemListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CorporateProfileInfoApiItemListResponse'
    post:
      tags:
        - CorporateProfiles
      summary: Adds Corporate Profile record from corporate profile detail
      requestBody:
        description: Fully defined Corporate Profile Detail to update
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CorporateProfileDetail'
          application/json:
            schema:
              $ref: '#/components/schemas/CorporateProfileDetail'
          text/json:
            schema:
              $ref: '#/components/schemas/CorporateProfileDetail'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CorporateProfileDetail'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CorporateProfileDetailApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CorporateProfileDetailApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CorporateProfileDetailApiItemResponse'
  '/api/corporate-profiles/{corporateProfileId}':
    get:
      tags:
        - CorporateProfiles
      summary: Retrieves corporate profile detail by ID
      description: Returns a single Detail object for the given corporate profile.
      parameters:
        - name: corporateProfileId
          in: path
          description: ID of customer
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CorporateProfileDetailApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CorporateProfileDetailApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CorporateProfileDetailApiItemResponse'
    put:
      tags:
        - CorporateProfiles
      summary: Update Corporate Profile record from corporate profile detail
      description: "All fields of the corporate profile detail record will be updated (does not include read-only fields). Once updated, \r\na new CorporateProfileDetail object will be retrieved from the database."
      parameters:
        - name: corporateProfileId
          in: path
          description: ID of Corporate Profile
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Fully defined Corporate Profile Detail to update
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CorporateProfileDetail'
          application/json:
            schema:
              $ref: '#/components/schemas/CorporateProfileDetail'
          text/json:
            schema:
              $ref: '#/components/schemas/CorporateProfileDetail'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CorporateProfileDetail'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CorporateProfileDetailApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CorporateProfileDetailApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CorporateProfileDetailApiItemResponse'
    delete:
      tags:
        - CorporateProfiles
      summary: Deletes corporate profile from database.
      description: 'If the corporate profile has associated references in the database (reservations, invoices, etc.), the delete will fail.'
      parameters:
        - name: corporateProfileId
          in: path
          description: ID of profile to delete
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  '/api/corporate-profiles/{corporateProfileId}/customers':
    get:
      tags:
        - CorporateProfiles
      summary: Returns a list of customer info models currently assigned to the profile
      description: ''
      parameters:
        - name: corporateProfileId
          in: path
          description: ID of profile to query customers
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerInfoApiItemListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerInfoApiItemListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerInfoApiItemListResponse'
  '/api/corporate-profiles/{corporateProfileId}/addresses':
    get:
      tags:
        - CorporateProfiles
      summary: Gets all addresses for Corporate Profile
      parameters:
        - name: corporateProfileId
          in: path
          description: ID of corporate profile owner of address
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProfileAddressApiItemListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileAddressApiItemListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ProfileAddressApiItemListResponse'
    post:
      tags:
        - CorporateProfiles
      summary: Adds a new address for the corporate profile
      parameters:
        - name: corporateProfileId
          in: path
          description: Corporate Profile ID related to the address
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Address information
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ProfileAddress'
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileAddress'
          text/json:
            schema:
              $ref: '#/components/schemas/ProfileAddress'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ProfileAddress'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProfileAddressApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileAddressApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ProfileAddressApiItemResponse'
  '/api/corporate-profiles/{corporateProfileId}/addresses/{addressId}':
    get:
      tags:
        - CorporateProfiles
      summary: Gets a Corporate Profile address form the database
      parameters:
        - name: corporateProfileId
          in: path
          description: Corporate Profile ID related to the address
          required: true
          schema:
            type: integer
            format: int32
        - name: addressId
          in: path
          description: ID of address to retriev
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProfileAddressApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileAddressApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ProfileAddressApiItemResponse'
    put:
      tags:
        - CorporateProfiles
      summary: Updates an existing address
      parameters:
        - name: corporateProfileId
          in: path
          description: Corporate Profile ID related to the address
          required: true
          schema:
            type: integer
            format: int32
        - name: addressId
          in: path
          description: ID of address to update
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Address information
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ProfileAddress'
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileAddress'
          text/json:
            schema:
              $ref: '#/components/schemas/ProfileAddress'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ProfileAddress'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProfileAddressApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileAddressApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ProfileAddressApiItemResponse'
    delete:
      tags:
        - CorporateProfiles
      summary: Deletes the address from the database
      parameters:
        - name: corporateProfileId
          in: path
          description: Corporate Profile ID related to the address
          required: true
          schema:
            type: integer
            format: int32
        - name: addressId
          in: path
          description: ID of address to delete
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  '/api/corporate-profiles/{corporateProfileId}/addresses/{addressId}/make-invoice-default':
    post:
      tags:
        - CorporateProfiles
      summary: Sets the current invoice as the Invoice Default.
      parameters:
        - name: corporateProfileId
          in: path
          description: Corporate Profile ID related to the address
          required: true
          schema:
            type: integer
            format: int32
        - name: addressId
          in: path
          description: ID of address to set invoice default
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProfileAddressApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileAddressApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ProfileAddressApiItemResponse'
  '/api/corporate-profiles/{corporateProfileId}/contacts':
    get:
      tags:
        - CorporateProfiles
      summary: Gets all contacts for the corporate profile
      parameters:
        - name: corporateProfileId
          in: path
          description: ID of corporate profile owner of contact
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CorporateProfileContactInfoApiItemListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CorporateProfileContactInfoApiItemListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CorporateProfileContactInfoApiItemListResponse'
    post:
      tags:
        - CorporateProfiles
      summary: Adds a new contact for the corporate profile
      parameters:
        - name: corporateProfileId
          in: path
          description: Customer ID related to the contact
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Contact information
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CorporateProfileContactInfo'
          application/json:
            schema:
              $ref: '#/components/schemas/CorporateProfileContactInfo'
          text/json:
            schema:
              $ref: '#/components/schemas/CorporateProfileContactInfo'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CorporateProfileContactInfo'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CorporateProfileContactInfoApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CorporateProfileContactInfoApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CorporateProfileContactInfoApiItemResponse'
  '/api/corporate-profiles/{corporateProfileId}/contacts/{contactId}':
    get:
      tags:
        - CorporateProfiles
      summary: Gets a contact from the database
      parameters:
        - name: corporateProfileId
          in: path
          description: Customer ID related to the contact
          required: true
          schema:
            type: integer
            format: int32
        - name: contactId
          in: path
          description: ID of contact to retriev
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CorporateProfileContactInfoApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CorporateProfileContactInfoApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CorporateProfileContactInfoApiItemResponse'
    put:
      tags:
        - CorporateProfiles
      summary: Updates an existing contact
      parameters:
        - name: corporateProfileId
          in: path
          description: Customer ID related to the contact
          required: true
          schema:
            type: integer
            format: int32
        - name: contactId
          in: path
          description: Contact ID to update
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Contact information
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CorporateProfileContactInfo'
          application/json:
            schema:
              $ref: '#/components/schemas/CorporateProfileContactInfo'
          text/json:
            schema:
              $ref: '#/components/schemas/CorporateProfileContactInfo'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CorporateProfileContactInfo'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CorporateProfileContactInfoApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CorporateProfileContactInfoApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CorporateProfileContactInfoApiItemResponse'
    delete:
      tags:
        - CorporateProfiles
      summary: Deletes the contact from the database
      parameters:
        - name: corporateProfileId
          in: path
          description: Customer ID related to the contact
          required: true
          schema:
            type: integer
            format: int32
        - name: contactId
          in: path
          description: ID of contact to delete
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  '/api/corporate-profiles/{corporateProfileId}/passengers':
    get:
      tags:
        - CorporateProfiles
      summary: Gets all passengers for Corporate Profile
      parameters:
        - name: corporateProfileId
          in: path
          description: ID of Corporate Profile owner of passenger
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PassengerInfoApiItemListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/PassengerInfoApiItemListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/PassengerInfoApiItemListResponse'
    post:
      tags:
        - CorporateProfiles
      summary: Adds a new passenger for the Corporate Profile
      parameters:
        - name: corporateProfileId
          in: path
          description: Corporate Profile ID related to the passenger
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Passenger information
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PassengerInfo'
          application/json:
            schema:
              $ref: '#/components/schemas/PassengerInfo'
          text/json:
            schema:
              $ref: '#/components/schemas/PassengerInfo'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PassengerInfo'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PassengerInfoApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/PassengerInfoApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/PassengerInfoApiItemResponse'
  '/api/corporate-profiles/{corporateProfileId}/passengers/{passengerId}':
    get:
      tags:
        - CorporateProfiles
      summary: Gets a passenger from the database
      parameters:
        - name: corporateProfileId
          in: path
          description: Corporate Profile ID related to the passenger
          required: true
          schema:
            type: integer
            format: int32
        - name: passengerId
          in: path
          description: ID of passenger to retrieve
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PassengerInfoApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/PassengerInfoApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/PassengerInfoApiItemResponse'
    put:
      tags:
        - CorporateProfiles
      summary: Updates an existing passenger
      parameters:
        - name: corporateProfileId
          in: path
          description: Corporate Profile ID related to the passenger
          required: true
          schema:
            type: integer
            format: int32
        - name: passengerId
          in: path
          description: ID of passenger to update
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Passenger information
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PassengerInfo'
          application/json:
            schema:
              $ref: '#/components/schemas/PassengerInfo'
          text/json:
            schema:
              $ref: '#/components/schemas/PassengerInfo'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PassengerInfo'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PassengerInfoApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/PassengerInfoApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/PassengerInfoApiItemResponse'
    delete:
      tags:
        - CorporateProfiles
      summary: Deletes the passenger from the database
      parameters:
        - name: corporateProfileId
          in: path
          description: Corporate Profile ID related to the passenger
          required: true
          schema:
            type: integer
            format: int32
        - name: passengerId
          in: path
          description: ID of passenger to delete
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  '/api/corporate-profiles/{corporateProfileId}/deposits':
    get:
      tags:
        - CorporateProfiles
      summary: Gets all Deposits for CorporateProfile
      parameters:
        - name: corporateProfileId
          in: path
          description: ID of customer
          required: true
          schema:
            type: integer
            format: int32
        - name: showOnlyAvailable
          in: query
          description: 'if true (default), only those deposits with value not used will be returned.'
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DepositDetailApiItemListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/DepositDetailApiItemListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/DepositDetailApiItemListResponse'
    post:
      tags:
        - CorporateProfiles
      summary: Adds a new deposit for the customer
      description: "DepositUsage cannot be set here and will be disregarded int the model.\r\nDepositDate is internally managed and cannot be set explicitly"
      parameters:
        - name: corporateProfileId
          in: path
          description: CorporateProfile ID related to the deposit
          required: true
          schema:
            type: integer
            format: int32
        - name: sendReceiptCorporateProfile
          in: query
          description: 'If true (1), emails corresponding customer.'
          schema:
            type: boolean
            default: false
      requestBody:
        description: Deposit information
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DepositDetail'
          application/json:
            schema:
              $ref: '#/components/schemas/DepositDetail'
          text/json:
            schema:
              $ref: '#/components/schemas/DepositDetail'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DepositDetail'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DepositDetailApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/DepositDetailApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/DepositDetailApiItemResponse'
  '/api/corporate-profiles/{corporateProfileId}/deposits/{depositId}':
    get:
      tags:
        - CorporateProfiles
      summary: Gets a deposit from the database
      parameters:
        - name: corporateProfileId
          in: path
          description: CorporateProfile ID related to the passenger
          required: true
          schema:
            type: integer
            format: int32
        - name: depositId
          in: path
          description: ID of deposit to retrieve
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DepositDetailApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/DepositDetailApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/DepositDetailApiItemResponse'
    put:
      tags:
        - CorporateProfiles
      summary: Updates an existing deposit
      description: "DepositUsage cannot be set here and will be disregarded int the model.\r\nDepositDate is internally managed and cannot be set explicitly"
      parameters:
        - name: corporateProfileId
          in: path
          description: CorporateProfile ID related to the deposit
          required: true
          schema:
            type: integer
            format: int32
        - name: depositId
          in: path
          description: ID of deposit to update
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Deposit information
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DepositDetail'
          application/json:
            schema:
              $ref: '#/components/schemas/DepositDetail'
          text/json:
            schema:
              $ref: '#/components/schemas/DepositDetail'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DepositDetail'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DepositDetailApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/DepositDetailApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/DepositDetailApiItemResponse'
    delete:
      tags:
        - CorporateProfiles
      summary: Deletes the deposit from the database
      parameters:
        - name: corporateProfileId
          in: path
          description: CorporateProfile ID related to the deposit
          required: true
          schema:
            type: integer
            format: int32
        - name: depositId
          in: path
          description: ID of deposit to delete
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  '/api/corporate-profiles/{corporateProfileId}/deposits/{depositId}/credit-card-charge':
    post:
      tags:
        - CorporateProfiles
      summary: Charges the deposit credit card ID
      parameters:
        - name: corporateProfileId
          in: path
          description: CorporateProfile ID related to the passenger
          required: true
          schema:
            type: integer
            format: int32
        - name: depositId
          in: path
          description: ID of deposit to charge card
          required: true
          schema:
            type: integer
            format: int32
        - name: securityCode
          in: query
          description: CC Security Code
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DepositDetailApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/DepositDetailApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/DepositDetailApiItemResponse'
  '/api/corporate-profiles/{corporateProfileId}/deposits/{depositId}/credit-card-void':
    post:
      tags:
        - CorporateProfiles
      summary: Voids the deposit credit card ID
      parameters:
        - name: corporateProfileId
          in: path
          description: CorporateProfile ID related to the passenger
          required: true
          schema:
            type: integer
            format: int32
        - name: depositId
          in: path
          description: ID of deposit to charge card
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DepositDetailApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/DepositDetailApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/DepositDetailApiItemResponse'
  '/api/corporate-profiles/{corporateProfileId}/deposits/{depositId}/credit-card-credit':
    post:
      tags:
        - CorporateProfiles
      summary: Voids the deposit credit card ID
      parameters:
        - name: corporateProfileId
          in: path
          description: CorporateProfile ID related to the passenger
          required: true
          schema:
            type: integer
            format: int32
        - name: depositId
          in: path
          description: ID of deposit to charge card
          required: true
          schema:
            type: integer
            format: int32
        - name: creditAmount
          in: query
          description: Amount to credit
          schema:
            type: number
            format: double
            default: 0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DepositDetailApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/DepositDetailApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/DepositDetailApiItemResponse'
  '/api/corporate-profiles/{corporateProfileId}/deposits/{depositId}/usage':
    post:
      tags:
        - CorporateProfiles
      summary: Adds Deposit Usage for the given Deposit
      parameters:
        - name: corporateProfileId
          in: path
          description: CorporateProfile ID related to the passenger
          required: true
          schema:
            type: integer
            format: int32
        - name: depositId
          in: path
          description: ID of deposit to charge card
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Usage info to add to deposit
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DepositUsageInfo'
          application/json:
            schema:
              $ref: '#/components/schemas/DepositUsageInfo'
          text/json:
            schema:
              $ref: '#/components/schemas/DepositUsageInfo'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DepositUsageInfo'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DepositDetailApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/DepositDetailApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/DepositDetailApiItemResponse'
  '/api/corporate-profiles/{corporateProfileId}/deposits/{depositId}/set-deposit-date':
    post:
      tags:
        - CorporateProfiles
      summary: Updates an existing deposits Deposit Date
      description: Special user permission required
      parameters:
        - name: corporateProfileId
          in: path
          description: CorporateProfile ID related to the deposit
          required: true
          schema:
            type: integer
            format: int32
        - name: depositId
          in: path
          description: ID of deposit to update
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Deposit information
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DepositDetail'
          application/json:
            schema:
              $ref: '#/components/schemas/DepositDetail'
          text/json:
            schema:
              $ref: '#/components/schemas/DepositDetail'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DepositDetail'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DepositDetailApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/DepositDetailApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/DepositDetailApiItemResponse'
  '/api/corporate-profiles/{corporateProfileId}/greet-sign-images':
    get:
      tags:
        - CorporateProfiles
      summary: Gets all greet-sign-images for Corporate Profile
      parameters:
        - name: corporateProfileId
          in: path
          description: ID of Corporate Profile owner of greet sign image
          required: true
          schema:
            type: integer
            format: int32
        - name: includeImageData
          in: query
          description: 'If true (default false), image data will be returned as well.'
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GreetSignImageInfoApiItemListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/GreetSignImageInfoApiItemListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/GreetSignImageInfoApiItemListResponse'
    post:
      tags:
        - CorporateProfiles
      summary: Adds a new greet sign image for the Corporate Profile
      parameters:
        - name: corporateProfileId
          in: path
          description: Corporate Profile ID related to the greet sign image
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: 'GreetSignImage information, including base64encoded content'
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/GreetSignImageInfo'
          application/json:
            schema:
              $ref: '#/components/schemas/GreetSignImageInfo'
          text/json:
            schema:
              $ref: '#/components/schemas/GreetSignImageInfo'
          application/*+json:
            schema:
              $ref: '#/components/schemas/GreetSignImageInfo'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GreetSignImageInfoApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/GreetSignImageInfoApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/GreetSignImageInfoApiItemResponse'
  '/api/corporate-profiles/{corporateProfileId}/greet-sign-images/{greetSignId}':
    get:
      tags:
        - CorporateProfiles
      summary: Gets an greet sign image form the database
      parameters:
        - name: corporateProfileId
          in: path
          description: Corporate Profile ID related to the greet sign image
          required: true
          schema:
            type: integer
            format: int32
        - name: greetSignId
          in: path
          description: ID of greet sign image to retriev
          required: true
          schema:
            type: integer
            format: int32
        - name: includeImageData
          in: query
          description: 'If true (default false), image data will be returned as well.'
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GreetSignImageInfoApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/GreetSignImageInfoApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/GreetSignImageInfoApiItemResponse'
    put:
      tags:
        - CorporateProfiles
      summary: Updates an existing greet sign image
      parameters:
        - name: corporateProfileId
          in: path
          description: Corporate Profile ID related to the greet sign image
          required: true
          schema:
            type: integer
            format: int32
        - name: greetSignId
          in: path
          description: ID of greet sign image to update
          required: true
          schema:
            type: integer
            format: int32
        - name: includeImageData
          in: query
          description: 'If true (default false), image data will be updated as well.'
          schema:
            type: boolean
            default: false
      requestBody:
        description: GreetSignImage information
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/GreetSignImageInfo'
          application/json:
            schema:
              $ref: '#/components/schemas/GreetSignImageInfo'
          text/json:
            schema:
              $ref: '#/components/schemas/GreetSignImageInfo'
          application/*+json:
            schema:
              $ref: '#/components/schemas/GreetSignImageInfo'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GreetSignImageInfoApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/GreetSignImageInfoApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/GreetSignImageInfoApiItemResponse'
    delete:
      tags:
        - CorporateProfiles
      summary: Deletes the greet sign image from the database
      parameters:
        - name: corporateProfileId
          in: path
          description: Corporate ProfileID related to the greet sign image
          required: true
          schema:
            type: integer
            format: int32
        - name: greetSignId
          in: path
          description: ID of greet sign image to delete
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  '/api/corporate-profiles/{corporateProfileId}/credit-cards':
    get:
      tags:
        - CorporateProfiles
      summary: Retrieves all corporate profile credit cards (non-privileged information).
      description: 'If you need access to privileged information (Card Holder Name, Expiration Date), you can use the single POST /privileged-request method along with a Credit Card access token.'
      parameters:
        - name: corporateProfileId
          in: path
          description: ID of customer
          required: true
          schema:
            type: integer
            format: int32
        - name: includeInactive
          in: query
          description: 'If true, inactive credit cards will be returned (default: false)'
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CreditCardDetailApiItemListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CreditCardDetailApiItemListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CreditCardDetailApiItemListResponse'
    post:
      tags:
        - CorporateProfiles
      summary: Adds a new credit card for the customer
      parameters:
        - name: corporateProfileId
          in: path
          description: CorporateProfile ID related to the credit card
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Credit card information
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreditCardDetail'
          application/json:
            schema:
              $ref: '#/components/schemas/CreditCardDetail'
          text/json:
            schema:
              $ref: '#/components/schemas/CreditCardDetail'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreditCardDetail'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CreditCardDetailApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CreditCardDetailApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CreditCardDetailApiItemResponse'
  '/api/corporate-profiles/{corporateProfileId}/credit-cards/{creditCardId}':
    get:
      tags:
        - CorporateProfiles
      summary: Retrieves a single corporate profile credit card (non-privileged information).
      description: 'If you need access to privileged information (Card Holder Name, Expiration Date), you can use the single POST /privileged-request method along with a Credit Card access token.'
      parameters:
        - name: corporateProfileId
          in: path
          description: ID of customer
          required: true
          schema:
            type: integer
            format: int32
        - name: creditCardId
          in: path
          description: ID of credit card
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CreditCardDetailApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CreditCardDetailApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CreditCardDetailApiItemResponse'
    put:
      tags:
        - CorporateProfiles
      summary: Updates a single corporate profile credit card (non-privileged information).
      description: 'If you need to update privileged information (Card Holder Name, Expiration Date), you can use the single PUT /privileged-request method along with a Credit Card access token.'
      parameters:
        - name: corporateProfileId
          in: path
          description: ID of customer
          required: true
          schema:
            type: integer
            format: int32
        - name: creditCardId
          in: path
          description: ID of credit card
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Model of credit card to update (non-privileged data will be updated)
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreditCardDetail'
          application/json:
            schema:
              $ref: '#/components/schemas/CreditCardDetail'
          text/json:
            schema:
              $ref: '#/components/schemas/CreditCardDetail'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreditCardDetail'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CreditCardDetailApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CreditCardDetailApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CreditCardDetailApiItemResponse'
  '/api/corporate-profiles/{corporateProfileId}/credit-cards/{creditCardId}/set-inactive':
    post:
      tags:
        - CorporateProfiles
      summary: Sets the current credit card inactive.
      parameters:
        - name: corporateProfileId
          in: path
          description: CorporateProfile ID related to the credit card
          required: true
          schema:
            type: integer
            format: int32
        - name: creditCardId
          in: path
          description: ID of credit card to set inactive
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CreditCardDetailApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CreditCardDetailApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CreditCardDetailApiItemResponse'
  '/api/corporate-profiles/{corporateProfileId}/credit-cards/{creditCardId}/set-active':
    post:
      tags:
        - CorporateProfiles
      summary: Sets the current credit card active.
      parameters:
        - name: corporateProfileId
          in: path
          description: CorporateProfile ID related to the credit card
          required: true
          schema:
            type: integer
            format: int32
        - name: creditCardId
          in: path
          description: ID of credit card to set inactive
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CreditCardDetailApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CreditCardDetailApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CreditCardDetailApiItemResponse'
  '/api/corporate-profiles/{corporateProfileId}/credit-cards/{creditCardId}/set-primary':
    post:
      tags:
        - CorporateProfiles
      summary: Sets the current credit card as primary.
      description: All other cards for this corporate profile will be marked non-primary.
      parameters:
        - name: corporateProfileId
          in: path
          description: CorporateProfile ID related to the credit card
          required: true
          schema:
            type: integer
            format: int32
        - name: creditCardId
          in: path
          description: ID of credit card to set primary
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  '/api/corporate-profiles/{corporateProfileId}/credit-cards/{creditCardId}/set-all-future-reservations':
    post:
      tags:
        - CorporateProfiles
      summary: Sets this credit card on all future reservations for this customer.
      parameters:
        - name: corporateProfileId
          in: path
          description: CorporateProfile ID related to the credit card
          required: true
          schema:
            type: integer
            format: int32
        - name: creditCardId
          in: path
          description: ID of credit card to set
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  '/api/corporate-profiles/{corporateProfileId}/credit-cards/{creditCardId}/credit-card-authorization':
    post:
      tags:
        - CorporateProfiles
      summary: Retrieves an access token for the given user/credit card
      parameters:
        - name: corporateProfileId
          in: path
          description: CorporateProfile ID related to the credit card
          required: true
          schema:
            type: integer
            format: int32
        - name: creditCardId
          in: path
          description: ID of credit card to set
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Authentication request model
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UserAuthRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/UserAuthRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/UserAuthRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UserAuthRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CreditCardAccessTokenApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CreditCardAccessTokenApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CreditCardAccessTokenApiItemResponse'
  '/api/customers/{customerId}':
    get:
      tags:
        - Customers
      summary: Retrieves customer detail by ID
      description: 'Returns a single Detail object for the given customer. Note: This method is Company Security aware and will limit results based on the logged in user.'
      parameters:
        - name: customerId
          in: path
          description: ID of customer
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerDetailApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerDetailApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerDetailApiItemResponse'
    put:
      tags:
        - Customers
      summary: Updated customer record from customer detail
      description: "All fields of the customer detail record will be updated (does not include read-only fields). Once updated, \r\na new CustomerDetail object will be retrieved from the database. Note: This method is Company Security aware and will limit results based on the logged in user."
      parameters:
        - name: customerId
          in: path
          description: ID of customer
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Fully defined Customer Detail to update
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CustomerDetail'
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerDetail'
          text/json:
            schema:
              $ref: '#/components/schemas/CustomerDetail'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CustomerDetail'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerDetailApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerDetailApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerDetailApiItemResponse'
    delete:
      tags:
        - Customers
      summary: Deletes customer from database.
      description: "If the customer has associated references int he database (reservations, invoices, etc.), the delete will fail. \r\n           You should inactivate customer instead. Note: This method is Company Security aware and will limit results based on the logged in user."
      parameters:
        - name: customerId
          in: path
          description: ID of customer to delete
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /api/customers:
    get:
      tags:
        - Customers
      summary: Retrieves a list of customers
      description: 'Returns a list of Information objects for all customers. Note: This method is Company Security aware and will limit results based on the logged in user.'
      parameters:
        - name: includeInactive
          in: query
          description: 'If true, will include inactive customers (default: false)'
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerInfoApiItemListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerInfoApiItemListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerInfoApiItemListResponse'
    post:
      tags:
        - Customers
      summary: Adds the customer details to the database as a new customer
      requestBody:
        description: Full detail fo customer to add
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CustomerDetail'
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerDetail'
          text/json:
            schema:
              $ref: '#/components/schemas/CustomerDetail'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CustomerDetail'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerDetailApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerDetailApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerDetailApiItemResponse'
  /api/customers/search-summary:
    post:
      tags:
        - Customers
      summary: Executes search request for customer
      description: 'Note: This method is Company Security aware and will limit results based on the logged in user.'
      requestBody:
        description: Customer Search Request model
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CustomerSummarySearchRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerSummarySearchRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CustomerSummarySearchRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CustomerSummarySearchRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerSummaryApiItemListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerSummaryApiItemListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerSummaryApiItemListResponse'
  /api/customers/search:
    post:
      tags:
        - Customers
      summary: Executes search request for customer
      description: 'Note: This method is Company Security aware and will limit results based on the logged in user.'
      requestBody:
        description: Customer Search Request model
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CustomerSimpleSearchRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerSimpleSearchRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CustomerSimpleSearchRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CustomerSimpleSearchRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerInfoApiItemListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerInfoApiItemListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerInfoApiItemListResponse'
  /api/customers/default:
    get:
      tags:
        - Customers
      summary: Gets default customer model for add operations
      description: This method retrieves all default settings for the customer record and allows the caller to override set before calling the add method.
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerDetailApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerDetailApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerDetailApiItemResponse'
  '/api/customers/{customerId}/pricing-plans':
    get:
      tags:
        - Customers
      summary: Retrieves pricing plans applicable to given customer
      parameters:
        - name: customerId
          in: path
          description: 'If > 0, inly customer profile plans for given ID will be returned (customer taked precendence over corporate'
          required: true
          schema:
            type: integer
            format: int32
        - name: includePricingId
          in: query
          description: 'If > 0, this plan will be returned in addition to others.'
          schema:
            type: integer
            format: int32
            default: 0
        - name: includeDisabled
          in: query
          description: 'If true, disabled plans will be returned'
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PricingPlanInfoApiItemListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/PricingPlanInfoApiItemListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/PricingPlanInfoApiItemListResponse'
  '/api/customers/{customerId}/pricing-defaults':
    get:
      tags:
        - Customers
      summary: Helper method to retrieve current customer profile pricing defaults
      parameters:
        - name: customerId
          in: path
          description: Customer profile to retrieve
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerPricingDefaultsApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerPricingDefaultsApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerPricingDefaultsApiItemResponse'
  '/api/customers/{customerId}/addresses':
    get:
      tags:
        - Customers
      summary: Gets all addresses for customer
      parameters:
        - name: customerId
          in: path
          description: ID of customer owner of address
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProfileAddressApiItemListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileAddressApiItemListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ProfileAddressApiItemListResponse'
    post:
      tags:
        - Customers
      summary: Adds a new address for the customer
      parameters:
        - name: customerId
          in: path
          description: Customer ID related to the address
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Address information
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ProfileAddress'
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileAddress'
          text/json:
            schema:
              $ref: '#/components/schemas/ProfileAddress'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ProfileAddress'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProfileAddressApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileAddressApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ProfileAddressApiItemResponse'
  '/api/customers/{customerId}/addresses/{addressId}':
    get:
      tags:
        - Customers
      summary: Gets an address form the database
      parameters:
        - name: customerId
          in: path
          description: Customer ID related to the address
          required: true
          schema:
            type: integer
            format: int32
        - name: addressId
          in: path
          description: ID of address to retriev
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProfileAddressApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileAddressApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ProfileAddressApiItemResponse'
    put:
      tags:
        - Customers
      summary: Updates an existing address
      parameters:
        - name: customerId
          in: path
          description: Customer ID related to the address
          required: true
          schema:
            type: integer
            format: int32
        - name: addressId
          in: path
          description: ID of address to update
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Address information
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ProfileAddress'
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileAddress'
          text/json:
            schema:
              $ref: '#/components/schemas/ProfileAddress'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ProfileAddress'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProfileAddressApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileAddressApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ProfileAddressApiItemResponse'
    delete:
      tags:
        - Customers
      summary: Deletes the address from the database
      parameters:
        - name: customerId
          in: path
          description: Customer ID related to the address
          required: true
          schema:
            type: integer
            format: int32
        - name: addressId
          in: path
          description: ID of address to delete
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  '/api/customers/{customerId}/addresses/{addressId}/make-primary':
    post:
      tags:
        - Customers
      summary: Makes the invoice primary for future bookings
      parameters:
        - name: customerId
          in: path
          description: Customer ID related to the address
          required: true
          schema:
            type: integer
            format: int32
        - name: addressId
          in: path
          description: Address ID of address to set primary
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProfileAddressApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileAddressApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ProfileAddressApiItemResponse'
  '/api/customers/{customerId}/addresses/{addressId}/make-invoice-default':
    post:
      tags:
        - Customers
      summary: Sets the current invoice as the Invoice Default.
      parameters:
        - name: customerId
          in: path
          description: Customer ID related to the address
          required: true
          schema:
            type: integer
            format: int32
        - name: addressId
          in: path
          description: ID of address to set invoice default
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ProfileAddressApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileAddressApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ProfileAddressApiItemResponse'
  '/api/customers/{customerId}/contacts':
    get:
      tags:
        - Customers
      summary: Gets all contacts for customer
      parameters:
        - name: customerId
          in: path
          description: ID of customer owner of contact
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ContactInfoApiItemListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ContactInfoApiItemListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ContactInfoApiItemListResponse'
    post:
      tags:
        - Customers
      summary: Adds a new contact for the customer
      parameters:
        - name: customerId
          in: path
          description: Customer ID related to the contact
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Contact information
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ContactInfo'
          application/json:
            schema:
              $ref: '#/components/schemas/ContactInfo'
          text/json:
            schema:
              $ref: '#/components/schemas/ContactInfo'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ContactInfo'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ContactInfoApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ContactInfoApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ContactInfoApiItemResponse'
  '/api/customers/{customerId}/contacts/{contactId}':
    get:
      tags:
        - Customers
      summary: Gets a contact from the database
      parameters:
        - name: customerId
          in: path
          description: Customer ID related to the contact
          required: true
          schema:
            type: integer
            format: int32
        - name: contactId
          in: path
          description: ID of contact to retriev
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ContactInfoApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ContactInfoApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ContactInfoApiItemResponse'
    put:
      tags:
        - Customers
      summary: Updates an existing contact
      parameters:
        - name: customerId
          in: path
          description: Customer ID related to the contact
          required: true
          schema:
            type: integer
            format: int32
        - name: contactId
          in: path
          description: Contact ID to update
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Contact information
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ContactInfo'
          application/json:
            schema:
              $ref: '#/components/schemas/ContactInfo'
          text/json:
            schema:
              $ref: '#/components/schemas/ContactInfo'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ContactInfo'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ContactInfoApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ContactInfoApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ContactInfoApiItemResponse'
    delete:
      tags:
        - Customers
      summary: Deletes the contact from the database
      parameters:
        - name: customerId
          in: path
          description: Customer ID related to the contact
          required: true
          schema:
            type: integer
            format: int32
        - name: contactId
          in: path
          description: ID of contact to delete
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  '/api/customers/{customerId}/credit-cards':
    get:
      tags:
        - Customers
      summary: Retrieves all customer credit cards (non-privileged information).
      description: 'If you need access to privileged information (Card Holder Name, Expiration Date), you can use the single POST /privileged-request method along with a Credit Card access token.'
      parameters:
        - name: customerId
          in: path
          description: ID of customer
          required: true
          schema:
            type: integer
            format: int32
        - name: includeInactive
          in: query
          description: 'If true, inactive credit cards will be returned (default: false)'
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CreditCardDetailApiItemListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CreditCardDetailApiItemListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CreditCardDetailApiItemListResponse'
    post:
      tags:
        - Customers
      summary: Adds a new credit card for the customer
      parameters:
        - name: customerId
          in: path
          description: Customer ID related to the credit card
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Credit card information
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreditCardDetail'
          application/json:
            schema:
              $ref: '#/components/schemas/CreditCardDetail'
          text/json:
            schema:
              $ref: '#/components/schemas/CreditCardDetail'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreditCardDetail'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CreditCardDetailApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CreditCardDetailApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CreditCardDetailApiItemResponse'
  '/api/customers/{customerId}/credit-cards/{creditCardId}':
    get:
      tags:
        - Customers
      summary: Retrieves a single customer credit card (non-privileged information).
      description: 'If you need access to privileged information (Card Holder Name, Expiration Date), you can use the single POST /privileged-request method along with a Credit Card access token.'
      parameters:
        - name: customerId
          in: path
          description: ID of customer
          required: true
          schema:
            type: integer
            format: int32
        - name: creditCardId
          in: path
          description: ID of credit card
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CreditCardDetailApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CreditCardDetailApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CreditCardDetailApiItemResponse'
    put:
      tags:
        - Customers
      summary: Updates a single customer credit card (non-privileged information).
      description: 'If you need to update privileged information (Card Holder Name, Expiration Date), you can use the single PUT /privileged-request method along with a Credit Card access token.'
      parameters:
        - name: customerId
          in: path
          description: ID of customer
          required: true
          schema:
            type: integer
            format: int32
        - name: creditCardId
          in: path
          description: ID of credit card
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Model of credit card to update (non-privileged data will be updated)
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreditCardDetail'
          application/json:
            schema:
              $ref: '#/components/schemas/CreditCardDetail'
          text/json:
            schema:
              $ref: '#/components/schemas/CreditCardDetail'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreditCardDetail'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CreditCardDetailApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CreditCardDetailApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CreditCardDetailApiItemResponse'
    delete:
      tags:
        - Customers
      summary: Deletes the credit card from the database
      parameters:
        - name: customerId
          in: path
          description: Customer ID related to the credit card
          required: true
          schema:
            type: integer
            format: int32
        - name: creditCardId
          in: path
          description: ID of contact to delete
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  '/api/customers/{customerId}/credit-cards/{creditCardId}/set-inactive':
    post:
      tags:
        - Customers
      summary: Sets the current credit card inactive.
      parameters:
        - name: customerId
          in: path
          description: Customer ID related to the credit card
          required: true
          schema:
            type: integer
            format: int32
        - name: creditCardId
          in: path
          description: ID of credit card to set inactive
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CreditCardDetailApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CreditCardDetailApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CreditCardDetailApiItemResponse'
  '/api/customers/{customerId}/credit-cards/{creditCardId}/set-active':
    post:
      tags:
        - Customers
      summary: Sets the current credit card active.
      parameters:
        - name: customerId
          in: path
          description: Customer ID related to the credit card
          required: true
          schema:
            type: integer
            format: int32
        - name: creditCardId
          in: path
          description: ID of credit card to set inactive
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CreditCardDetailApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CreditCardDetailApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CreditCardDetailApiItemResponse'
  '/api/customers/{customerId}/credit-cards/{creditCardId}/set-primary':
    post:
      tags:
        - Customers
      summary: Sets the current credit card as primary.
      description: All other cards for this customer will be marked non-primary.
      parameters:
        - name: customerId
          in: path
          description: Customer ID related to the credit card
          required: true
          schema:
            type: integer
            format: int32
        - name: creditCardId
          in: path
          description: ID of credit card to set primary
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  '/api/customers/{customerId}/credit-cards/{creditCardId}/set-all-future-reservations':
    post:
      tags:
        - Customers
      summary: Sets this credit card on all future reservations for this customer.
      parameters:
        - name: customerId
          in: path
          description: Customer ID related to the credit card
          required: true
          schema:
            type: integer
            format: int32
        - name: creditCardId
          in: path
          description: ID of credit card to set
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  '/api/customers/{customerId}/credit-cards/{creditCardId}/credit-card-authorization':
    post:
      tags:
        - Customers
      summary: Retrieves anm access token for the given user/credit card
      parameters:
        - name: customerId
          in: path
          description: Customer ID related to the credit card
          required: true
          schema:
            type: integer
            format: int32
        - name: creditCardId
          in: path
          description: ID of credit card to set
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Authentication request model
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UserAuthRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/UserAuthRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/UserAuthRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UserAuthRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CreditCardAccessTokenApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CreditCardAccessTokenApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CreditCardAccessTokenApiItemResponse'
  '/api/customers/{customerId}/passengers':
    get:
      tags:
        - Customers
      summary: Gets all passengers for customer
      parameters:
        - name: customerId
          in: path
          description: ID of customer owner of passenger
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PassengerInfoApiItemListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/PassengerInfoApiItemListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/PassengerInfoApiItemListResponse'
    post:
      tags:
        - Customers
      summary: Adds a new passenger for the customer
      parameters:
        - name: customerId
          in: path
          description: Customer ID related to the passenger
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Passenger information
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PassengerInfo'
          application/json:
            schema:
              $ref: '#/components/schemas/PassengerInfo'
          text/json:
            schema:
              $ref: '#/components/schemas/PassengerInfo'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PassengerInfo'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PassengerInfoApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/PassengerInfoApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/PassengerInfoApiItemResponse'
  '/api/customers/{customerId}/passengers/{passengerId}':
    get:
      tags:
        - Customers
      summary: Gets a passenger from the database
      parameters:
        - name: customerId
          in: path
          description: Customer ID related to the passenger
          required: true
          schema:
            type: integer
            format: int32
        - name: passengerId
          in: path
          description: ID of passenger to retrieve
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PassengerInfoApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/PassengerInfoApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/PassengerInfoApiItemResponse'
    put:
      tags:
        - Customers
      summary: Updates an existing passenger
      parameters:
        - name: customerId
          in: path
          description: Customer ID related to the passenger
          required: true
          schema:
            type: integer
            format: int32
        - name: passengerId
          in: path
          description: ID of passenger to update
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Passenger information
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/PassengerInfo'
          application/json:
            schema:
              $ref: '#/components/schemas/PassengerInfo'
          text/json:
            schema:
              $ref: '#/components/schemas/PassengerInfo'
          application/*+json:
            schema:
              $ref: '#/components/schemas/PassengerInfo'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PassengerInfoApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/PassengerInfoApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/PassengerInfoApiItemResponse'
    delete:
      tags:
        - Customers
      summary: Deletes the passenger from the database
      parameters:
        - name: customerId
          in: path
          description: Customer ID related to the passenger
          required: true
          schema:
            type: integer
            format: int32
        - name: passengerId
          in: path
          description: ID of passenger to delete
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  '/api/customers/{customerId}/deposits':
    get:
      tags:
        - Customers
      summary: Gets all Deposits for Customer
      parameters:
        - name: customerId
          in: path
          description: ID of customer
          required: true
          schema:
            type: integer
            format: int32
        - name: showOnlyAvailable
          in: query
          description: 'if true (default), only those deposits with value not used will be returned.'
          schema:
            type: boolean
            default: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DepositDetailApiItemListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/DepositDetailApiItemListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/DepositDetailApiItemListResponse'
    post:
      tags:
        - Customers
      summary: Adds a new deposit for the customer
      description: "DepositUsage cannot be set here and will be disregarded int the model.\r\nDepositDate is internally managed and cannot be set explicitly"
      parameters:
        - name: customerId
          in: path
          description: Customer ID related to the deposit
          required: true
          schema:
            type: integer
            format: int32
        - name: sendReceiptCustomer
          in: query
          description: 'If true (1), emails corresponding customer.'
          schema:
            type: boolean
            default: false
      requestBody:
        description: Deposit information
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DepositDetail'
          application/json:
            schema:
              $ref: '#/components/schemas/DepositDetail'
          text/json:
            schema:
              $ref: '#/components/schemas/DepositDetail'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DepositDetail'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DepositDetailApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/DepositDetailApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/DepositDetailApiItemResponse'
  '/api/customers/{customerId}/deposits/{depositId}':
    get:
      tags:
        - Customers
      summary: Gets a deposit from the database
      parameters:
        - name: customerId
          in: path
          description: Customer ID related to the passenger
          required: true
          schema:
            type: integer
            format: int32
        - name: depositId
          in: path
          description: ID of deposit to retrieve
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DepositDetailApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/DepositDetailApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/DepositDetailApiItemResponse'
    put:
      tags:
        - Customers
      summary: Updates an existing deposit
      description: "DepositUsage cannot be set here and will be disregarded int the model.\r\nDepositDate is internally managed and cannot be set explicitly"
      parameters:
        - name: customerId
          in: path
          description: Customer ID related to the deposit
          required: true
          schema:
            type: integer
            format: int32
        - name: depositId
          in: path
          description: ID of deposit to update
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: Deposit information
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DepositDetail'
          application/json:
            schema:
              $ref: '#/components/schemas/DepositDetail'
          text/json:
            schema:
              $ref: '#/components/schemas/DepositDetail'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DepositDetail'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DepositDetailApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/DepositDetailApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/DepositDetailApiItemResponse'
    delete:
      tags:
        - Customers
      summary: Deletes the deposit from the database
      parameters:
        - name: customerId
          in: path
          description: Customer ID related to the deposit
          required: true
          schema:
            type: integer
            format: int32
        - name: depositId
          in: path
          description: ID of deposit to delete
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  '/api/customers/{customerId}/greet-sign-images':
    get:
      tags:
        - Customers
      summary: Gets all greet-sign-images for customer
      parameters:
        - name: customerId
          in: path
          description: ID of customer owner of greet sign image
          required: true
          schema:
            type: integer
            format: int32
        - name: includeImageData
          in: query
          description: ''
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GreetSignImageInfoApiItemListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/GreetSignImageInfoApiItemListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/GreetSignImageInfoApiItemListResponse'
    post:
      tags:
        - Customers
      summary: Adds a new greet sign image for the customer
      parameters:
        - name: customerId
          in: path
          description: Customer ID related to the greet sign image
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: 'GreetSignImage information, including base64encoded content'
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/GreetSignImageInfo'
          application/json:
            schema:
              $ref: '#/components/schemas/GreetSignImageInfo'
          text/json:
            schema:
              $ref: '#/components/schemas/GreetSignImageInfo'
          application/*+json:
            schema:
              $ref: '#/components/schemas/GreetSignImageInfo'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GreetSignImageInfoApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/GreetSignImageInfoApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/GreetSignImageInfoApiItemResponse'
  '/api/customers/{customerId}/greet-sign-images/{greetSignId}':
    get:
      tags:
        - Customers
      summary: Gets an greet sign image form the database
      parameters:
        - name: customerId
          in: path
          description: Customer ID related to the greet sign image
          required: true
          schema:
            type: integer
            format: int32
        - name: greetSignId
          in: path
          description: ID of greet sign image to retriev
          required: true
          schema:
            type: integer
            format: int32
        - name: includeImageData
          in: query
          description: ''
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GreetSignImageInfoApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/GreetSignImageInfoApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/GreetSignImageInfoApiItemResponse'
    put:
      tags:
        - Customers
      summary: Updates an existing greet sign image
      parameters:
        - name: customerId
          in: path
          description: Customer ID related to the greet sign image
          required: true
          schema:
            type: integer
            format: int32
        - name: greetSignId
          in: path
          description: ID of greet sign image to update
          required: true
          schema:
            type: integer
            format: int32
        - name: includeImageData
          in: query
          description: ''
          schema:
            type: boolean
      requestBody:
        description: GreetSignImage information
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/GreetSignImageInfo'
          application/json:
            schema:
              $ref: '#/components/schemas/GreetSignImageInfo'
          text/json:
            schema:
              $ref: '#/components/schemas/GreetSignImageInfo'
          application/*+json:
            schema:
              $ref: '#/components/schemas/GreetSignImageInfo'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GreetSignImageInfoApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/GreetSignImageInfoApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/GreetSignImageInfoApiItemResponse'
    delete:
      tags:
        - Customers
      summary: Deletes the greet sign image from the database
      parameters:
        - name: customerId
          in: path
          description: Customer ID related to the greet sign image
          required: true
          schema:
            type: integer
            format: int32
        - name: greetSignId
          in: path
          description: ID of greet sign image to delete
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /api/employees:
    get:
      tags:
        - Employees
      summary: Returns list of employees
      parameters:
        - name: includeInactive
          in: query
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/EmployeeInfoApiItemListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeInfoApiItemListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/EmployeeInfoApiItemListResponse'
  /api/flights/verify-flight:
    post:
      tags:
        - Flights
      summary: Returns list of greet signs form customer or corporate profiel where the profile is references by the reservation.
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FlightVerifyRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/FlightVerifyRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/FlightVerifyRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/FlightVerifyRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/FlightVerifyResultApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/FlightVerifyResultApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/FlightVerifyResultApiItemResponse'
  /api/greet-sign-images:
    post:
      tags:
        - GreetSignImages
      summary: Returns list of greet signs form customer or corporate profiel where the profile is references by the reservation.
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ReservationGreetSignImageRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationGreetSignImageRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ReservationGreetSignImageRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ReservationGreetSignImageRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GreetSignImageInfoApiItemListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/GreetSignImageInfoApiItemListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/GreetSignImageInfoApiItemListResponse'
  /api/incidents/search:
    post:
      tags:
        - Incidents
      summary: Returns list of airlines configured for customer
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/IncidentsSearchRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/IncidentsSearchRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/IncidentsSearchRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/IncidentsSearchRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/IncidentInfoApiItemListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentInfoApiItemListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/IncidentInfoApiItemListResponse'
  /api/incidents:
    post:
      tags:
        - Incidents
      summary: Adds new incident to database
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/IncidentInfo'
          application/json:
            schema:
              $ref: '#/components/schemas/IncidentInfo'
          text/json:
            schema:
              $ref: '#/components/schemas/IncidentInfo'
          application/*+json:
            schema:
              $ref: '#/components/schemas/IncidentInfo'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/IncidentInfoApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentInfoApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/IncidentInfoApiItemResponse'
  '/api/incidents/{incidentId}':
    get:
      tags:
        - Incidents
      summary: Retrieved a single incident
      parameters:
        - name: incidentId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/IncidentInfoApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentInfoApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/IncidentInfoApiItemResponse'
    post:
      tags:
        - Incidents
      summary: Updates incident matching id
      parameters:
        - name: incidentId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/IncidentInfo'
          application/json:
            schema:
              $ref: '#/components/schemas/IncidentInfo'
          text/json:
            schema:
              $ref: '#/components/schemas/IncidentInfo'
          application/*+json:
            schema:
              $ref: '#/components/schemas/IncidentInfo'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/IncidentInfoApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentInfoApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/IncidentInfoApiItemResponse'
    delete:
      tags:
        - Incidents
      summary: Deletes incident matching id
      parameters:
        - name: incidentId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /api/pricing-plans:
    get:
      tags:
        - PricingPlans
      summary: Retrieves list of pricing plans per options
      parameters:
        - name: includeDisabled
          in: query
          description: 'If true, inactive plans will be returned'
          schema:
            type: boolean
            default: false
        - name: customerProfileID
          in: query
          description: 'If > 0, inly customer profile plans for given ID will be returned (customer taked precendence over corporate'
          schema:
            type: integer
            format: int32
            default: 0
        - name: includePricingId
          in: query
          description: 'If > 0, this plan will be returned in addition to others.'
          schema:
            type: integer
            format: int32
            default: 0
        - name: corporateProfileId
          in: query
          description: 'If > 0, only corporate pricing plans for given ID  will be returned'
          schema:
            type: integer
            format: int32
            default: 0
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PricingPlanInfoApiItemListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/PricingPlanInfoApiItemListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/PricingPlanInfoApiItemListResponse'
  '/api/pricing-plans/{pricingId}/vehicle-types':
    get:
      tags:
        - PricingPlans
      summary: Retrieved Vehicle Types for specific pricing plan
      parameters:
        - name: pricingId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/VehicleTypeInfoApiItemListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleTypeInfoApiItemListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/VehicleTypeInfoApiItemListResponse'
  '/api/pricing-plans/{pricingId}/vehicle-types/{vehicleTypeId}/point-to-points':
    get:
      tags:
        - PricingPlans
      summary: Retrieves applicable point-to-points per pricing/vehicle type combination
      description: 'If no Reservation Type is specified, all zones for a given plan/vehicle type will be returned (performance impact)'
      parameters:
        - name: pricingId
          in: path
          description: Pricing IS to query
          required: true
          schema:
            type: integer
            format: int32
        - name: vehicleTypeId
          in: path
          description: Vehicle Type to query
          required: true
          schema:
            type: integer
            format: int32
        - name: isGround
          in: query
          description: 'If true, only GROUND point-to-points will be returned'
          schema:
            type: boolean
            default: false
        - name: isArrival
          in: query
          description: 'If true, only ARRIVAL point-to-points will be returned'
          schema:
            type: boolean
            default: false
        - name: isDeparture
          in: query
          description: 'If true, only DEPARTURE point-to-points will be returned'
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/PricingVehicleTypeZoneInfoApiItemListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/PricingVehicleTypeZoneInfoApiItemListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/PricingVehicleTypeZoneInfoApiItemListResponse'
  /api/quote-packages/generate:
    post:
      tags:
        - Quotes
      summary: Generate Quote Package
      description: "Requires [QuoteCreate] Permission\r\n            \r\n            Quote packages contain one or more individual quotes. Quotes are specific to a single Pricing Plan/Vehicle Type combination. \r\n            One pricing plan can have a maximum of one vehicle type quote. \r\n            \r\n            During the booking process a single quote from the quote package will be executed.\r\n            \r\n            Permission Requirement: QuoteCreate"
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/QuoteRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/QuoteRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/QuoteRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/QuoteRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/QuotePackageApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/QuotePackageApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/QuotePackageApiItemResponse'
  '/api/quote-packages/{quotePackageId}':
    get:
      tags:
        - Quotes
      summary: Retrieves cached quote package
      description: "Requires [QuoteRead] Permission\r\n            \r\n            Packages are cached for a minimum number minutes.\r\n            \r\n            Permission Requirement: QuoteRead"
      parameters:
        - name: quotePackageId
          in: path
          description: ''
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/QuotePackageApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/QuotePackageApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/QuotePackageApiItemResponse'
  '/api/quote-packages/{quotePackageId}/quotes/{quoteId}':
    get:
      tags:
        - Quotes
      summary: Retrieves single cached quote (plan.vehicle type)
      description: "Requires [QuoteRead] Permission\r\n            \r\n            Quotes are cached for a minimum number minutes."
      parameters:
        - name: quoteId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: quotePackageId
          in: path
          description: ''
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/QuoteApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/QuoteApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/QuoteApiItemResponse'
  '/api/quote-packages/{quotePackageId}/quotes/{quoteId}/book':
    post:
      tags:
        - Quotes
      summary: Books quote into the FASTTRAK Database
      description: "Requires [QuoteCreate] Permission\r\n            \r\n            Quotes are cached for a minimum number minutes."
      parameters:
        - name: quotePackageId
          in: path
          description: ''
          required: true
          schema:
            type: string
        - name: quoteId
          in: path
          description: ''
          required: true
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/QuoteBookRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/QuoteBookRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/QuoteBookRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/QuoteBookRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ReservationUpdateOperationResultApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationUpdateOperationResultApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ReservationUpdateOperationResultApiItemResponse'
  /api/reservations/search:
    post:
      tags:
        - Reservations
      summary: Retrieves trip detail via filtered date request
      description: Additional passengers and stops are NOT loaded as part of a trip search request
      requestBody:
        description: Details of search request
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ReservationSearchRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationSearchRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ReservationSearchRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ReservationSearchRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ReservationInfoIEnumerableApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationInfoIEnumerableApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ReservationInfoIEnumerableApiItemResponse'
  /api/reservations/search-advanced:
    post:
      tags:
        - Reservations
      summary: Executes advacned search per criteria
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ReservationAdvancedSearchRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationAdvancedSearchRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ReservationAdvancedSearchRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ReservationAdvancedSearchRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ReservationInfoIEnumerableApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationInfoIEnumerableApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ReservationInfoIEnumerableApiItemResponse'
  /api/reservations/defaults-request:
    post:
      tags:
        - Reservations
      summary: Retrieves details/default for a reservation
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ReservationDefaultsRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationDefaultsRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ReservationDefaultsRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ReservationDefaultsRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ReservationDetailApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationDetailApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ReservationDetailApiItemResponse'
  '/api/reservations/{reservationId}':
    get:
      tags:
        - Reservations
      summary: Gets trip detail by internal ID
      parameters:
        - name: reservationId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ReservationDetailApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationDetailApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ReservationDetailApiItemResponse'
    delete:
      tags:
        - Reservations
      summary: Deletes reservation
      description: 'If the reservation has been farmed, the delete will fail. The farm request must be cancelled before attempting a delete.'
      parameters:
        - name: reservationId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    put:
      tags:
        - Reservations
      summary: Adds or updates all details of the given reservation
      parameters:
        - name: reservationId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ReservationDetail'
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationDetail'
          text/json:
            schema:
              $ref: '#/components/schemas/ReservationDetail'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ReservationDetail'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ReservationDetailApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationDetailApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ReservationDetailApiItemResponse'
  /api/reservations/quick-edit:
    post:
      tags:
        - Reservations
      summary: Supports quick edit functionality for supported fields on one or more reservations
      requestBody:
        description: Defines the field edit information to be set
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ReservationFieldEditRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationFieldEditRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ReservationFieldEditRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ReservationFieldEditRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ReservationUpdateResultApiItemListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationUpdateResultApiItemListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ReservationUpdateResultApiItemListResponse'
  /api/reservations:
    post:
      tags:
        - Reservations
      summary: Adds or updates all details of the given reservation
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ReservationDetail'
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationDetail'
          text/json:
            schema:
              $ref: '#/components/schemas/ReservationDetail'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ReservationDetail'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ReservationDetailApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationDetailApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ReservationDetailApiItemResponse'
  /api/reservations/new-customer:
    post:
      tags:
        - Reservations
      summary: 'Adds a new Reservation, new Customer and new Credit Card (if set) as defined in request'
      description: "If customer ID is set in detail, existing customer is used instead.\r\n            If credit card ID is set in detail, existing credit card is used instead"
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ReservationAddWithNewCustomerRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationAddWithNewCustomerRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ReservationAddWithNewCustomerRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ReservationAddWithNewCustomerRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ReservationDetailApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationDetailApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ReservationDetailApiItemResponse'
  '/api/reservations/{reservationId}/update':
    post:
      tags:
        - Reservations
      summary: Adds or updates all details of the given reservation
      parameters:
        - name: reservationId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ReservationUpdateRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationUpdateRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ReservationUpdateRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ReservationUpdateRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ReservationDetailApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationDetailApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ReservationDetailApiItemResponse'
  '/api/reservations/{reservationId}/generate-segment-id':
    post:
      tags:
        - Reservations
      summary: Creates or retrieves segmented reservation ID for reservation
      description: 'If segment ID exists, it will be returned. Otherwise, a new segment ID will be generated and saved into the reservation.'
      parameters:
        - name: reservationId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ReservationSegmentInfoApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationSegmentInfoApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ReservationSegmentInfoApiItemResponse'
  '/api/reservations/{reservationId}/customer':
    get:
      tags:
        - Reservations
      summary: Retrieves customer detail for a given reservatoin
      parameters:
        - name: reservationId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CustomerDetailIEnumerableApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerDetailIEnumerableApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CustomerDetailIEnumerableApiItemResponse'
  '/api/reservations/{reservationId}/available-drivers':
    get:
      tags:
        - Reservations
      summary: Retrieves list of available drivers for reservation
      parameters:
        - name: reservationId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AvailableDriversResponseIEnumerableApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/AvailableDriversResponseIEnumerableApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/AvailableDriversResponseIEnumerableApiItemResponse'
  /api/reservations/available-drivers:
    post:
      tags:
        - Reservations
      summary: Retrieves list of available drivers for reservation
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AvailableDriversRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/AvailableDriversRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/AvailableDriversRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AvailableDriversRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AvailableDriversResponseIEnumerableApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/AvailableDriversResponseIEnumerableApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/AvailableDriversResponseIEnumerableApiItemResponse'
  '/api/reservations/{reservationId}/assign-driver':
    post:
      tags:
        - Reservations
      summary: Assigns the driver to the target reservation
      parameters:
        - name: reservationId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AssignDriverRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/AssignDriverRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/AssignDriverRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AssignDriverRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AssignDriverResponseApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/AssignDriverResponseApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/AssignDriverResponseApiItemResponse'
  '/api/reservations/{reservationId}/calculate-garage-time-estimate':
    post:
      tags:
        - Reservations
      summary: Retrieves garage time geo estimae
      parameters:
        - name: reservationId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/GarageTimeEstimateRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/GarageTimeEstimateRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/GarageTimeEstimateRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/GarageTimeEstimateRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/GarageTimeEstimateResponseIEnumerableApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/GarageTimeEstimateResponseIEnumerableApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/GarageTimeEstimateResponseIEnumerableApiItemResponse'
  '/api/reservations/{reservationId}/assign-status':
    post:
      tags:
        - Reservations
      summary: Assigns status for given reservation
      parameters:
        - name: reservationId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AssignStatusRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/AssignStatusRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/AssignStatusRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AssignStatusRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AssignStatusResponseApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/AssignStatusResponseApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/AssignStatusResponseApiItemResponse'
  '/api/reservations/{reservationId}/assign-vehicle':
    post:
      tags:
        - Reservations
      summary: Assigns status for given reservation
      parameters:
        - name: reservationId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AssignVehicleRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/AssignVehicleRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/AssignVehicleRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AssignVehicleRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AssignVehicleResponseApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/AssignVehicleResponseApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/AssignVehicleResponseApiItemResponse'
  '/api/reservations/{reservationId}/additional-stops':
    get:
      tags:
        - Reservations
      summary: Returns additional stop information for the reservation
      parameters:
        - name: reservationId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AdditionalStopInfoApiItemListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/AdditionalStopInfoApiItemListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/AdditionalStopInfoApiItemListResponse'
    delete:
      tags:
        - Reservations
      summary: Permanently removes all stops from a reservation
      parameters:
        - name: reservationId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    post:
      tags:
        - Reservations
      summary: Adds a single stop to a reservation
      parameters:
        - name: reservationId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AdditionalStopInfo'
          application/json:
            schema:
              $ref: '#/components/schemas/AdditionalStopInfo'
          text/json:
            schema:
              $ref: '#/components/schemas/AdditionalStopInfo'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AdditionalStopInfo'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AdditionalStopInfoApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/AdditionalStopInfoApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/AdditionalStopInfoApiItemResponse'
  '/api/reservations/{reservationId}/additional-stops/{additionalStopId}':
    get:
      tags:
        - Reservations
      summary: Retrieves detail for a single reservation stop
      parameters:
        - name: reservationId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
        - name: additionalStopId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AdditionalStopInfoApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/AdditionalStopInfoApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/AdditionalStopInfoApiItemResponse'
    put:
      tags:
        - Reservations
      summary: Updates reservation stop
      parameters:
        - name: reservationId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
        - name: additionalStopId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AdditionalStopInfo'
          application/json:
            schema:
              $ref: '#/components/schemas/AdditionalStopInfo'
          text/json:
            schema:
              $ref: '#/components/schemas/AdditionalStopInfo'
          application/*+json:
            schema:
              $ref: '#/components/schemas/AdditionalStopInfo'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/AdditionalStopInfoApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/AdditionalStopInfoApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/AdditionalStopInfoApiItemResponse'
    delete:
      tags:
        - Reservations
      summary: Deletes reservation stop
      parameters:
        - name: reservationId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
        - name: additionalStopId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  '/api/reservations/{reservationId}/additional-stops/{additionalStopId}/move-up':
    post:
      tags:
        - Reservations
      summary: Moves the stop order up by one (lower stop order)
      parameters:
        - name: reservationId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
        - name: additionalStopId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  '/api/reservations/{reservationId}/additional-stops/{additionalStopId}/move-down':
    post:
      tags:
        - Reservations
      summary: Moves the stop order down by one (higher stop order)
      parameters:
        - name: reservationId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
        - name: additionalStopId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  '/api/reservations/{reservationId}/additional-stops/{additionalStopId}/move':
    post:
      tags:
        - Reservations
      summary: Moves the stop order to a specific index
      parameters:
        - name: reservationId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
        - name: additionalStopId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
        - name: stopOrder
          in: query
          description: ''
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  '/api/reservations/{reservationId}/notes':
    get:
      tags:
        - Reservations
      summary: Returns list of reservation notes for reservation
      parameters:
        - name: reservationId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ReservationNoteInfoApiItemListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationNoteInfoApiItemListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ReservationNoteInfoApiItemListResponse'
    post:
      tags:
        - Reservations
      summary: Adds new reservation note to reservation
      parameters:
        - name: reservationId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ReservationNoteInfo'
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationNoteInfo'
          text/json:
            schema:
              $ref: '#/components/schemas/ReservationNoteInfo'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ReservationNoteInfo'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ReservationNoteInfoApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationNoteInfoApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ReservationNoteInfoApiItemResponse'
  '/api/reservations/{reservationId}/notes/{reservationNoteId}':
    get:
      tags:
        - Reservations
      summary: Retrieved a single reservation note
      parameters:
        - name: reservationId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
        - name: reservationNoteId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ReservationNoteInfoApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationNoteInfoApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ReservationNoteInfoApiItemResponse'
    put:
      tags:
        - Reservations
      summary: Updates reservation note matching reservationNoteId
      parameters:
        - name: reservationId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
        - name: reservationNoteId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ReservationNoteInfo'
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationNoteInfo'
          text/json:
            schema:
              $ref: '#/components/schemas/ReservationNoteInfo'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ReservationNoteInfo'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ReservationNoteInfoApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationNoteInfoApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ReservationNoteInfoApiItemResponse'
    delete:
      tags:
        - Reservations
      summary: Deletes reservation note matching id
      parameters:
        - name: reservationId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
        - name: reservationNoteId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  '/api/reservations/{reservationId}/deposits/summary':
    get:
      tags:
        - Reservations
      summary: Return summary or reservation deposits and credit card authorizations
      parameters:
        - name: reservationId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ReservationDepositDetailApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationDepositDetailApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ReservationDepositDetailApiItemResponse'
  '/api/reservations/{reservationId}/deposits/{depositId}':
    get:
      tags:
        - Reservations
      summary: Gets a single reservation deposit
      parameters:
        - name: reservationId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
        - name: depositId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DepositDetailApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/DepositDetailApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/DepositDetailApiItemResponse'
    put:
      tags:
        - Reservations
      summary: Updates a reservation deposit record
      parameters:
        - name: reservationId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
        - name: depositId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DepositDetail'
          application/json:
            schema:
              $ref: '#/components/schemas/DepositDetail'
          text/json:
            schema:
              $ref: '#/components/schemas/DepositDetail'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DepositDetail'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DepositDetailApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/DepositDetailApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/DepositDetailApiItemResponse'
    delete:
      tags:
        - Reservations
      summary: Deletes a single deposit record for a reservation
      parameters:
        - name: reservationId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
        - name: depositId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DepositDetailApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/DepositDetailApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/DepositDetailApiItemResponse'
  '/api/reservations/{reservationId}/deposits':
    post:
      tags:
        - Reservations
      summary: Adds a single reservation deposit
      parameters:
        - name: reservationId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DepositDetail'
          application/json:
            schema:
              $ref: '#/components/schemas/DepositDetail'
          text/json:
            schema:
              $ref: '#/components/schemas/DepositDetail'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DepositDetail'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DepositDetailApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/DepositDetailApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/DepositDetailApiItemResponse'
  '/api/reservations/{reservationId}/deposits/pre-auth':
    post:
      tags:
        - Reservations
      summary: Adds Credit Card Authorization to Reservation
      description: 'New only. If previous authorization exists, it must be removed prior to adding a new one'
      parameters:
        - name: reservationId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CreditCardAuthorizationInfo'
          application/json:
            schema:
              $ref: '#/components/schemas/CreditCardAuthorizationInfo'
          text/json:
            schema:
              $ref: '#/components/schemas/CreditCardAuthorizationInfo'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CreditCardAuthorizationInfo'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CreditCardAuthorizationInfoApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CreditCardAuthorizationInfoApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CreditCardAuthorizationInfoApiItemResponse'
    get:
      tags:
        - Reservations
      summary: 'Retrieves current reservation credit card authroization, or null if none'
      parameters:
        - name: reservationId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CreditCardAuthorizationInfoApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/CreditCardAuthorizationInfoApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/CreditCardAuthorizationInfoApiItemResponse'
    delete:
      tags:
        - Reservations
      summary: Deletes Credit Card Authorization for given reservation
      description: 'If authorization is not found, success status with message will be returned.'
      parameters:
        - name: reservationId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  '/api/reservations/{reservationId}/change-log':
    get:
      tags:
        - Reservations
      summary: Gets summary of change log for given reservation
      parameters:
        - name: reservationId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ChangeLogSummaryApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ChangeLogSummaryApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ChangeLogSummaryApiItemResponse'
  '/api/reservations/{reservationId}/change-log/acknowledge':
    post:
      tags:
        - Reservations
      summary: Acknowledges all change log changes
      parameters:
        - name: reservationId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  '/api/reservations/{reservationId}/reservation-agent-pays':
    get:
      tags:
        - Reservations
      summary: Retrieves agent pay for a reservation.
      parameters:
        - name: reservationId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ReservationAgentPayInfoApiItemListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationAgentPayInfoApiItemListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ReservationAgentPayInfoApiItemListResponse'
    post:
      tags:
        - Reservations
      summary: Adds new reservation agent pay to reservation
      parameters:
        - name: reservationId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ReservationAgentPayInfo'
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationAgentPayInfo'
          text/json:
            schema:
              $ref: '#/components/schemas/ReservationAgentPayInfo'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ReservationAgentPayInfo'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ReservationAgentPayInfoApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationAgentPayInfoApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ReservationAgentPayInfoApiItemResponse'
  '/api/reservations/{reservationId}/reservation-agent-pays/pay-update':
    post:
      tags:
        - Reservations
      summary: Update reservation agent pay records as to pay or not to pay
      parameters:
        - name: reservationId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ReservationAgentPayUpdateRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationAgentPayUpdateRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/ReservationAgentPayUpdateRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ReservationAgentPayUpdateRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  '/api/reservations/{reservationId}/reservation-agent-pays/{reservationAgentPayId}':
    get:
      tags:
        - Reservations
      summary: Retrieved a single reservation agent pay
      parameters:
        - name: reservationId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
        - name: reservationAgentPayId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ReservationAgentPayInfoApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationAgentPayInfoApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ReservationAgentPayInfoApiItemResponse'
    put:
      tags:
        - Reservations
      summary: Updates reservation agent pay matching reservationNoteId
      parameters:
        - name: reservationId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
        - name: reservationAgentPayId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ReservationAgentPayInfo'
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationAgentPayInfo'
          text/json:
            schema:
              $ref: '#/components/schemas/ReservationAgentPayInfo'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ReservationAgentPayInfo'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ReservationAgentPayInfoApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationAgentPayInfoApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ReservationAgentPayInfoApiItemResponse'
    delete:
      tags:
        - Reservations
      summary: Deletes reservation agent pay matching id
      parameters:
        - name: reservationId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
        - name: reservationAgentPayId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  '/api/reservations/{reservationId}/update-affiliate-pay':
    put:
      tags:
        - Reservations
      summary: Updates reservation affiliate information including pay and assigns affiliate if necessary
      parameters:
        - name: reservationId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ReservationAffiliatePayInfo'
          application/json:
            schema:
              $ref: '#/components/schemas/ReservationAffiliatePayInfo'
          text/json:
            schema:
              $ref: '#/components/schemas/ReservationAffiliatePayInfo'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ReservationAffiliatePayInfo'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ReservationDetailApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationDetailApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ReservationDetailApiItemResponse'
  '/api/reservations/{reservationId}/employee-pays':
    get:
      tags:
        - Reservations
      summary: Returns all employee pay items for a reservation
      parameters:
        - name: reservationId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/EmployeePayInfoApiItemListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeePayInfoApiItemListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/EmployeePayInfoApiItemListResponse'
    post:
      tags:
        - Reservations
      summary: Adds new reservation employee pay to reservation
      parameters:
        - name: reservationId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EmployeePayInfo'
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeePayInfo'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeePayInfo'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EmployeePayInfo'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/EmployeePayInfoApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeePayInfoApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/EmployeePayInfoApiItemResponse'
  '/api/reservations/{reservationId}/employee-pays/{employeePayId}':
    get:
      tags:
        - Reservations
      summary: Retrieved a single reservation agent pay
      parameters:
        - name: reservationId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
        - name: employeePayId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/EmployeePayInfoApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeePayInfoApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/EmployeePayInfoApiItemResponse'
    put:
      tags:
        - Reservations
      summary: 'Updates reservation employee pay matching employee{ayId'
      parameters:
        - name: reservationId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
        - name: employeePayId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EmployeePayInfo'
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeePayInfo'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeePayInfo'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EmployeePayInfo'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/EmployeePayInfoApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeePayInfoApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/EmployeePayInfoApiItemResponse'
    delete:
      tags:
        - Reservations
      summary: Deletes reservation employee pay matching id
      parameters:
        - name: reservationId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
        - name: employeePayId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  '/api/reservations/{reservationId}/employee-pays/{employeePayId}/line-items':
    get:
      tags:
        - Reservations
      summary: Returns all employee pay line items for a reservation
      parameters:
        - name: reservationId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
        - name: employeePayId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/EmployeePayLineItemInfoApiItemListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeePayLineItemInfoApiItemListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/EmployeePayLineItemInfoApiItemListResponse'
    post:
      tags:
        - Reservations
      summary: Adds a reservation employee pay line item
      parameters:
        - name: reservationId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
        - name: employeePayId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EmployeePayLineItemInfo'
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeePayLineItemInfo'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeePayLineItemInfo'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EmployeePayLineItemInfo'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/EmployeePayLineItemInfoApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeePayLineItemInfoApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/EmployeePayLineItemInfoApiItemResponse'
  '/api/reservations/{reservationId}/employee-pays/{employeePayId}/line-items/{employeePayLineItemId}':
    get:
      tags:
        - Reservations
      summary: Gets all line items for given employee pay
      parameters:
        - name: reservationId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
        - name: employeePayId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
        - name: employeePayLineItemId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/EmployeePayLineItemInfoApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeePayLineItemInfoApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/EmployeePayLineItemInfoApiItemResponse'
    put:
      tags:
        - Reservations
      summary: Updates line item for given reservation employee pay
      parameters:
        - name: reservationId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
        - name: employeePayId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
        - name: employeePayLineItemId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: ''
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EmployeePayLineItemInfo'
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeePayLineItemInfo'
          text/json:
            schema:
              $ref: '#/components/schemas/EmployeePayLineItemInfo'
          application/*+json:
            schema:
              $ref: '#/components/schemas/EmployeePayLineItemInfo'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/EmployeePayLineItemInfoApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeePayLineItemInfoApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/EmployeePayLineItemInfoApiItemResponse'
    delete:
      tags:
        - Reservations
      summary: Deletes line item for given reservation employee pay
      parameters:
        - name: reservationId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
        - name: employeePayId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
        - name: employeePayLineItemId
          in: path
          description: ''
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /api/reservations/blackout-dates:
    get:
      tags:
        - Reservations
      summary: Retrieves blackout dates as defined in the application
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/BlackoutDateInfoIEnumerableApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/BlackoutDateInfoIEnumerableApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/BlackoutDateInfoIEnumerableApiItemResponse'
  /api/systems/session-start:
    post:
      tags:
        - Systems
      summary: Starts a new session for the given user and returns initial user detail
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SessionInformationApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/SessionInformationApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/SessionInformationApiItemResponse'
  /api/systems/settings:
    get:
      tags:
        - Systems
      summary: Gets System Settings for given user
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SettingConfigApiItemListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/SettingConfigApiItemListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/SettingConfigApiItemListResponse'
  /api/systems/data-list-detail:
    post:
      tags:
        - Systems
      summary: '[Anonymous] Retrieves login availaility, system messages, etc.'
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/DataListRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/DataListRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/DataListRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/DataListRequest'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/DataListDetailApiItemListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/DataListDetailApiItemListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/DataListDetailApiItemListResponse'
  /api/systems/status-definition:
    get:
      tags:
        - Systems
      summary: Retrieves status definition information
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/ReservationStatusTypeInfoApiItemListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/ReservationStatusTypeInfoApiItemListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/ReservationStatusTypeInfoApiItemListResponse'
  /api/systems/timezone-definition:
    get:
      tags:
        - Systems
      summary: Retrieves status definition information
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TimeZoneDetailApiItemListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/TimeZoneDetailApiItemListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/TimeZoneDetailApiItemListResponse'
  /api/test/request-info:
    get:
      tags:
        - Test
      summary: Echos headers and parameters for request
      responses:
        '200':
          description: Success
  /api/test/authorization-required:
    get:
      tags:
        - Test
      summary: Test APIM passthrough
      responses:
        '200':
          description: Success
  /api/test/read-token:
    get:
      tags:
        - Test
      summary: Test JWT token read
      responses:
        '200':
          description: Success
  /api/test/enum-test:
    get:
      tags:
        - Test
      summary: Enum Test
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TestEnumApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/TestEnumApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/TestEnumApiItemResponse'
  /api/user-profiles:
    get:
      tags:
        - UserProfiles
      summary: Retrieves all suer information.
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UserInfoApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfoApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/UserInfoApiItemResponse'
  '/api/user-profiles/{userId}/settings':
    get:
      tags:
        - UserProfiles
      summary: Retrieves settings for a user
      parameters:
        - name: userId
          in: path
          description: User ID for setting
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/SettingApiItemListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/SettingApiItemListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/SettingApiItemListResponse'
  /api/vehicle-types:
    get:
      tags:
        - Vehicles
      summary: Retrieves list of vehicle types
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/VehicleTypeInfoApiItemListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleTypeInfoApiItemListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/VehicleTypeInfoApiItemListResponse'
  '/api/vehicle-types/{vehicleTypeId}':
    get:
      tags:
        - Vehicles
      summary: Retrieves single vehicle type
      parameters:
        - name: vehicleTypeId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/VehicleTypeInfoApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleTypeInfoApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/VehicleTypeInfoApiItemResponse'
  /api/vehicles:
    get:
      tags:
        - Vehicles
      summary: Retrieves list of vehicle types
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/VehicleInfoApiItemListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleInfoApiItemListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/VehicleInfoApiItemListResponse'
  '/api/vehicles/{VehicleId}':
    get:
      tags:
        - Vehicles
      summary: Retrieves single vehicle info
      parameters:
        - name: VehicleId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/VehicleInfoApiItemResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/VehicleInfoApiItemResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/VehicleInfoApiItemResponse'
components:
  schemas:
    AddressInfo:
      type: object
      properties:
        Street1:
          maxLength: 100
          minLength: 0
          type: string
          nullable: true
        Street2:
          maxLength: 100
          minLength: 0
          type: string
          nullable: true
        City:
          maxLength: 100
          minLength: 0
          type: string
          nullable: true
        Region:
          maxLength: 3
          minLength: 0
          type: string
          nullable: true
        PostalCode:
          maxLength: 20
          minLength: 0
          type: string
          nullable: true
        Country:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        DisplayAddress:
          type: string
          nullable: true
          readOnly: true
        GeoLookupAddress:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    AffiliateInfo:
      required:
        - Name
      type: object
      properties:
        AffiliateId:
          type: integer
          format: int32
        Name:
          maxLength: 50
          minLength: 0
          type: string
        PhoneTollFree:
          maxLength: 25
          minLength: 0
          type: string
          nullable: true
        PhoneMain:
          maxLength: 25
          minLength: 0
          type: string
          nullable: true
        PhoneAfterHours:
          maxLength: 25
          minLength: 0
          type: string
          nullable: true
        PhoneOther:
          maxLength: 25
          minLength: 0
          type: string
          nullable: true
        Address:
          allOf:
            - $ref: '#/components/schemas/AddressInfo'
          nullable: true
        Website:
          maxLength: 100
          minLength: 0
          type: string
          nullable: true
        ServiceArea:
          maxLength: 200
          minLength: 0
          type: string
          nullable: true
        IsInactive:
          type: boolean
      additionalProperties: false
    ApiStatus:
      enum:
        - FAILURE
        - SUCCESS
      type: string
      description: ''
      format: int32
    AffiliateInfoApiItemListResponse:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/AffiliateInfo'
          description: List of items to be returned in response
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defined an Api response that includes a list of models
    AirlineInfo:
      required:
        - Code
        - Name
      type: object
      properties:
        AirlineId:
          type: integer
          format: int32
        Name:
          maxLength: 50
          minLength: 0
          type: string
        Code:
          maxLength: 4
          minLength: 0
          type: string
        LocalTerminal:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        PhoneNumber:
          maxLength: 25
          minLength: 0
          type: string
          nullable: true
      additionalProperties: false
    AirlineInfoApiItemListResponse:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/AirlineInfo'
          description: List of items to be returned in response
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defined an Api response that includes a list of models
    AirportInfo:
      required:
        - Code
        - Name
      type: object
      properties:
        AirportId:
          type: integer
          format: int32
        Name:
          maxLength: 100
          minLength: 0
          type: string
        Code:
          maxLength: 4
          minLength: 0
          type: string
        Address:
          allOf:
            - $ref: '#/components/schemas/AddressInfo'
          nullable: true
        PhoneNumber:
          maxLength: 25
          minLength: 0
          type: string
          nullable: true
        County:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
      additionalProperties: false
    AirportInfoApiItemListResponse:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/AirportInfo'
          description: List of items to be returned in response
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defined an Api response that includes a list of models
    AttachmentInfo:
      type: object
      properties:
        AttachmentId:
          type: integer
          format: int32
        Name:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        Description:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        IsDefault:
          type: boolean
        Url:
          type: string
          nullable: true
      additionalProperties: false
    AttachmentInfoApiItemListResponse:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/AttachmentInfo'
          description: List of items to be returned in response
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defined an Api response that includes a list of models
    JwtAccessToken:
      type: object
      properties:
        Id:
          type: string
          nullable: true
        AccessToken:
          type: string
          nullable: true
        RefreshToken:
          type: string
          description: Can be used to retrieve new access token within refrsh timeframe.
          nullable: true
        AccessTokenExpirationSeconds:
          type: integer
          format: int32
        RefreshTokenExpiratinSeconds:
          type: integer
          format: int32
      additionalProperties: false
    CompanyLoginOption:
      type: object
      properties:
        CompanyName:
          type: string
          nullable: true
        SystemId:
          type: string
          nullable: true
      additionalProperties: false
    AuthenticationResponse:
      type: object
      properties:
        Token:
          allOf:
            - $ref: '#/components/schemas/JwtAccessToken'
          nullable: true
        IsExpired:
          type: boolean
        IsLocked:
          type: boolean
        LockedUntilDateUTC:
          type: string
          format: date-time
        IsMultiCompanyEnabled:
          type: boolean
        CompanyLoginOptions:
          type: array
          items:
            $ref: '#/components/schemas/CompanyLoginOption'
          nullable: true
        Message:
          type: string
          nullable: true
      additionalProperties: false
    AuthenticationResponseApiItemResponse:
      type: object
      properties:
        Item:
          allOf:
            - $ref: '#/components/schemas/AuthenticationResponse'
          description: Response object
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defines An API response that includes a single model
    WebServiceUserAuthRequest:
      type: object
      properties:
        SystemId:
          type: string
          description: System ID of target system (see remarks)
          nullable: true
        Username:
          type: string
          description: Username of customer
          nullable: true
        Password:
          type: string
          description: Password of customer
          nullable: true
        RefreshToken:
          type: string
          description: 'In lieu of a username and password, you can pass a refresh token to retrieve an updated access token from the original acces token response'
          nullable: true
      additionalProperties: false
      description: Manages auth requests for system specific web service user definition
    FasttrakReportType:
      enum:
        - Unknown
        - Email
        - DepositReceipt
        - Confirmation
        - ConfirmationAffiliate
        - ConfirmationQuotation
        - TripTicket
        - TripTicketBlank
        - InvoiceCondensed
        - InvoiceDetailed
        - TripInvoiceEstimateCondensed
        - TripInvoiceEstimateDetailed
        - BillingStatus
        - TripManifest
        - DispatchManifest
        - TimeAndCharges
        - PayReport
        - PayReportSummary
        - PayReportDetailed
        - PayReportAffiliate
        - PayReportAffiliateDetailed
        - PayReportCommissionAgent
        - GreetSign
        - ConfirmationLegacy
        - Statement
      type: string
      description: "XXXXX\r\n\r\nUnknown = 0, Email = 1, DepositReceipt = 2"
      format: int32
    DocumentSendDefaultsRequest:
      type: object
      properties:
        ReportType:
          allOf:
            - $ref: '#/components/schemas/FasttrakReportType'
        ReservationIds:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
      additionalProperties: false
    DocumentSendRecipientType:
      enum:
        - Unknown
        - Customer
        - CustomerContact
        - Affiliate
        - Corporate
        - CorporateContact
        - Passenger
        - Manual
        - Driver
        - Greeter
        - Operator
      type: string
      format: int32
    SendSelectOptionEmail:
      type: object
      properties:
        EmailAddress:
          type: string
          nullable: true
        IsHidden:
          type: boolean
        Name:
          type: string
          nullable: true
        IsSelected:
          type: boolean
        DocumentSendRecipientType:
          allOf:
            - $ref: '#/components/schemas/DocumentSendRecipientType'
      additionalProperties: false
    DocumentSendRequestDetail:
      type: object
      properties:
        ReservationId:
          type: integer
          format: int32
        ReportType:
          allOf:
            - $ref: '#/components/schemas/FasttrakReportType'
        DoAllowOptions:
          type: boolean
        IsUpdateRequest:
          type: boolean
        IsCancellationRequest:
          type: boolean
        IsPaidRequest:
          type: boolean
        EmailSelectOptionList:
          type: array
          items:
            $ref: '#/components/schemas/SendSelectOptionEmail'
          nullable: true
        Subject:
          type: string
          description: 'Internal use only, will be overwritten downstream'
          nullable: true
        Body:
          type: string
          nullable: true
        AttachmentList:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
      additionalProperties: false
    DocumentSendRequestDetailApiItemResponse:
      type: object
      properties:
        Item:
          allOf:
            - $ref: '#/components/schemas/DocumentSendRequestDetail'
          description: Response object
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defines An API response that includes a single model
    ApiResponse:
      type: object
      properties:
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Manages the basic APi response message
    ChargeDisplay:
      enum:
        - Unspecified
        - None
        - Summary
        - Detailed
      type: string
      format: int32
    ReportConfirmationRequest:
      type: object
      properties:
        ReservationIdList:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        DoUseOverrides:
          type: boolean
        DoDisplayCreditCardInformation:
          type: boolean
        DoDisplayEstimatedEndTime:
          type: boolean
        ChargeDisplay:
          allOf:
            - $ref: '#/components/schemas/ChargeDisplay'
        DoPrintAffiliateConfirmations:
          type: boolean
        ReportType:
          allOf:
            - $ref: '#/components/schemas/FasttrakReportType'
        RequestDate:
          type: string
          format: date-time
      additionalProperties: false
    DocumentSendReportRequestConfirmation:
      required:
        - ConfirmationRequest
        - SendRequestDetails
      type: object
      properties:
        ConfirmationRequest:
          allOf:
            - $ref: '#/components/schemas/ReportConfirmationRequest'
        SendRequestDetails:
          allOf:
            - $ref: '#/components/schemas/DocumentSendRequestDetail'
      additionalProperties: false
    ReportTripTicketRequest:
      type: object
      properties:
        ReservationIdList:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        DoUseOverrides:
          type: boolean
        DoDisplayCreditCardInformation:
          type: boolean
        DoDisplayNextTripSegment:
          type: boolean
        DoDisplayChargeInformation:
          type: boolean
        BlankTripTicketCompanyId:
          type: integer
          format: int32
        ReportType:
          allOf:
            - $ref: '#/components/schemas/FasttrakReportType'
        RequestDate:
          type: string
          format: date-time
      additionalProperties: false
    DocumentSendReportRequestTripTicket:
      required:
        - SendRequestDetails
        - TripTicketRequest
      type: object
      properties:
        TripTicketRequest:
          allOf:
            - $ref: '#/components/schemas/ReportTripTicketRequest'
        SendRequestDetails:
          allOf:
            - $ref: '#/components/schemas/DocumentSendRequestDetail'
      additionalProperties: false
    ReportDispatchManifestRequest:
      type: object
      properties:
        ReservationIdList:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        DoShowTotals:
          type: boolean
        ReportType:
          allOf:
            - $ref: '#/components/schemas/FasttrakReportType'
        RequestDate:
          type: string
          format: date-time
      additionalProperties: false
    DocumentSendReportRequestDispatchManifest:
      required:
        - DispatchManifestRequest
        - SendRequestDetails
      type: object
      properties:
        DispatchManifestRequest:
          allOf:
            - $ref: '#/components/schemas/ReportDispatchManifestRequest'
        SendRequestDetails:
          allOf:
            - $ref: '#/components/schemas/DocumentSendRequestDetail'
      additionalProperties: false
    ReportGreetSignRequest:
      type: object
      properties:
        ReservationIdList:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        DoShowCompanyName:
          type: boolean
        DoShowCustomerName:
          type: boolean
        DoShowPassengerName:
          type: boolean
        DoShowLogo:
          type: boolean
        DoShowCorporateName:
          type: boolean
        DoShowGroupName:
          type: boolean
        CorporateLogoId:
          type: integer
          format: int32
        DoUseOverrides:
          type: boolean
        ReportType:
          allOf:
            - $ref: '#/components/schemas/FasttrakReportType'
        RequestDate:
          type: string
          format: date-time
      additionalProperties: false
    DocumentSendReportRequestGreetSign:
      required:
        - GreetSignRequest
        - SendRequestDetails
      type: object
      properties:
        GreetSignRequest:
          allOf:
            - $ref: '#/components/schemas/ReportGreetSignRequest'
        SendRequestDetails:
          allOf:
            - $ref: '#/components/schemas/DocumentSendRequestDetail'
      additionalProperties: false
    ReportTimeAndChargesRequest:
      type: object
      properties:
        ReservationIdList:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        ReportType:
          allOf:
            - $ref: '#/components/schemas/FasttrakReportType'
        RequestDate:
          type: string
          format: date-time
      additionalProperties: false
    DocumentSendReportRequestTimeAndCharges:
      required:
        - SendRequestDetails
        - TimeAndChargesRequest
      type: object
      properties:
        TimeAndChargesRequest:
          allOf:
            - $ref: '#/components/schemas/ReportTimeAndChargesRequest'
        SendRequestDetails:
          allOf:
            - $ref: '#/components/schemas/DocumentSendRequestDetail'
      additionalProperties: false
    ContractDisplayType:
      enum:
        - None
        - Confirmation
        - Quotation
      type: string
      format: int32
    ReportTripInvoiceEstimateRequest:
      type: object
      properties:
        ReservationIdList:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        ContractDisplayType:
          allOf:
            - $ref: '#/components/schemas/ContractDisplayType'
        ReportType:
          allOf:
            - $ref: '#/components/schemas/FasttrakReportType'
        RequestDate:
          type: string
          format: date-time
      additionalProperties: false
    DocumentSendReportRequestTripEstimate:
      required:
        - SendRequestDetails
        - TripEstimateRequest
      type: object
      properties:
        TripEstimateRequest:
          allOf:
            - $ref: '#/components/schemas/ReportTripInvoiceEstimateRequest'
        SendRequestDetails:
          allOf:
            - $ref: '#/components/schemas/DocumentSendRequestDetail'
      additionalProperties: false
    ReportTripManifestRequest:
      type: object
      properties:
        ReservationIdList:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        DoShowTotals:
          type: boolean
        DoShowContractText:
          type: boolean
        DoShowAffiliateText:
          type: boolean
        CompanyId:
          type: integer
          format: int32
        AlternateContractID:
          type: integer
          format: int32
        ReportType:
          allOf:
            - $ref: '#/components/schemas/FasttrakReportType'
        RequestDate:
          type: string
          format: date-time
      additionalProperties: false
    DocumentSendReportRequestTripManifest:
      required:
        - SendRequestDetails
        - TripManifestRequest
      type: object
      properties:
        TripManifestRequest:
          allOf:
            - $ref: '#/components/schemas/ReportTripManifestRequest'
        SendRequestDetails:
          allOf:
            - $ref: '#/components/schemas/DocumentSendRequestDetail'
      additionalProperties: false
    StringApiItemResponse:
      type: object
      properties:
        Item:
          type: string
          description: Response object
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defines An API response that includes a single model
    ReportDepositReceiptRequest:
      type: object
      properties:
        DepositReceiptIdList:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        ReportType:
          allOf:
            - $ref: '#/components/schemas/FasttrakReportType'
        RequestDate:
          type: string
          format: date-time
      additionalProperties: false
    SendSelectOptionSms:
      type: object
      properties:
        PhoneNumber:
          type: string
          nullable: true
        Name:
          type: string
          nullable: true
        IsSelected:
          type: boolean
        DocumentSendRecipientType:
          allOf:
            - $ref: '#/components/schemas/DocumentSendRecipientType'
      additionalProperties: false
    SendSmsEmailDefaults:
      type: object
      properties:
        ReservationId:
          type: integer
          format: int32
        SendSelectOptionEmailList:
          type: array
          items:
            $ref: '#/components/schemas/SendSelectOptionEmail'
          nullable: true
        SendSelectOptionSmsList:
          type: array
          items:
            $ref: '#/components/schemas/SendSelectOptionSms'
          nullable: true
        Body:
          type: string
          nullable: true
        PickupNotes:
          type: string
          nullable: true
        DropoffNotes:
          type: string
          nullable: true
        TripNotes:
          type: string
          nullable: true
        Preferences:
          type: string
          nullable: true
        AttachmentList:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        DoAllowEmail:
          type: boolean
        DoAllowSms:
          type: boolean
      additionalProperties: false
    SendSmsEmailDefaultsApiItemResponse:
      type: object
      properties:
        Item:
          allOf:
            - $ref: '#/components/schemas/SendSmsEmailDefaults'
          description: Response object
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defines An API response that includes a single model
    SendEmailRequest:
      type: object
      properties:
        RecipientList:
          type: array
          items:
            $ref: '#/components/schemas/SendSelectOptionEmail'
          nullable: true
        Subject:
          type: string
          nullable: true
        AttachmentIdList:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        Message:
          type: string
          nullable: true
      additionalProperties: false
    SendSmsRequest:
      type: object
      properties:
        RecipientList:
          type: array
          items:
            $ref: '#/components/schemas/SendSelectOptionSms'
          nullable: true
        Message:
          type: string
          nullable: true
      additionalProperties: false
    SmsMessageInfo:
      type: object
      properties:
        SmsMessageId:
          maximum: 2147483647
          minimum: 0
          type: integer
          description: Internal id of SMS Message
          format: int32
        ToNumber:
          maxLength: 50
          minLength: 0
          type: string
          description: 'Includes a single SMS number to send, including country code'
          nullable: true
        FromNumber:
          maxLength: 50
          minLength: 0
          type: string
          description: 'Includes a single SMS number to send, including country code'
          nullable: true
        DerivedFrom:
          maxLength: 25
          minLength: 0
          type: string
          description: Includes information regarding the matching info in FASTTRAK (if known)
          nullable: true
        Message:
          maxLength: 4000
          minLength: 0
          type: string
          description: The SMS message body
          nullable: true
        MessageDate:
          type: string
          description: The SMS Messaeg Date (sent or received)
          format: date-time
      additionalProperties: false
      description: Manages a basic SMS Message
    SmsMessageInfoApiItemListResponse:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/SmsMessageInfo'
          description: List of items to be returned in response
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defined an Api response that includes a list of models
    SmsOutgoingMessageInfo:
      type: object
      properties:
        IsSent:
          type: boolean
          description: Determines if the message was sent successfully by the provider
        ErrorMessage:
          maxLength: 500
          minLength: 0
          type: string
          description: 'If an error exists, the message will be shown here'
          nullable: true
        SmsMessageId:
          maximum: 2147483647
          minimum: 0
          type: integer
          description: Internal id of SMS Message
          format: int32
        ToNumber:
          maxLength: 50
          minLength: 0
          type: string
          description: 'Includes a single SMS number to send, including country code'
          nullable: true
        FromNumber:
          maxLength: 50
          minLength: 0
          type: string
          description: 'Includes a single SMS number to send, including country code'
          nullable: true
        DerivedFrom:
          maxLength: 25
          minLength: 0
          type: string
          description: Includes information regarding the matching info in FASTTRAK (if known)
          nullable: true
        Message:
          maxLength: 4000
          minLength: 0
          type: string
          description: The SMS message body
          nullable: true
        MessageDate:
          type: string
          description: The SMS Messaeg Date (sent or received)
          format: date-time
      additionalProperties: false
    SmsOutgoingMessageInfoApiItemListResponse:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/SmsOutgoingMessageInfo'
          description: List of items to be returned in response
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defined an Api response that includes a list of models
    InternetBookingInfo:
      type: object
      properties:
        InternetBookingId:
          type: integer
          description: 'Unique InternetBooking, references underlying reservation ID'
          format: int32
        IsUpdate:
          type: boolean
          description: 'True of the reservaiton has been updated, versus a new reservation.'
        ScheduledPickupTime:
          type: string
          description: Scheduled pick-up of reservation
          format: date-time
        Source:
          type: string
          description: Source information
          nullable: true
        CustomerName:
          type: string
          description: Reservation customer name
          nullable: true
      additionalProperties: false
      description: Manages details regarding an external booking
    InternetBookingInfoApiItemListResponse:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/InternetBookingInfo'
          description: List of items to be returned in response
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defined an Api response that includes a list of models
    InternetBookingsMarkAllReadRequest:
      required:
        - ReservationIdList
      type: object
      properties:
        ReservationIdList:
          type: array
          items:
            type: integer
            format: int32
      additionalProperties: false
    SupportMessageInfo:
      type: object
      properties:
        SupportMessageId:
          type: integer
          format: int32
        Subject:
          maxLength: 250
          minLength: 0
          type: string
          nullable: true
        Message:
          maxLength: 4000
          minLength: 0
          type: string
          nullable: true
        CreateTime:
          type: string
          format: date-time
        SinceTimeframe:
          type: string
          nullable: true
      additionalProperties: false
    SupportMessageInfoApiItemListResponse:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/SupportMessageInfo'
          description: List of items to be returned in response
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defined an Api response that includes a list of models
    SupportMessagesMarkAllReadRequest:
      required:
        - SupportMessageIdList
      type: object
      properties:
        SupportMessageIdList:
          type: array
          items:
            type: integer
            format: int32
      additionalProperties: false
    CompanyInfo:
      type: object
      properties:
        IsPrimary:
          type: boolean
        Name:
          type: string
          nullable: true
        Id:
          type: integer
          format: int32
        Latitude:
          type: number
          format: double
        Longitude:
          type: number
          format: double
        Phone:
          type: string
          nullable: true
        EmailAddress:
          type: string
          nullable: true
        WebSiteAddress:
          type: string
          nullable: true
        ImageData:
          type: string
          format: byte
          nullable: true
        ImageUrl:
          type: string
          nullable: true
        ColorRed:
          type: integer
          format: int32
        ColorGreen:
          type: integer
          format: int32
        ColorBlue:
          type: integer
          format: int32
        IsDeleted:
          type: boolean
        ConfirmationContractText:
          type: string
          nullable: true
        AffiliateDriverContractText:
          type: string
          nullable: true
        TripContractText:
          type: string
          nullable: true
        QuotationContractText:
          type: string
          nullable: true
        TimeAndChargesContractText:
          type: string
          nullable: true
        AffiliateCustomerContractText:
          type: string
          nullable: true
      additionalProperties: false
    CompanyInfoApiItemResponse:
      type: object
      properties:
        Item:
          allOf:
            - $ref: '#/components/schemas/CompanyInfo'
          description: Response object
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defines An API response that includes a single model
    CompanyInfoApiItemListResponse:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/CompanyInfo'
          description: List of items to be returned in response
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defined an Api response that includes a list of models
    AlternateContractInfo:
      type: object
      properties:
        AlternateContractId:
          type: integer
          format: int32
        Name:
          type: string
          nullable: true
        TripContract:
          type: string
          nullable: true
        ConfirmationContract:
          type: string
          nullable: true
        AffiliateContract:
          type: string
          nullable: true
        AffiliateCustomerContract:
          type: string
          nullable: true
        QuotationContract:
          type: string
          nullable: true
        TimeAndChargesContract:
          type: string
          nullable: true
      additionalProperties: false
    AlternateContractInfoApiItemListResponse:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/AlternateContractInfo'
          description: List of items to be returned in response
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defined an Api response that includes a list of models
    CollectionType:
      enum:
        - None
        - Collect
        - Billing
        - Prepaid
        - Process
      type: string
      format: int32
    CollectionMethod:
      enum:
        - None
        - Collect_Cash
        - Collect_Credit_Card
        - Collect_Check
        - Collect_Accept_Any
        - Collect_Voucher
        - Collect_Gift_Certificate
        - Billing_Credit_Card
        - Billing_Room_Charge
        - Billing_Hotel_Master_Account
        - Billing_Sales_Dept
        - Billing_Voucher
        - Prepaid_Cash
        - Prepaid_Credit_Card
        - Prepaid_Check
        - Prepaid_Trade
        - Prepaid_Voucher
        - Prepaid_Gift_Certificate
        - Process_Credit_Card
        - Billing_Account
        - Billing_Wire
        - Prepaid_Wire
        - Collect_Cabcharge_
        - Collect_Diners_Travel_Charge
      type: string
      format: int32
    DeliveryMethod:
      enum:
        - None
        - Mail
        - E_Mail
        - Fax
      type: string
      format: int32
    DeliveryFrequency:
      enum:
        - None
        - Daily
        - Weekly
        - Monthly
        - On_Monday
        - On_Tuesday
        - On_Wednesday
        - On_Thursday
        - On_Friday
      type: string
      format: int32
    InvoiceCreationHandlingType:
      enum:
        - None
        - Show_invoice_on_screen
        - Print_invoice_automatically
        - E_mail_invoice_automatically
        - Take_no_action
      type: string
      format: int32
    CorporateProfileInfo:
      required:
        - CompanyName
        - CorporateProfileId
      type: object
      properties:
        CompanyName:
          maxLength: 100
          minLength: 0
          type: string
        AccountNumber:
          maxLength: 20
          minLength: 0
          type: string
          nullable: true
        PhoneNumber1:
          maxLength: 25
          minLength: 0
          type: string
          nullable: true
        EmailAddress:
          maxLength: 125
          minLength: 0
          type: string
          nullable: true
        ReferencePO:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        CostCode:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        CorporateProfileNotes:
          maxLength: 250
          minLength: 0
          type: string
          nullable: true
        MiscNotes:
          maxLength: 250
          minLength: 0
          type: string
          nullable: true
        PricingId:
          type: integer
          format: int32
        CorporateGuid:
          type: string
          nullable: true
        PassengerAlias:
          maxLength: 155
          minLength: 0
          type: string
          nullable: true
        PhoneNumber2:
          maxLength: 25
          minLength: 0
          type: string
          nullable: true
        FaxNumber:
          maxLength: 25
          minLength: 0
          type: string
          nullable: true
        IsTaxExempt:
          type: boolean
        DoLockPricingOverrides:
          type: boolean
        DoRequireReferencePo:
          type: boolean
        InvoiceMessage:
          maxLength: 100
          minLength: 0
          type: string
          nullable: true
        CollectionType:
          allOf:
            - $ref: '#/components/schemas/CollectionType'
        CollectionMethod:
          allOf:
            - $ref: '#/components/schemas/CollectionMethod'
        CollectionTermsDays:
          type: integer
          format: int32
        CollectionTermsDaysLateFees:
          type: integer
          format: int32
        DeliveryMethod:
          allOf:
            - $ref: '#/components/schemas/DeliveryMethod'
        DeliveryFrequency:
          allOf:
            - $ref: '#/components/schemas/DeliveryFrequency'
        InvoiceCreateHandlingType:
          allOf:
            - $ref: '#/components/schemas/InvoiceCreationHandlingType'
        ClientSinceDate:
          type: string
          format: date-time
        CreateDate:
          type: string
          format: date-time
        LastModifyDate:
          type: string
          format: date-time
        LastModifyFTUserId:
          type: integer
          format: int32
        CreatedByFTUserId:
          type: integer
          format: int32
        CorporateProfileId:
          type: integer
          format: int32
      additionalProperties: false
    CorporateProfileInfoApiItemListResponse:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/CorporateProfileInfo'
          description: List of items to be returned in response
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defined an Api response that includes a list of models
    DocumentEmailFormat:
      enum:
        - UseGlobal
        - HTML
        - PDF
        - HTMLPDF
      type: string
      format: int32
    CurrencySymbol:
      enum:
        - None
        - Default
        - UsDollar
        - Pound
        - Yen
        - Euro
        - PhilippinePeso
        - AuDollar
      type: string
      format: int32
    InvoiceSortOrder:
      enum:
        - None
        - ConfNum
        - BillingStartTime
        - PassengerName
        - RefPOCostCode
      type: string
      format: int32
    CorporateSettings:
      type: object
      properties:
        DocumentEmailFormatOverride:
          allOf:
            - $ref: '#/components/schemas/DocumentEmailFormat'
        CurrencySymbol:
          allOf:
            - $ref: '#/components/schemas/CurrencySymbol'
        DoEmailConfirmations:
          type: boolean
        DoEmailConfirmationUpdates:
          type: boolean
        DoEmailCancellations:
          type: boolean
        DoEmailStatements:
          type: boolean
        DoEmailInvoiceOnPaidInFull:
          type: boolean
        DoUseSummaryInvoice:
          type: boolean
        DoEmailInvoices:
          type: boolean
        DoShowInvoiceDiscounts:
          type: boolean
        DoShowInvoiceLogo:
          type: boolean
        DoShowSubtotalInvoiceSummary:
          type: boolean
        InvoiceChargeDisplay:
          allOf:
            - $ref: '#/components/schemas/ChargeDisplay'
        DoEmailPreTripNotifications:
          type: boolean
        DoEmailInProcessNotifications:
          type: boolean
        DoOverrideCustomerCollectionDetails:
          type: boolean
        InvoiceSortOrder:
          allOf:
            - $ref: '#/components/schemas/InvoiceSortOrder'
        PortalPricingPlans:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
      additionalProperties: false
    CorporateProfileDetail:
      required:
        - CompanyName
        - CorporateProfileId
      type: object
      properties:
        Settings:
          allOf:
            - $ref: '#/components/schemas/CorporateSettings'
          nullable: true
        CompanyName:
          maxLength: 100
          minLength: 0
          type: string
        AccountNumber:
          maxLength: 20
          minLength: 0
          type: string
          nullable: true
        PhoneNumber1:
          maxLength: 25
          minLength: 0
          type: string
          nullable: true
        EmailAddress:
          maxLength: 125
          minLength: 0
          type: string
          nullable: true
        ReferencePO:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        CostCode:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        CorporateProfileNotes:
          maxLength: 250
          minLength: 0
          type: string
          nullable: true
        MiscNotes:
          maxLength: 250
          minLength: 0
          type: string
          nullable: true
        PricingId:
          type: integer
          format: int32
        CorporateGuid:
          type: string
          nullable: true
        PassengerAlias:
          maxLength: 155
          minLength: 0
          type: string
          nullable: true
        PhoneNumber2:
          maxLength: 25
          minLength: 0
          type: string
          nullable: true
        FaxNumber:
          maxLength: 25
          minLength: 0
          type: string
          nullable: true
        IsTaxExempt:
          type: boolean
        DoLockPricingOverrides:
          type: boolean
        DoRequireReferencePo:
          type: boolean
        InvoiceMessage:
          maxLength: 100
          minLength: 0
          type: string
          nullable: true
        CollectionType:
          allOf:
            - $ref: '#/components/schemas/CollectionType'
        CollectionMethod:
          allOf:
            - $ref: '#/components/schemas/CollectionMethod'
        CollectionTermsDays:
          type: integer
          format: int32
        CollectionTermsDaysLateFees:
          type: integer
          format: int32
        DeliveryMethod:
          allOf:
            - $ref: '#/components/schemas/DeliveryMethod'
        DeliveryFrequency:
          allOf:
            - $ref: '#/components/schemas/DeliveryFrequency'
        InvoiceCreateHandlingType:
          allOf:
            - $ref: '#/components/schemas/InvoiceCreationHandlingType'
        ClientSinceDate:
          type: string
          format: date-time
        CreateDate:
          type: string
          format: date-time
        LastModifyDate:
          type: string
          format: date-time
        LastModifyFTUserId:
          type: integer
          format: int32
        CreatedByFTUserId:
          type: integer
          format: int32
        CorporateProfileId:
          type: integer
          format: int32
      additionalProperties: false
    CorporateProfileDetailApiItemResponse:
      type: object
      properties:
        Item:
          allOf:
            - $ref: '#/components/schemas/CorporateProfileDetail'
          description: Response object
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defines An API response that includes a single model
    CustomerInfo:
      required:
        - CompanyId
        - CustomerId
        - LastName
      type: object
      properties:
        LastName:
          maxLength: 50
          minLength: 0
          type: string
        PhoneNumber1:
          maxLength: 25
          minLength: 0
          type: string
          nullable: true
        CorporateProfileCompanyName:
          type: string
          description: Name of corporate profile the customer belongs too (read only)
          nullable: true
        CompanyName:
          maxLength: 200
          minLength: 0
          type: string
          description: Name of company the customer books under (read only)
          nullable: true
        Street1:
          maxLength: 100
          minLength: 0
          type: string
          nullable: true
        Street2:
          maxLength: 100
          minLength: 0
          type: string
          nullable: true
        City:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        State:
          maxLength: 3
          minLength: 0
          type: string
          nullable: true
        PostalCode:
          maxLength: 20
          minLength: 0
          type: string
          nullable: true
        IsVip:
          type: boolean
        IsSpecialHandling:
          type: boolean
        IsInactive:
          type: boolean
        CorporateProfileId:
          type: integer
          format: int32
        Designation:
          maxLength: 6
          minLength: 0
          type: string
          nullable: true
        GreetSignAlias:
          maxLength: 155
          minLength: 0
          type: string
          nullable: true
        PhoneNumber2:
          maxLength: 25
          minLength: 0
          type: string
          nullable: true
        FaxNumber:
          maxLength: 25
          minLength: 0
          type: string
          nullable: true
        ReferencePO:
          maxLength: 30
          minLength: 0
          type: string
          nullable: true
        CostCode:
          type: string
          nullable: true
        TripNotes:
          maxLength: 250
          minLength: 0
          type: string
          nullable: true
        MiscNotes:
          maxLength: 250
          minLength: 0
          type: string
          nullable: true
        Preferences:
          maxLength: 250
          minLength: 0
          type: string
          nullable: true
        CustomerSinceDate:
          type: string
          format: date-time
        LastModifyDate:
          type: string
          format: date-time
        OrderedByName:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        OrderedByPhone:
          maxLength: 25
          minLength: 0
          type: string
          nullable: true
        DefaultVehicleTypeId:
          type: integer
          format: int32
        DefaultPricingId:
          type: integer
          format: int32
        DefaultPricingName:
          type: string
          nullable: true
        BookingSourceId:
          type: integer
          format: int32
        BookingCategoryId:
          type: integer
          format: int32
        TripCategoryId:
          type: integer
          format: int32
        TripTypeId:
          type: integer
          format: int32
        CollectionType:
          allOf:
            - $ref: '#/components/schemas/CollectionType'
        CollectionMethod:
          allOf:
            - $ref: '#/components/schemas/CollectionMethod'
        CollectionTermsDays:
          type: integer
          format: int32
        CollectionTermsDaysLateFees:
          type: integer
          format: int32
        DeliveryMethod:
          allOf:
            - $ref: '#/components/schemas/DeliveryMethod'
        DeliveryFrequency:
          allOf:
            - $ref: '#/components/schemas/DeliveryFrequency'
        DefaultTimezone:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        BookingMessage:
          maxLength: 250
          minLength: 0
          type: string
          nullable: true
        InvoiceMessage:
          maxLength: 100
          minLength: 0
          type: string
          nullable: true
        InvoiceSortOrder:
          allOf:
            - $ref: '#/components/schemas/InvoiceSortOrder'
        InvoiceCreateHandlingType:
          allOf:
            - $ref: '#/components/schemas/InvoiceCreationHandlingType'
        AlternateContractId:
          type: integer
          format: int32
        CreateDate:
          type: string
          description: Internal use only
          format: date-time
        LastReservationDate:
          type: string
          format: date-time
        LastModifyFTUserId:
          type: integer
          description: Internal use only
          format: int32
        CreatedByFTUserId:
          type: integer
          description: Internal use only
          format: int32
        AffiliateSystemGuid:
          maxLength: 50
          minLength: 0
          type: string
          description: Internal use only
          nullable: true
        IsQuickQuoteCustomer:
          type: boolean
          description: Internal use only
        IsAffiliateCustomer:
          type: boolean
          description: 'If true, triggers affiliate display options within communication (sms, email, confirmations, etc)'
        IsTransientCustomer:
          type: boolean
        IsTransponetAccountCatchall:
          type: boolean
          description: Internal use only
        DoAllowTransponetHourlyPricing:
          type: boolean
        CustomerId:
          type: integer
          format: int32
        CompanyId:
          type: integer
          format: int32
        FirstName:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        MiddleName:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        EmailAddress:
          maxLength: 125
          minLength: 0
          type: string
          format: email
          nullable: true
        CellPhoneNumber:
          maxLength: 25
          minLength: 0
          type: string
          nullable: true
        AccountNumber:
          maxLength: 20
          minLength: 0
          type: string
          nullable: true
        DoRequireReferencePo:
          type: boolean
        DoBillCorporate:
          type: boolean
          description: 'If true, reservation customer is set to bill corporate, NOT customer.'
        DoUseCorporatePricingOverrides:
          type: boolean
          description: 'If true, customer will use corporate overrides from corporate billing profile'
        ProfileNotes:
          maxLength: 250
          minLength: 0
          type: string
          nullable: true
      additionalProperties: false
    CustomerInfoApiItemListResponse:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/CustomerInfo'
          description: List of items to be returned in response
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defined an Api response that includes a list of models
    ProfileAddressType:
      enum:
        - None
        - Residential
        - Business
        - Other
      type: string
      format: int32
    ProfileAddress:
      required:
        - AddressId
      type: object
      properties:
        AddressId:
          type: integer
          format: int32
        AddressType:
          allOf:
            - $ref: '#/components/schemas/ProfileAddressType'
        CrossStreets:
          maxLength: 100
          minLength: 0
          type: string
          nullable: true
        Notes:
          maxLength: 250
          minLength: 0
          type: string
          nullable: true
        IsPrimary:
          type: boolean
        IsInvoiceDefault:
          type: boolean
        Street1:
          maxLength: 100
          minLength: 0
          type: string
          nullable: true
        Street2:
          maxLength: 100
          minLength: 0
          type: string
          nullable: true
        City:
          maxLength: 100
          minLength: 0
          type: string
          nullable: true
        Region:
          maxLength: 3
          minLength: 0
          type: string
          nullable: true
        PostalCode:
          maxLength: 20
          minLength: 0
          type: string
          nullable: true
        Country:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        DisplayAddress:
          type: string
          nullable: true
          readOnly: true
        GeoLookupAddress:
          type: string
          nullable: true
          readOnly: true
      additionalProperties: false
    ProfileAddressApiItemListResponse:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/ProfileAddress'
          description: List of items to be returned in response
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defined an Api response that includes a list of models
    ProfileAddressApiItemResponse:
      type: object
      properties:
        Item:
          allOf:
            - $ref: '#/components/schemas/ProfileAddress'
          description: Response object
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defines An API response that includes a single model
    InvoiceSendOption:
      enum:
        - None
        - All
        - OrderedByOnly
      type: string
      format: int32
    CorporateProfileContactInfo:
      required:
        - ContactId
        - FirstName
        - LastName
      type: object
      properties:
        DoEnableInternetReservations:
          type: boolean
        DoShowInternetBooking:
          type: boolean
        DoForceAsOrderByOnInternetReservations:
          type: boolean
        DoShowDashboardInternetReservations:
          type: boolean
        InternetReservationsCustomerIdList:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        ContactId:
          type: integer
          format: int32
        Designation:
          maxLength: 6
          minLength: 0
          type: string
          nullable: true
        FirstName:
          maxLength: 50
          minLength: 0
          type: string
        MiddleName:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        LastName:
          maxLength: 50
          minLength: 0
          type: string
        PhoneNumber1:
          maxLength: 25
          minLength: 0
          type: string
          nullable: true
        CellPhoneNumber:
          maxLength: 25
          minLength: 0
          type: string
          nullable: true
        Street1:
          maxLength: 100
          minLength: 0
          type: string
          nullable: true
        Street2:
          maxLength: 100
          minLength: 0
          type: string
          nullable: true
        City:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        State:
          maxLength: 3
          minLength: 0
          type: string
          nullable: true
        PostalCode:
          maxLength: 20
          minLength: 0
          type: string
          nullable: true
        Country:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        EmailAddress:
          maxLength: 125
          minLength: 0
          type: string
          nullable: true
        DoEmailBookingConfirmations:
          type: boolean
        DoEmailBookingConfirmationUpdates:
          type: boolean
        DoEmailBookingCancellations:
          type: boolean
        DoEmailStatements:
          type: boolean
        DoEmailPreTripNotifications:
          type: boolean
        DoEmailInProcessNotifications:
          type: boolean
        InvoiceSendOption:
          allOf:
            - $ref: '#/components/schemas/InvoiceSendOption'
        AdditionalContactNotificationIds:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
      additionalProperties: false
    CorporateProfileContactInfoApiItemListResponse:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/CorporateProfileContactInfo'
          description: List of items to be returned in response
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defined an Api response that includes a list of models
    CorporateProfileContactInfoApiItemResponse:
      type: object
      properties:
        Item:
          allOf:
            - $ref: '#/components/schemas/CorporateProfileContactInfo'
          description: Response object
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defines An API response that includes a single model
    PassengerInfo:
      required:
        - FirstName
        - LastName
        - PassengerId
      type: object
      properties:
        PassengerId:
          type: integer
          format: int32
        FirstName:
          maxLength: 50
          minLength: 0
          type: string
        LastName:
          maxLength: 50
          minLength: 0
          type: string
        CellPhoneNumber:
          maxLength: 25
          minLength: 0
          type: string
          nullable: true
        EmailAddress:
          maxLength: 120
          minLength: 0
          type: string
          nullable: true
        CreditCardId:
          type: integer
          format: int32
        ReferencePO:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        IsVip:
          type: boolean
        AddressPrimary:
          allOf:
            - $ref: '#/components/schemas/ProfileAddress'
          nullable: true
        AddressTypePrimary:
          allOf:
            - $ref: '#/components/schemas/ProfileAddressType'
        AddressSecondary:
          allOf:
            - $ref: '#/components/schemas/ProfileAddress'
          nullable: true
        AddressTypeSecondary:
          allOf:
            - $ref: '#/components/schemas/ProfileAddressType'
        Notes:
          maxLength: 4000
          minLength: 0
          type: string
          nullable: true
        Preferences:
          maxLength: 4000
          minLength: 0
          type: string
          nullable: true
      additionalProperties: false
    PassengerInfoApiItemListResponse:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/PassengerInfo'
          description: List of items to be returned in response
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defined an Api response that includes a list of models
    PassengerInfoApiItemResponse:
      type: object
      properties:
        Item:
          allOf:
            - $ref: '#/components/schemas/PassengerInfo'
          description: Response object
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defines An API response that includes a single model
    DepositUsageInfo:
      required:
        - Amount
        - DepositId
        - DepositUsageId
      type: object
      properties:
        DepositUsageId:
          type: integer
          format: int32
        DepositId:
          type: integer
          format: int32
        Amount:
          type: number
          format: double
        Description:
          maxLength: 100
          minLength: 0
          type: string
          nullable: true
        IsSystemDebit:
          type: boolean
        InvoiceId:
          type: integer
          format: int32
        IsCreditOrVoid:
          type: boolean
        DepositUsageDate:
          type: string
          description: 'Readonly field, not updatable'
          format: date-time
      additionalProperties: false
    DepositType:
      enum:
        - None
        - Cash
        - Check
        - Credit_Card
        - Voucher
        - Gift_Certificate
        - Other
        - Credit_Card___Transient_Sale
        - Wire_Transfer
      type: string
      format: int32
    DepositDetail:
      required:
        - Amount
        - DepositId
        - DepositType
        - Description
      type: object
      properties:
        DepositId:
          maximum: 999999
          minimum: 0
          type: integer
          format: int32
        CustomerId:
          type: integer
          description: Specifies that the deposit was created at the customer level
          format: int32
        CorporateId:
          type: integer
          description: Specifies that the deposit was created at the corporate level
          format: int32
        ReservationId:
          type: integer
          description: Specifies that the deposit was created at the reservation level
          format: int32
        TakenAgainstReservationId:
          type: integer
          description: Specifies that the deposit was reclassified to a specific reservation during invoicing
          format: int32
        CreditCardAuthorizationCode:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        CreditCardReferenceCode:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        CreditCardReferenceCodeCredit:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        CreditCardReferenceCodeVoid:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        CreditCardProcessorId:
          type: integer
          format: int32
        CreditCardId:
          type: integer
          format: int32
        IsReclassifiedReservationDeposit:
          type: boolean
        DoConvertToReceiptOnInvoice:
          type: boolean
        DepositUsageList:
          type: array
          items:
            $ref: '#/components/schemas/DepositUsageInfo'
          nullable: true
        RemainingAmount:
          type: number
          format: double
        DepositDate:
          type: string
          format: date-time
        CompanyId:
          type: integer
          description: Company for transaction
          format: int32
        DepositType:
          allOf:
            - $ref: '#/components/schemas/DepositType'
        Amount:
          maximum: 999999
          minimum: 0
          type: number
          format: double
        Description:
          maxLength: 100
          minLength: 0
          type: string
        Memo:
          maxLength: 25
          minLength: 0
          type: string
          nullable: true
        ReferencePO:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
      additionalProperties: false
    DepositDetailApiItemListResponse:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/DepositDetail'
          description: List of items to be returned in response
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defined an Api response that includes a list of models
    DepositDetailApiItemResponse:
      type: object
      properties:
        Item:
          allOf:
            - $ref: '#/components/schemas/DepositDetail'
          description: Response object
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defines An API response that includes a single model
    GreetSignImageInfo:
      required:
        - FileExtension
        - GreetSignImageId
        - Name
      type: object
      properties:
        GreetSignImageId:
          type: integer
          description: Internal ID
          format: int32
        Name:
          maxLength: 100
          minLength: 0
          type: string
          description: User defined name
        FileExtension:
          maxLength: 10
          minLength: 0
          type: string
          description: Underlying file extension
        ImageUrl:
          type: string
          description: Public URL to access image via external content source
          nullable: true
        Base64EncodedImage:
          type: string
          description: Base64 encoded data of image
          nullable: true
      additionalProperties: false
    GreetSignImageInfoApiItemListResponse:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/GreetSignImageInfo'
          description: List of items to be returned in response
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defined an Api response that includes a list of models
    GreetSignImageInfoApiItemResponse:
      type: object
      properties:
        Item:
          allOf:
            - $ref: '#/components/schemas/GreetSignImageInfo'
          description: Response object
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defines An API response that includes a single model
    CreditCardClassification:
      enum:
        - None
        - Personal
        - Business
      type: string
      format: int32
    CreditCardType:
      enum:
        - None
        - Unknown
        - VISA
        - Mastercard
        - Discover
        - Diners_Club
        - Amex
        - En_Route
        - JCB
      type: string
      format: int32
    CreditCardDetail:
      required:
        - CardHolderName
        - Classification
        - CorporateProfileId
        - CreditCardId
        - CreditCardType
        - CustomerProfileId
        - ExpirationMonth
        - ExpirationYear
      type: object
      properties:
        CreditCardId:
          type: integer
          format: int32
        CustomerProfileId:
          type: integer
          format: int32
        CorporateProfileId:
          type: integer
          format: int32
        Classification:
          allOf:
            - $ref: '#/components/schemas/CreditCardClassification'
        CardNickname:
          maxLength: 100
          minLength: 0
          type: string
          nullable: true
        BillingNotes:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        CreateDate:
          type: string
          format: date-time
        LastModifyDate:
          type: string
          format: date-time
        IsDeleted:
          type: boolean
        IsInactive:
          type: boolean
        IsPrimary:
          type: boolean
        IsExpired:
          type: boolean
        ContainsPrivilegedInformation:
          type: boolean
        CreditCardType:
          allOf:
            - $ref: '#/components/schemas/CreditCardType'
        CardHolderName:
          maxLength: 100
          minLength: 0
          type: string
        CardNumber:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        ExpirationMonth:
          type: integer
          format: int32
        ExpirationYear:
          type: integer
          format: int32
        Address:
          allOf:
            - $ref: '#/components/schemas/AddressInfo'
          nullable: true
      additionalProperties: false
      description: Information of a credit card record that can be viewed/updated by standard user.
    CreditCardDetailApiItemListResponse:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/CreditCardDetail'
          description: List of items to be returned in response
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defined an Api response that includes a list of models
    CreditCardDetailApiItemResponse:
      type: object
      properties:
        Item:
          allOf:
            - $ref: '#/components/schemas/CreditCardDetail'
          description: Response object
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defines An API response that includes a single model
    UserAuthRequest:
      type: object
      properties:
        Username:
          type: string
          description: Username of customer
          nullable: true
        Password:
          type: string
          description: Password of customer
          nullable: true
        ClientId:
          type: string
          description: Uniqueu client ID for customer access token
          nullable: true
        ClientSecret:
          type: string
          description: Client application secret for applicatin generating the login
          nullable: true
        RefreshToken:
          type: string
          description: 'Identifies request as a refresh token request. In this case, username/password are not used.'
          nullable: true
        SystemId:
          type: string
          description: System ID of target system (see remarks)
          nullable: true
      additionalProperties: false
      description: Manages properties of an authentication request
    SecurityTokenType:
      enum:
        - Unknown
        - Internal
        - WebServiceUser
        - Partner
        - ExpressUser
        - System
        - External
        - ContentTripTicket
        - ContentGreetSign
        - CreditCard
        - CreditCardSysadmin
      type: string
      format: int32
    CreditCardAccessToken:
      type: object
      properties:
        CreditCardId:
          type: integer
          description: ID of credit card the token is valid for
          format: int32
        SecurityToken:
          type: string
          description: Security Token
          nullable: true
        SecurityTokenType:
          allOf:
            - $ref: '#/components/schemas/SecurityTokenType'
          description: The type of token generated
        Username:
          type: string
          description: username of user requesting access
          nullable: true
        IsSystemAdministrator:
          type: boolean
          description: 'If true, the user has access to sensitive caard number data'
        Expiration:
          type: string
          description: Expiration of access token
          format: date-time
      additionalProperties: false
      description: Manages basic info for an adhoc Credit Card access token
    CreditCardAccessTokenApiItemResponse:
      type: object
      properties:
        Item:
          allOf:
            - $ref: '#/components/schemas/CreditCardAccessToken'
          description: Response object
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defines An API response that includes a single model
    CustomerPricingDetail:
      type: object
      properties:
        IsTaxExempt:
          type: boolean
        DefaultZoneIdGround:
          type: integer
          format: int32
        DefaultZoneIdArrival:
          type: integer
          format: int32
        DefaultZoneIdDeparture:
          type: integer
          format: int32
        DoLockPricingOverrides:
          type: boolean
      additionalProperties: false
    GlobalOverride:
      enum:
        - UseGlobal
        - 'True'
        - 'False'
      type: string
      format: int32
    CustomerSettings:
      type: object
      properties:
        DocumentEmailFormatOverride:
          allOf:
            - $ref: '#/components/schemas/DocumentEmailFormat'
        CurrencySymbol:
          allOf:
            - $ref: '#/components/schemas/CurrencySymbol'
        DoEmailConfirmations:
          type: boolean
        DoEmailConfirmationUpdates:
          type: boolean
        DoEmailCancellations:
          type: boolean
        DoEmailStatements:
          type: boolean
        DoEnablePortalReservations:
          type: boolean
        PortalPricingPlans:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        DoEmailInvoiceOnPaidInFull:
          type: boolean
        DoEmailInvoices:
          type: boolean
        DoUseSummaryInvoice:
          type: boolean
        DoShowInvoiceDiscounts:
          type: boolean
        DoShowInvoiceLogo:
          type: boolean
        DoDisplayEstimatesDiscounts:
          type: boolean
        DoShowSubtotalInvoiceSummary:
          type: boolean
        InvoiceChargeDisplay:
          allOf:
            - $ref: '#/components/schemas/ChargeDisplay'
        DoDisplayTripTicketCreditCard:
          type: boolean
        DoDisplayTripTicketNextSegment:
          type: boolean
        DoDisplayTripTicketCharges:
          type: boolean
        DoDisplayTripTicketDiscounts:
          type: boolean
        DoDisplayTripTicketVariableFeeItemsPercentage:
          type: boolean
        DoDisplayConfirmationEstimatedEndtime:
          type: boolean
        ConfirmationChargeDisplay:
          allOf:
            - $ref: '#/components/schemas/ChargeDisplay'
        DoDisplayConfirmationDiscounts:
          type: boolean
        DoDisplayConfirmationCreditCard:
          type: boolean
        DoDiplayConfirmationVariableFeeItemPercentage:
          type: boolean
        DoShowConfirmationAlias:
          type: boolean
        DoEmailReceiptsToReservationEmail:
          type: boolean
        DoSendPostTripEmail:
          type: boolean
        DoSendPostTripSms:
          type: boolean
        DoEnableInProcessNotifications:
          type: boolean
        DoEmailInProcessNotifications:
          type: boolean
        DoEmailPreTripNotifications:
          type: boolean
        DoSendPreTripNotificationsViaSmsOverride:
          allOf:
            - $ref: '#/components/schemas/GlobalOverride'
        DoShowPortalPricing:
          type: boolean
        DoShowPortalDashboard:
          type: boolean
        DoIncludeDashboardLink:
          type: boolean
        DoRequireDigitalSignatureConfirmations:
          type: boolean
        DoRequireDigitalSignatureTripTickets:
          type: boolean
      additionalProperties: false
    CustomerDetail:
      required:
        - CompanyId
        - CustomerId
        - LastName
      type: object
      properties:
        PricingDetail:
          allOf:
            - $ref: '#/components/schemas/CustomerPricingDetail'
          nullable: true
        Settings:
          allOf:
            - $ref: '#/components/schemas/CustomerSettings'
          nullable: true
        LastName:
          maxLength: 50
          minLength: 0
          type: string
        PhoneNumber1:
          maxLength: 25
          minLength: 0
          type: string
          nullable: true
        CorporateProfileCompanyName:
          type: string
          description: Name of corporate profile the customer belongs too (read only)
          nullable: true
        CompanyName:
          maxLength: 200
          minLength: 0
          type: string
          description: Name of company the customer books under (read only)
          nullable: true
        Street1:
          maxLength: 100
          minLength: 0
          type: string
          nullable: true
        Street2:
          maxLength: 100
          minLength: 0
          type: string
          nullable: true
        City:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        State:
          maxLength: 3
          minLength: 0
          type: string
          nullable: true
        PostalCode:
          maxLength: 20
          minLength: 0
          type: string
          nullable: true
        IsVip:
          type: boolean
        IsSpecialHandling:
          type: boolean
        IsInactive:
          type: boolean
        CorporateProfileId:
          type: integer
          format: int32
        Designation:
          maxLength: 6
          minLength: 0
          type: string
          nullable: true
        GreetSignAlias:
          maxLength: 155
          minLength: 0
          type: string
          nullable: true
        PhoneNumber2:
          maxLength: 25
          minLength: 0
          type: string
          nullable: true
        FaxNumber:
          maxLength: 25
          minLength: 0
          type: string
          nullable: true
        ReferencePO:
          maxLength: 30
          minLength: 0
          type: string
          nullable: true
        CostCode:
          type: string
          nullable: true
        TripNotes:
          maxLength: 250
          minLength: 0
          type: string
          nullable: true
        MiscNotes:
          maxLength: 250
          minLength: 0
          type: string
          nullable: true
        Preferences:
          maxLength: 250
          minLength: 0
          type: string
          nullable: true
        CustomerSinceDate:
          type: string
          format: date-time
        LastModifyDate:
          type: string
          format: date-time
        OrderedByName:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        OrderedByPhone:
          maxLength: 25
          minLength: 0
          type: string
          nullable: true
        DefaultVehicleTypeId:
          type: integer
          format: int32
        DefaultPricingId:
          type: integer
          format: int32
        DefaultPricingName:
          type: string
          nullable: true
        BookingSourceId:
          type: integer
          format: int32
        BookingCategoryId:
          type: integer
          format: int32
        TripCategoryId:
          type: integer
          format: int32
        TripTypeId:
          type: integer
          format: int32
        CollectionType:
          allOf:
            - $ref: '#/components/schemas/CollectionType'
        CollectionMethod:
          allOf:
            - $ref: '#/components/schemas/CollectionMethod'
        CollectionTermsDays:
          type: integer
          format: int32
        CollectionTermsDaysLateFees:
          type: integer
          format: int32
        DeliveryMethod:
          allOf:
            - $ref: '#/components/schemas/DeliveryMethod'
        DeliveryFrequency:
          allOf:
            - $ref: '#/components/schemas/DeliveryFrequency'
        DefaultTimezone:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        BookingMessage:
          maxLength: 250
          minLength: 0
          type: string
          nullable: true
        InvoiceMessage:
          maxLength: 100
          minLength: 0
          type: string
          nullable: true
        InvoiceSortOrder:
          allOf:
            - $ref: '#/components/schemas/InvoiceSortOrder'
        InvoiceCreateHandlingType:
          allOf:
            - $ref: '#/components/schemas/InvoiceCreationHandlingType'
        AlternateContractId:
          type: integer
          format: int32
        CreateDate:
          type: string
          description: Internal use only
          format: date-time
        LastReservationDate:
          type: string
          format: date-time
        LastModifyFTUserId:
          type: integer
          description: Internal use only
          format: int32
        CreatedByFTUserId:
          type: integer
          description: Internal use only
          format: int32
        AffiliateSystemGuid:
          maxLength: 50
          minLength: 0
          type: string
          description: Internal use only
          nullable: true
        IsQuickQuoteCustomer:
          type: boolean
          description: Internal use only
        IsAffiliateCustomer:
          type: boolean
          description: 'If true, triggers affiliate display options within communication (sms, email, confirmations, etc)'
        IsTransientCustomer:
          type: boolean
        IsTransponetAccountCatchall:
          type: boolean
          description: Internal use only
        DoAllowTransponetHourlyPricing:
          type: boolean
        CustomerId:
          type: integer
          format: int32
        CompanyId:
          type: integer
          format: int32
        FirstName:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        MiddleName:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        EmailAddress:
          maxLength: 125
          minLength: 0
          type: string
          format: email
          nullable: true
        CellPhoneNumber:
          maxLength: 25
          minLength: 0
          type: string
          nullable: true
        AccountNumber:
          maxLength: 20
          minLength: 0
          type: string
          nullable: true
        DoRequireReferencePo:
          type: boolean
        DoBillCorporate:
          type: boolean
          description: 'If true, reservation customer is set to bill corporate, NOT customer.'
        DoUseCorporatePricingOverrides:
          type: boolean
          description: 'If true, customer will use corporate overrides from corporate billing profile'
        ProfileNotes:
          maxLength: 250
          minLength: 0
          type: string
          nullable: true
      additionalProperties: false
    CustomerDetailApiItemResponse:
      type: object
      properties:
        Item:
          allOf:
            - $ref: '#/components/schemas/CustomerDetail'
          description: Response object
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defines An API response that includes a single model
    CustomerSummarySearchRequest:
      required:
        - SearchString
      type: object
      properties:
        SearchString:
          type: string
          description: "Matches customer by contains string in the following properties\r\n(first name, last name, email address, phone number)"
        IncludeInactive:
          type: boolean
        MaxResults:
          type: integer
          description: Max number of results returned by this query (default 100)
          format: int32
      additionalProperties: false
    CustomerSummary:
      required:
        - CompanyId
        - CustomerId
      type: object
      properties:
        LastName:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        PhoneNumber1:
          maxLength: 25
          minLength: 0
          type: string
          nullable: true
        CustomerId:
          type: integer
          format: int32
        CompanyId:
          type: integer
          format: int32
        FirstName:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        MiddleName:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        EmailAddress:
          maxLength: 125
          minLength: 0
          type: string
          format: email
          nullable: true
        CellPhoneNumber:
          maxLength: 25
          minLength: 0
          type: string
          nullable: true
        AccountNumber:
          maxLength: 20
          minLength: 0
          type: string
          nullable: true
        DoRequireReferencePo:
          type: boolean
        DoBillCorporate:
          type: boolean
          description: 'If true, reservation customer is set to bill corporate, NOT customer.'
        DoUseCorporatePricingOverrides:
          type: boolean
          description: 'If true, customer will use corporate overrides from corporate billing profile'
        ProfileNotes:
          maxLength: 250
          minLength: 0
          type: string
          nullable: true
      additionalProperties: false
      description: Provides basic information for a customer
    CustomerSummaryApiItemListResponse:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/CustomerSummary'
          description: List of items to be returned in response
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defined an Api response that includes a list of models
    CustomerSimpleSearchRequest:
      type: object
      properties:
        LastName:
          type: string
          description: Searches profiles where last name contains (case-insensitive)
          nullable: true
        FirstName:
          type: string
          description: Searches profiles where first name contains (case-insensitive)
          nullable: true
        EmailAddress:
          type: string
          description: Searches profiles where email address contains (case-insensitive)
          nullable: true
        CorporateProfileId:
          type: integer
          description: Searches profiles where they are part of the Corporate Profile
          format: int32
        IncludeInactive:
          type: boolean
          description: 'If true, incldues inactive profiles in results (default: false)'
      additionalProperties: false
      description: Model to manage Customer Profile search request
    PricingPlanInfo:
      type: object
      properties:
        PricingPlanId:
          type: integer
          format: int32
        CustomerProfileId:
          type: integer
          format: int32
        CorporateProfileId:
          type: integer
          format: int32
        Name:
          type: string
          nullable: true
        IsGeoPricing:
          type: boolean
        IsDefault:
          type: boolean
        IsDisabled:
          type: boolean
      additionalProperties: false
    PricingPlanInfoApiItemListResponse:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/PricingPlanInfo'
          description: List of items to be returned in response
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defined an Api response that includes a list of models
    VehicleTypeInfo:
      type: object
      properties:
        ExcludeFromInternetReservations:
          type: boolean
        ExternalVehicleTypeId:
          type: integer
          format: int32
        ExternalVehicleTypeName:
          type: string
          nullable: true
        VehicleTypeImageId:
          type: integer
          format: int32
        VehicleTypeImageUrl:
          type: string
          nullable: true
        ColorRed:
          type: integer
          format: int32
        ColorGreen:
          type: integer
          format: int32
        ColorBlue:
          type: integer
          format: int32
        InternalVehicleTypeId:
          type: integer
          format: int32
        InternalVehicleTypeName:
          type: string
          nullable: true
        PassengerCapacity:
          type: integer
          format: int32
        BagCapacity:
          type: integer
          format: int32
        VehicleTypeImageUri:
          type: string
          format: uri
          nullable: true
      additionalProperties: false
    CustomerPricingDefaults:
      type: object
      properties:
        DefaultPricingId:
          type: integer
          format: int32
        PricingList:
          type: array
          items:
            $ref: '#/components/schemas/PricingPlanInfo'
          nullable: true
        DefaultVehicleTypeId:
          type: integer
          format: int32
        VehicleTypeList:
          type: array
          items:
            $ref: '#/components/schemas/VehicleTypeInfo'
          nullable: true
        DefaultGroundPricingVehicleTypeId:
          type: integer
          format: int32
        DefaultGroundPricingVehicleTypeName:
          type: string
          nullable: true
        DefaultArrivalPricingVehicleTypeId:
          type: integer
          format: int32
        DefaultArrivalPricingVehicleTypeName:
          type: string
          nullable: true
        DefaultDeparturePricingVehicleTypeId:
          type: integer
          format: int32
        DefaultDeparturePricingVehicleTypeName:
          type: string
          nullable: true
      additionalProperties: false
    CustomerPricingDefaultsApiItemResponse:
      type: object
      properties:
        Item:
          allOf:
            - $ref: '#/components/schemas/CustomerPricingDefaults'
          description: Response object
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defines An API response that includes a single model
    ContactInfo:
      required:
        - ContactId
        - FirstName
        - LastName
      type: object
      properties:
        ContactId:
          type: integer
          format: int32
        Designation:
          maxLength: 6
          minLength: 0
          type: string
          nullable: true
        FirstName:
          maxLength: 50
          minLength: 0
          type: string
        MiddleName:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        LastName:
          maxLength: 50
          minLength: 0
          type: string
        PhoneNumber1:
          maxLength: 25
          minLength: 0
          type: string
          nullable: true
        CellPhoneNumber:
          maxLength: 25
          minLength: 0
          type: string
          nullable: true
        Street1:
          maxLength: 100
          minLength: 0
          type: string
          nullable: true
        Street2:
          maxLength: 100
          minLength: 0
          type: string
          nullable: true
        City:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        State:
          maxLength: 3
          minLength: 0
          type: string
          nullable: true
        PostalCode:
          maxLength: 20
          minLength: 0
          type: string
          nullable: true
        Country:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        EmailAddress:
          maxLength: 125
          minLength: 0
          type: string
          nullable: true
        DoEmailBookingConfirmations:
          type: boolean
        DoEmailBookingConfirmationUpdates:
          type: boolean
        DoEmailBookingCancellations:
          type: boolean
        DoEmailStatements:
          type: boolean
        DoEmailPreTripNotifications:
          type: boolean
        DoEmailInProcessNotifications:
          type: boolean
        InvoiceSendOption:
          allOf:
            - $ref: '#/components/schemas/InvoiceSendOption'
        AdditionalContactNotificationIds:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
      additionalProperties: false
    ContactInfoApiItemListResponse:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/ContactInfo'
          description: List of items to be returned in response
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defined an Api response that includes a list of models
    ContactInfoApiItemResponse:
      type: object
      properties:
        Item:
          allOf:
            - $ref: '#/components/schemas/ContactInfo'
          description: Response object
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defines An API response that includes a single model
    EmployeeTypeEnum:
      enum:
        - None
        - Driver
        - Dispatcher
        - Contractor
        - Administration
        - Reservationist
        - Accounting
        - Maintenance
        - Management
        - Other
      type: string
      description: Some comment
      format: int32
    EmployeeStatusType:
      enum:
        - None
        - Off_Duty
        - On_Duty
        - Unknown
      type: string
      format: int32
    EmployeeInfo:
      required:
        - FirstName
        - LastName
        - MiddleName
        - PhoneCell
        - PhoneHome
        - Title
      type: object
      properties:
        EmployeeId:
          type: integer
          format: int32
        EmployeeType:
          allOf:
            - $ref: '#/components/schemas/EmployeeTypeEnum'
        Status:
          allOf:
            - $ref: '#/components/schemas/EmployeeStatusType'
        FirstName:
          maxLength: 50
          minLength: 0
          type: string
        LastName:
          maxLength: 50
          minLength: 0
          type: string
        MiddleName:
          type: string
        Title:
          type: string
        PhoneCell:
          type: string
        PhoneHome:
          type: string
        PhoneOther:
          maxLength: 25
          minLength: 0
          type: string
          nullable: true
        EmailAddress:
          maxLength: 120
          minLength: 0
          type: string
          nullable: true
        MetroAreaServed:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        Address:
          allOf:
            - $ref: '#/components/schemas/AddressInfo'
          nullable: true
        HasCommercialLicense:
          type: boolean
        IsInactive:
          type: boolean
        DateOfBirth:
          type: string
          format: date-time
        HireDate:
          type: string
          format: date-time
        TerminationDate:
          type: string
          format: date-time
        EmployeePhotoUrl:
          type: string
          nullable: true
      additionalProperties: false
    EmployeeInfoApiItemListResponse:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeInfo'
          description: List of items to be returned in response
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defined an Api response that includes a list of models
    FlightVerifyRequest:
      required:
        - AirlineCode
        - AirportCode
        - FlightNumber
      type: object
      properties:
        AirportCode:
          type: string
          description: FAA Airport code
        AirlineCode:
          type: string
          description: FAA Airline Code
        FlightNumber:
          type: string
          description: Airline flight number
        ScheduledArrivalTime:
          type: string
          description: Arrivla time of incoming flight
          format: date-time
        ScheduledDepartureTime:
          type: string
          description: Departure time of outgoing flight
          format: date-time
      additionalProperties: false
    FlightVerifyResult:
      type: object
      properties:
        IsVerified:
          type: boolean
          description: True of flight is verified
        AirportCode:
          type: string
          nullable: true
        ConnectingAirportCode:
          type: string
          nullable: true
        FlightNumber:
          type: string
          nullable: true
        AirlineCode:
          type: string
          nullable: true
        ArrivalTimeScheduled:
          type: string
          format: date-time
        DepartureTimeScheduled:
          type: string
          format: date-time
      additionalProperties: false
    FlightVerifyResultApiItemResponse:
      type: object
      properties:
        Item:
          allOf:
            - $ref: '#/components/schemas/FlightVerifyResult'
          description: Response object
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defines An API response that includes a single model
    ReservationGreetSignImageRequest:
      required:
        - ReservationIdList
      type: object
      properties:
        ReservationIdList:
          type: array
          items:
            type: integer
            format: int32
        IncludeImageData:
          type: boolean
      additionalProperties: false
    IncidentsSearchRequest:
      type: object
      properties:
        ReservationId:
          type: integer
          format: int32
        CustomerId:
          type: integer
          format: int32
        CorporateProfileId:
          type: integer
          format: int32
        EmployeeId:
          type: integer
          format: int32
        StartDate:
          type: string
          format: date-time
        EndDate:
          type: string
          format: date-time
      additionalProperties: false
    CorporateProfileSummary:
      required:
        - CorporateProfileId
      type: object
      properties:
        CorporateProfileId:
          type: integer
          format: int32
        CompanyName:
          maxLength: 100
          minLength: 0
          type: string
          nullable: true
      additionalProperties: false
    IncidentStatus:
      enum:
        - None
        - Open
        - Resolved
        - Closed_NotResolved
      type: string
      format: int32
    IncidentInfo:
      required:
        - Detail
      type: object
      properties:
        IncidentId:
          type: integer
          format: int32
        ReservationId:
          type: integer
          format: int32
        EmployeeId:
          type: integer
          format: int32
        AffiliateId:
          type: integer
          format: int32
        CustomerProfileId:
          type: integer
          format: int32
        CustomerSummary:
          allOf:
            - $ref: '#/components/schemas/CustomerSummary'
          description: Provide a summary of customer profile related to reservation
          nullable: true
        CorporateProfileId:
          type: integer
          format: int32
        CorporateProfileSummary:
          allOf:
            - $ref: '#/components/schemas/CorporateProfileSummary'
          description: Provide a summary of corporate profile related to reservation
          nullable: true
        Detail:
          maxLength: 4000
          minLength: 0
          type: string
        CreateTime:
          type: string
          description: 'Not updatable, system maintained'
          format: date-time
        ModifiedTime:
          type: string
          description: 'Not updatable, system maintained'
          format: date-time
        Status:
          allOf:
            - $ref: '#/components/schemas/IncidentStatus'
        LostRevenue:
          type: number
          format: double
        RecoveryCosts:
          type: number
          format: double
        IsReportedByCustomer:
          type: boolean
        IsCustomerImpacted:
          type: boolean
        EnteredByUserId:
          type: integer
          format: int32
        ResolvedByUserId:
          type: integer
          format: int32
        ResolutionTime:
          type: string
          format: date-time
      additionalProperties: false
      description: Manages incidents within the database
    IncidentInfoApiItemListResponse:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/IncidentInfo'
          description: List of items to be returned in response
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defined an Api response that includes a list of models
    IncidentInfoApiItemResponse:
      type: object
      properties:
        Item:
          allOf:
            - $ref: '#/components/schemas/IncidentInfo'
          description: Response object
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defines An API response that includes a single model
    VehicleTypeInfoApiItemListResponse:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/VehicleTypeInfo'
          description: List of items to be returned in response
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defined an Api response that includes a list of models
    PricingVehicleTypeZoneInfo:
      type: object
      properties:
        PricingVehicleTypeZoneId:
          type: integer
          format: int32
        VehicleTypeId:
          type: integer
          format: int32
        PricingId:
          type: integer
          format: int32
        Name:
          type: string
          nullable: true
      additionalProperties: false
    PricingVehicleTypeZoneInfoApiItemListResponse:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/PricingVehicleTypeZoneInfo'
          description: List of items to be returned in response
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defined an Api response that includes a list of models
    BookingSource:
      enum:
        - UNKNOWN
        - FASTTRAK
        - FTA
        - NEXT
        - CUSTOMER_PORTAL
        - EXTERNAL
        - DRIVER_APP
      type: string
      format: int32
    QuoteBookingType:
      enum:
        - None
        - OneWay
        - RoundTrip
      type: string
      format: int32
    DurationType:
      enum:
        - None
        - PointToPoint
        - Hourly
      type: string
      format: int32
    ReservationTravelType:
      enum:
        - None
        - Ground
        - Arrival
        - Departure
        - Transfer
      type: string
      format: int32
    AirportAirlineFlightInfo:
      required:
        - ScheduledDateTime
      type: object
      properties:
        AirportId:
          type: integer
          format: int32
        AirportCode:
          maxLength: 4
          minLength: 0
          type: string
          nullable: true
        AirportName:
          maxLength: 100
          minLength: 0
          type: string
          nullable: true
        AirlineId:
          type: integer
          format: int32
        AirlineCode:
          maxLength: 4
          minLength: 0
          type: string
          nullable: true
        AirlineName:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        FlightNumber:
          maxLength: 10
          minLength: 0
          type: string
          nullable: true
        ConnectingAirportID:
          type: integer
          description: 'If found, will manage the connectinmg airport ID'
          format: int32
        ScheduledDateTime:
          type: string
          description: Scheduled per flight status lookup ahead of trip
          format: date-time
        ActualDateTime:
          type: string
          description: Actual per real-time flight status day of trip
          format: date-time
        FlightStatus:
          maxLength: 30
          minLength: 0
          type: string
          description: Real-time flight status string day of trip (dependent on flight provider)
          nullable: true
        FlightAdditionalInfo:
          maxLength: 100
          minLength: 0
          type: string
          description: 'Additional info from real-time flight status (if available, dependent on flight provider)'
          nullable: true
      additionalProperties: false
    LocationDetail:
      type: object
      properties:
        Latitude:
          type: number
          description: Latitiude of location
          format: double
        Longitude:
          type: number
          description: Longitude of location
          format: double
        Address:
          allOf:
            - $ref: '#/components/schemas/AddressInfo'
          description: Address information model
          nullable: true
        AirportAirlineFlightInfo:
          allOf:
            - $ref: '#/components/schemas/AirportAirlineFlightInfo'
          description: 'If the location includes an airport, airport/airline information will be included'
          nullable: true
        AdditionalInformation:
          maxLength: 500
          minLength: 0
          type: string
          description: Additional information available for location
          nullable: true
        SummaryAddress:
          type: string
          description: Summary Address
          nullable: true
          readOnly: true
        DisplayAddress:
          type: string
          description: User-friendly display address
          nullable: true
          readOnly: true
        GeoLookupAddress:
          type: string
          description: Geo Lookup Summary Address
          nullable: true
          readOnly: true
      additionalProperties: false
      description: Manages information regarding a Pick-Up or Drop-Off location
    TripInformation:
      type: object
      properties:
        DurationType:
          allOf:
            - $ref: '#/components/schemas/DurationType'
          description: ''
        TravelType:
          allOf:
            - $ref: '#/components/schemas/ReservationTravelType'
        ScheduledPickupTime:
          type: string
          format: date-time
        BaggageCount:
          type: integer
          format: int32
        PassengerCount:
          type: integer
          format: int32
        FromLocation:
          allOf:
            - $ref: '#/components/schemas/LocationDetail'
          description: Initial pick-up location
          nullable: true
        ToLocation:
          allOf:
            - $ref: '#/components/schemas/LocationDetail'
          description: Final drop-off location
          nullable: true
        AdditionalStops:
          type: array
          items:
            $ref: '#/components/schemas/LocationDetail'
          description: Includes any additional stops include in quote
          nullable: true
        RequestedTotalMinutes:
          type: integer
          description: 'If necessary, total trip time to quote. Zero if no additional time is requested.'
          format: int32
      additionalProperties: false
    QuoteRequest:
      required:
        - BookingType
        - TripInformation
      type: object
      properties:
        SystemId:
          type: string
          nullable: true
        BookingSource:
          allOf:
            - $ref: '#/components/schemas/BookingSource'
          description: Booking source for quote
        BookingType:
          allOf:
            - $ref: '#/components/schemas/QuoteBookingType'
          description: Specifies a one-way or round trip quote
        CompanyId:
          type: integer
          description: Company ID associated with quote request
          format: int32
        CustomerId:
          type: integer
          description: Customer ID associated with quote request
          format: int32
        CorporateProfileId:
          maximum: 2147483647
          minimum: 0
          type: integer
          description: Corporate ID associated with quote request
          format: int32
        PricingIdList:
          type: array
          items:
            type: integer
            format: int32
          description: Pricing ID associated with request
          nullable: true
        VehicleTypeIdList:
          type: array
          items:
            type: integer
            format: int32
          description: Vehicle Type ID associated with request
          nullable: true
        TripInformation:
          allOf:
            - $ref: '#/components/schemas/TripInformation'
          description: Details of trip to quote
      additionalProperties: false
    QuoteRequestDetailed:
      required:
        - BookingType
        - TripInformation
      type: object
      properties:
        OperatorStartAddress:
          allOf:
            - $ref: '#/components/schemas/AddressInfo'
          description: Start Address of trip (non-customer origination)
          nullable: true
        OperatorEndAddress:
          allOf:
            - $ref: '#/components/schemas/AddressInfo'
          description: End Address of trip (non-customer origination)
          nullable: true
        DoDisableOperatorCompanyAddressOverride:
          type: boolean
          description: 'Allows override of company start/end address settings, if enabled.'
        DoIncludeInternalResultsOverride:
          type: boolean
          description: Allows override and return of internal results (vehicle type limitation).
        DoIncludeInvalidResultsOverride:
          type: boolean
          description: Enables the return of invalid resutls (i.e. not matching pick-up/drop-off locations)
        DoIncludeDuplicateVehicleTypeResultsOverride:
          type: boolean
          description: Enables the return of all vehicles across all plans instead of the least expensive option.
        DoValidatePassengerBaggageLimitsOverride:
          type: boolean
        IsForExternalUse:
          type: boolean
          description: Property will be used to limit serialization of internal (non-secure) fields for external uses of the modelss
        SystemId:
          type: string
          nullable: true
        BookingSource:
          allOf:
            - $ref: '#/components/schemas/BookingSource'
          description: Booking source for quote
        BookingType:
          allOf:
            - $ref: '#/components/schemas/QuoteBookingType'
          description: Specifies a one-way or round trip quote
        CompanyId:
          type: integer
          description: Company ID associated with quote request
          format: int32
        CustomerId:
          type: integer
          description: Customer ID associated with quote request
          format: int32
        CorporateProfileId:
          maximum: 2147483647
          minimum: 0
          type: integer
          description: Corporate ID associated with quote request
          format: int32
        PricingIdList:
          type: array
          items:
            type: integer
            format: int32
          description: Pricing ID associated with request
          nullable: true
        VehicleTypeIdList:
          type: array
          items:
            type: integer
            format: int32
          description: Vehicle Type ID associated with request
          nullable: true
        TripInformation:
          allOf:
            - $ref: '#/components/schemas/TripInformation'
          description: Details of trip to quote
      additionalProperties: false
    VehicleTypeSummary:
      type: object
      properties:
        InternalVehicleTypeId:
          type: integer
          format: int32
        InternalVehicleTypeName:
          type: string
          nullable: true
        PassengerCapacity:
          type: integer
          format: int32
        BagCapacity:
          type: integer
          format: int32
        VehicleTypeImageUri:
          type: string
          format: uri
          nullable: true
      additionalProperties: false
      description: Summary information for Vehicle Type
    ValidationDetail:
      type: object
      properties:
        IsValid:
          type: boolean
          readOnly: true
        OutsideServiceArea:
          type: boolean
          readOnly: true
        PickupOutsideServiceArea:
          type: boolean
        DropoffOutsideServiceArea:
          type: boolean
        BaggageCountExceeded:
          type: boolean
        PassengerCountExceeded:
          type: boolean
        DurationInvalid:
          type: boolean
        TripTypeInvalid:
          type: boolean
        VehicleTypeInvalid:
          type: boolean
        OtherInvalid:
          type: boolean
        Messages:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    MapsUnitOfMeasure:
      enum:
        - Kilometers
        - Miles
      type: string
      format: int32
    GeoTripDetail:
      type: object
      properties:
        FromAddress:
          type: string
          nullable: true
        ToAddress:
          type: string
          nullable: true
        TravelTimeOfDayUTC:
          type: string
          format: date-time
        UnitOfMeasure:
          allOf:
            - $ref: '#/components/schemas/MapsUnitOfMeasure'
        Distance:
          type: number
          format: double
        DistanceAsMiles:
          type: number
          format: double
          readOnly: true
        DistanceAsKilometers:
          type: number
          format: double
          readOnly: true
        DurationMinutesNominal:
          type: number
          format: double
        DurationMinutesTraffic:
          type: number
          format: double
      additionalProperties: false
    EndpointDetail:
      type: object
      properties:
        PostalCode:
          type: string
          nullable: true
        City:
          type: string
          nullable: true
        AirportCode:
          type: string
          nullable: true
        Latitude:
          type: string
          nullable: true
        Longitude:
          type: string
          nullable: true
      additionalProperties: false
    GeoTripPackage:
      type: object
      properties:
        GeoTripList:
          type: array
          items:
            $ref: '#/components/schemas/GeoTripDetail'
          nullable: true
        FromEndpointDetail:
          allOf:
            - $ref: '#/components/schemas/EndpointDetail'
          nullable: true
        ToEndpointDetailList:
          type: array
          items:
            $ref: '#/components/schemas/EndpointDetail'
          nullable: true
        FromTimezoneName:
          type: string
          nullable: true
        BypassedDynamicRoutes:
          type: boolean
        TotalDistanceKilometers:
          type: number
          format: double
          readOnly: true
        TotalDistanceMiles:
          type: number
          format: double
          readOnly: true
        TotalDurationMinsTraffic:
          type: number
          format: double
          readOnly: true
        TotalDurationMinsNominal:
          type: number
          format: double
          readOnly: true
      additionalProperties: false
    ReservationPricingType:
      enum:
        - None
        - Vehicle_Type
        - Flat_Rate_Vehicle_Type
        - Fixed_Charge_Item
        - Variable_Fee_Item
        - Tax_Item
        - Base_Charges
        - Base_Additional_Charges_1
        - Base_Additional_Charges_2
        - Discount
      type: string
      format: int32
    BasePricingItem:
      type: object
      properties:
        Minimum:
          type: number
          format: double
        Estimated:
          type: number
          format: double
        Quantity:
          type: integer
          description: Quantity of pricing item (default 1)
          format: int32
        Rate:
          type: number
          description: Single quantity rate of item
          format: double
        Total:
          type: number
          description: Total rate calculation of item (qty * rate)
          format: double
        Name:
          type: string
          description: Descriptinve name of pricing item
          nullable: true
        PricingItemType:
          allOf:
            - $ref: '#/components/schemas/ReservationPricingType'
          description: Type of pricing item
      additionalProperties: false
    AdditionalPricingItem:
      type: object
      properties:
        PricingItemId:
          type: integer
          format: int32
        IsQuantifiable:
          type: boolean
          description: 'If true, the pricnig item quantity can be modified, default of 1 otherwise.'
        IsFixedPrice:
          type: boolean
          description: 'If true, the rate cannot be modified by the user and is fixed in price'
        ApplyToBaseCharge:
          type: boolean
        ApplyToAdditional1Charge:
          type: boolean
        AppliesToAdditional2Charge:
          type: boolean
        AppliesToFixedItemList:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        AppliesToVariableItemList:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        AppliesToAdditionalItemList:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        SelectedTaxRateId:
          type: integer
          description: 'If true, the item is taxable and will show'
          format: int32
        DoPayToDriver:
          type: boolean
          description: Specifies the item is to be paid to driver
        DoPayToDriverOnlyContractor:
          type: boolean
          description: Specifies the item is to be paid to contractor drivers only
        DriverPayPercentage:
          type: number
          description: 'If only a percentage of the rate is paid to driver, it is specified here.'
          format: double
        IsCustomerOverride:
          type: boolean
          description: Signifies that the item was overridden at the customer level
        IsCorporateOverride:
          type: boolean
          description: Signifies that the item was overridden at the corporate level
        IsForExternalUse:
          type: boolean
          description: This and all serialize fields are used to hide when sending out for external consumption
        Quantity:
          type: integer
          description: Quantity of pricing item (default 1)
          format: int32
        Rate:
          type: number
          description: Single quantity rate of item
          format: double
        Total:
          type: number
          description: Total rate calculation of item (qty * rate)
          format: double
        Name:
          type: string
          description: Descriptinve name of pricing item
          nullable: true
        PricingItemType:
          allOf:
            - $ref: '#/components/schemas/ReservationPricingType'
          description: Type of pricing item
      additionalProperties: false
    TaxRate:
      type: object
      properties:
        TaxRateId:
          type: integer
          description: Internal identifier of tax rate
          format: int32
        ApplicableToPricingItemId:
          type: integer
          description: "Defines which tax item ID the tax is applicable to.\r\n\r\nAll rates are not applicable to all tax items ..only those items with corresponding pricingItemId"
          format: int32
        Name:
          type: string
          description: Description of rate
          nullable: true
        Rate:
          type: number
          description: Rate percentage
          format: double
      additionalProperties: false
      description: Defines core details of a tax rate
    ReservationPricingInfo:
      type: object
      properties:
        PricingId:
          type: integer
          description: Selected pricing for reservation
          format: int32
        InternalVehicleTypeId:
          type: integer
          description: Selected Vehicle Type for reservation pricing
          format: int32
        PricingVehicleTypeZoneId:
          type: integer
          description: 'If selected pricing is zone-based and is a point-to-point price, this will include the selected point-to-point zone.'
          format: int32
        IsFlatRate:
          type: boolean
          description: 'If is GEO pricing or Zone-based, the flat-rate will be enabled.'
        BaseRate:
          allOf:
            - $ref: '#/components/schemas/BasePricingItem'
          nullable: true
        AdditionalCharge1:
          allOf:
            - $ref: '#/components/schemas/BasePricingItem'
          nullable: true
        AdditionalCharge2:
          allOf:
            - $ref: '#/components/schemas/BasePricingItem'
          nullable: true
        AdditionalPricingItems:
          type: array
          items:
            $ref: '#/components/schemas/AdditionalPricingItem'
          nullable: true
        TaxRateList:
          type: array
          items:
            $ref: '#/components/schemas/TaxRate'
          description: Variable rates are pricing specific and can be applied to any number of pricing items.
          nullable: true
        IncrementalCharge:
          type: number
          description: 'Read-only,  If pricing plan is GEO, will include incremental rate calulation.'
          format: double
        MinimumCharge:
          type: number
          description: 'Read-only, If pricing plan is GEO, will include minimum rate calulation.'
          format: double
        MinimumRateIncludedAsBase:
          type: boolean
          description: 'If true, the base charge includes the minimum rate'
        TotalCharge:
          type: number
          description: 'Read-only, total of all charges'
          format: double
          readOnly: true
        IsForExternalUse:
          type: boolean
          description: Property will be used to limit serialization of internal (non-secure) fields for external uses of the modelss
      additionalProperties: false
      description: Describes the pricing characteristics of a reservation.
    Quote:
      type: object
      properties:
        QuoteId:
          type: string
          description: Unique identifier of individual Vehicle Type quote.
          nullable: true
        ScheduledPickupTime:
          type: string
          description: Scheduled Pickup time relative to pickup timezone (actual pickup timefor customer)
          format: date-time
        PricingId:
          type: integer
          description: Internal pricing ID of quote
          format: int32
        GlobalPricingId:
          type: string
          description: Global pricing ID across all systems
          nullable: true
        VehicleTypeSummary:
          allOf:
            - $ref: '#/components/schemas/VehicleTypeSummary'
          description: Vehicle type associated with individual quote
          nullable: true
        ValidationDetail:
          allOf:
            - $ref: '#/components/schemas/ValidationDetail'
          description: Any validation information regarding quote
          nullable: true
        GeoTripPackage:
          allOf:
            - $ref: '#/components/schemas/GeoTripPackage'
          description: GEO information used for trip calculations
          nullable: true
        TotalDurationMinutes:
          type: integer
          description: Total duration of trip
          format: int32
        OperatorAdditionalDistanceKm:
          type: number
          description: 'If configured, additional operator distance has been added to quote based on start/end address'
          format: double
        OperatorAdditionalDurationMins:
          type: number
          description: 'If configured, additional operator time has been added to quote based on start/end address'
          format: double
        OperatorAdditionalStopDurationMins:
          type: number
          description: Additional time added per stop to allow for typical onboard
          format: double
        PricingInformation:
          allOf:
            - $ref: '#/components/schemas/ReservationPricingInfo'
          description: Detailed pricing information for quote
          nullable: true
        IsValid:
          type: boolean
          description: Convenience value for overall validity of quote
          readOnly: true
      additionalProperties: false
    QuotePackage:
      required:
        - CreationDate
        - Deleted
        - DeletionDate
        - DocumentType
        - Id
        - ModifiedDate
        - Source
        - SystemId
      type: object
      properties:
        Id:
          type: string
          description: Unique identifier of overall quote package.
        QuoteDateTime:
          type: string
          description: DateTime of quote generation.
          format: date-time
        QuoteRequest:
          allOf:
            - $ref: '#/components/schemas/QuoteRequestDetailed'
          description: Original request that generated the quote
          nullable: true
        QuoteList:
          type: array
          items:
            $ref: '#/components/schemas/Quote'
          description: 'List of simplified quotes generated from the quote request (generally, external use only)'
          nullable: true
        Messages:
          type: array
          items:
            type: string
          description: Quote-level messages when generating the quote
          nullable: true
        IsForExternalUse:
          type: boolean
          description: Property will be used to limit serialization of internal (non-secure) fields for external uses of the modelss
        Source:
          allOf:
            - $ref: '#/components/schemas/BookingSource'
        SystemId:
          type: string
        DocumentType:
          type: string
        CreationDate:
          type: string
          format: date-time
        ModifiedDate:
          type: string
          format: date-time
        DeletionDate:
          type: string
          format: date-time
        Deleted:
          type: boolean
          readOnly: true
      additionalProperties: false
    QuotePackageApiItemResponse:
      type: object
      properties:
        Item:
          allOf:
            - $ref: '#/components/schemas/QuotePackage'
          description: Response object
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defines An API response that includes a single model
    QuoteApiItemResponse:
      type: object
      properties:
        Item:
          allOf:
            - $ref: '#/components/schemas/Quote'
          description: Response object
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defines An API response that includes a single model
    PrimaryPassengerInfo:
      required:
        - Name
      type: object
      properties:
        Name:
          maxLength: 155
          minLength: 0
          type: string
        Alias:
          maxLength: 155
          minLength: 0
          type: string
          nullable: true
        PhoneNumber:
          maxLength: 25
          minLength: 0
          type: string
          nullable: true
        EmailAddress:
          maxLength: 125
          minLength: 0
          type: string
          nullable: true
        DoEnablePassengerEmail:
          type: boolean
        DoEnablePassengerSMS:
          type: boolean
      additionalProperties: false
    ReservationBookingInfo:
      required:
        - CollectionMethod
        - CollectionType
        - CompanyId
        - CustomerId
        - EstimatedEndTime
        - InternalVehicleTypeId
        - LuggageCount
        - PassengerCount
        - PrimaryPassenger
        - ScheduledPickupTime
        - TravelType
      type: object
      properties:
        CompanyId:
          type: integer
          description: Id of corresponding Company
          format: int32
        ReservationGroupId:
          type: integer
          description: Id of corresponding Reservation Group
          format: int32
        CustomerId:
          type: integer
          description: Id of corresponding Customer
          format: int32
        CorporateProfileId:
          type: integer
          description: Id of corresponding Corporate Profile
          format: int32
        PricingId:
          type: integer
          description: Pricing plan set to the reservation
          format: int32
        InternalVehicleTypeId:
          maximum: 9999
          minimum: 1
          type: integer
          description: Internal vehicle type ID on reservation
          format: int32
        TravelType:
          allOf:
            - $ref: '#/components/schemas/ReservationTravelType'
          description: 'Type of reservation travel (arrival, departures, etc.)'
        TimeZoneName:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        ReservationPhoneNumber:
          maxLength: 25
          minLength: 0
          type: string
          description: Primary reservation phone number
          nullable: true
        ReferencePO:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        CostCode:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        BookingSource:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        BookingCategory:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        TripCategory:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        TripType:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        OrderedBy:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        OrderedByPhone:
          maxLength: 25
          minLength: 0
          type: string
          nullable: true
        ScheduledPickupTime:
          type: string
          description: As scheduled in operators system
          format: date-time
        EstimatedEndTime:
          type: string
          description: As estimated in providers system
          format: date-time
        EstimatedHours:
          type: number
          description: Estimated duration of trip
          format: double
        TripNotes:
          maxLength: 4000
          minLength: 0
          type: string
          description: Trip Notes for reservation. May be defaulted from customer profile.
          nullable: true
        AffiliateNotes:
          maxLength: 4000
          minLength: 0
          type: string
          description: Affiliate notes for reservation. May be defaulted from customer profile
          nullable: true
        TripPreferences:
          maxLength: 4000
          minLength: 0
          type: string
          description: Trip preferences entered for reservation. May be defaulted from customer profile.
          nullable: true
        FromLocation:
          allOf:
            - $ref: '#/components/schemas/LocationDetail'
          description: Location detail of Pick-Up Location
          nullable: true
        ToLocation:
          allOf:
            - $ref: '#/components/schemas/LocationDetail'
          description: Location detail of Drop-Off Location
          nullable: true
        PassengerCount:
          type: integer
          description: Passenger count as defined on reservation record. (not driven by additional passenger/stops directly)
          format: int32
        LuggageCount:
          type: integer
          format: int32
        PrimaryPassenger:
          allOf:
            - $ref: '#/components/schemas/PrimaryPassengerInfo'
          description: Manages information about the primary passenger.
        CollectionMethod:
          allOf:
            - $ref: '#/components/schemas/CollectionMethod'
          description: Selected Collection Type
        CollectionType:
          allOf:
            - $ref: '#/components/schemas/CollectionType'
        CreditCardId:
          type: integer
          description: Selected Credit Card (if applicable)
          format: int32
        IsVip:
          type: boolean
        IsSpecialHandling:
          type: boolean
        SegmentId:
          type: string
          description: Identifies this reservation as a segment of a larger reservation grouping
          nullable: true
        AlternateContractId:
          type: integer
          description: 'If set, the corresponding contract will be used instead of the standard company contract.'
          format: int32
        AttachmentIds:
          type: array
          items:
            type: integer
            format: int32
          description: List of associated attachments for the reservation
          nullable: true
        DoInvoiceCustomerDirectly:
          type: boolean
          description: 'If true, the corporate customer will direct-bill customer directly.'
      additionalProperties: false
      description: Incoming reservation booking inforamtion
    StopType:
      enum:
        - Unknown
        - Stop
        - Arrival
        - Departure
        - Pickup
        - Dropoff
        - Passenger
      type: string
      format: int32
    AdditionalStopInfo:
      type: object
      properties:
        AdditionalStopId:
          type: integer
          description: Unique Identifier
          format: int32
        ReservationId:
          type: integer
          format: int32
        Order:
          type: integer
          description: Display Order of stop within reservation (starting at 1)
          format: int32
        StopType:
          allOf:
            - $ref: '#/components/schemas/StopType'
        StopTime:
          type: string
          format: date-time
        Description:
          maxLength: 100
          minLength: 0
          type: string
          nullable: true
        Notes:
          maxLength: 150
          minLength: 0
          type: string
          nullable: true
        Address:
          allOf:
            - $ref: '#/components/schemas/AddressInfo'
          nullable: true
        PhoneNumber:
          maxLength: 25
          minLength: 0
          type: string
          nullable: true
        FlightNumber:
          maxLength: 10
          minLength: 0
          type: string
          nullable: true
        AirlineId:
          type: integer
          format: int32
        AirportId:
          type: integer
          format: int32
        Latitude:
          type: number
          format: double
        Longitude:
          type: number
          format: double
        CreateTime:
          type: string
          description: Internal create timestamp
          format: date-time
        ModifiedTime:
          type: string
          description: Internal modified timestamp
          format: date-time
      additionalProperties: false
      description: Manages informatin regarding Additional Passengers/Stops within a reservation
    CreditCardInfo:
      required:
        - CardHolderName
        - CreditCardType
        - ExpirationMonth
        - ExpirationYear
      type: object
      properties:
        CreditCardType:
          allOf:
            - $ref: '#/components/schemas/CreditCardType'
        CardHolderName:
          maxLength: 100
          minLength: 0
          type: string
        CardNumber:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        ExpirationMonth:
          type: integer
          format: int32
        ExpirationYear:
          type: integer
          format: int32
        Address:
          allOf:
            - $ref: '#/components/schemas/AddressInfo'
          nullable: true
      additionalProperties: false
      description: 'Manages general credit card info, not necessarily part of a persistent record'
    ReservationUpdateOverrides:
      type: object
      properties:
        DisableReservationRetrieveAfterUpdate:
          type: boolean
          description: Retrieves the updated res from the DB if needed
        DisableTotalChargeEstimateUpdates:
          type: boolean
          description: 'Inspects time estimates and updates total charges, estimaetd hours appropriately'
        DisableAffiliateUpdates:
          type: boolean
          description: 'If true (default = false), assigned affiliate will NOT be updated.'
        DisableCustomerNotifications:
          type: boolean
          description: 'If true (default = false), customer/passenger/corporate profiles will NOT be updated.'
        DisableSmsUpdateNotifications:
          type: boolean
          description: 'If true (default = false), drivers, passengers, etc. will NOT be updated.'
        DisablePricingUpdates:
          type: boolean
          description: 'If true (default = false), pricing will NOT be read and set from reservation details (allows update to reservation without neededing to calculate pricing).'
        DisableStopUpdates:
          type: boolean
          description: 'If true (default = false), stop information will NOT be updated from reservation detail.'
        DisableDayOfDispatchUpdates:
          type: boolean
          description: 'If true (default = false), dispatch will NOT be notified of update when day of dispatch.'
        DisableLeadTimeChecks:
          type: boolean
          description: 'If true, lead time checks will be disabled for the reservation'
      additionalProperties: false
    QuoteBookRequest:
      required:
        - QuoteId
        - QuotePackageId
        - ReservationBookingInfo
        - SystemId
      type: object
      properties:
        SystemId:
          type: string
          description: System identifier for target FASTTRAK operator
        QuotePackageId:
          type: string
          description: Parent Quote packag managing quote
        QuoteId:
          type: string
          description: Quote ID to book
        ReservationBookingInfo:
          allOf:
            - $ref: '#/components/schemas/ReservationBookingInfo'
          description: Detailed reservation information
        AdditionalPassengerStopList:
          type: array
          items:
            $ref: '#/components/schemas/AdditionalStopInfo'
          description: Additional stop detail
          nullable: true
        CreditCardInfo:
          allOf:
            - $ref: '#/components/schemas/CreditCardInfo'
          description: 'If using a credit card to book, it will be defined here.'
          nullable: true
        CustomerSummary:
          allOf:
            - $ref: '#/components/schemas/CustomerSummary'
          description: 'If booking under a new cusotmer profile, it will be defined here. Otherwise, customer is read from quote'
          nullable: true
        ReservationUpdateOverrides:
          allOf:
            - $ref: '#/components/schemas/ReservationUpdateOverrides'
          description: 'If necessary, update overrides can disable default business rule behaviors'
          nullable: true
      additionalProperties: false
      description: Defines overall booking request into a specific FASTTRAK Operators DB
    ReservationStatusType:
      enum:
        - None
        - Quotation
        - Trip_Confirmed
        - Driver_Confirmed
        - En_route
        - On_Location
        - Dropped
        - No_Show
        - Cancelled
        - On_Board
        - Booked
        - Driver_Scheduled
      type: string
      format: int32
    ReservationOrigin:
      enum:
        - None
        - FASTTRAK
        - Internet
        - Web_Service
        - Express
      type: string
      format: int32
    AffiliateSummary:
      type: object
      properties:
        AffiliateId:
          type: integer
          format: int32
        AffiliateTypeId:
          type: integer
          description: 'Type of Affiliate, consistent globally'
          format: int32
        Name:
          type: string
          description: Name of Farm In Affilaite Type
          nullable: true
        AffiliateReservationId:
          type: string
          description: 'If available, will represent the external providers reservationsID'
          nullable: true
        IsElectronicAffiliate:
          type: boolean
        EmailAddress:
          type: string
          description: 'If a farm out, will be the affiliates email address for reservations'
          nullable: true
      additionalProperties: false
    CompanySummary:
      required:
        - CompanyId
      type: object
      properties:
        CompanyId:
          type: integer
          format: int32
        CompanyName:
          type: string
          nullable: true
      additionalProperties: false
    ReservationGroupSummary:
      type: object
      properties:
        ReservationGroupId:
          type: integer
          format: int32
        Name:
          type: string
          nullable: true
      additionalProperties: false
    VehicleInfo:
      type: object
      properties:
        Id:
          type: integer
          format: int32
        AffiliateEquipmentId:
          type: integer
          format: int32
        InternalVehicleTypeId:
          type: integer
          format: int32
        InternalTypeName:
          type: string
          nullable: true
        ExternalVehicleTypeId:
          type: integer
          format: int32
        ExternalVehicleTypeImageId:
          type: integer
          format: int32
        Make:
          type: string
          nullable: true
        Model:
          type: string
          nullable: true
        Color:
          type: string
          nullable: true
        Name:
          type: string
          nullable: true
        Year:
          type: integer
          format: int32
        Capacity:
          type: integer
          format: int32
        VehiclePlate:
          type: string
          nullable: true
        CurrentMileage:
          type: integer
          format: int32
        PhoneNumber:
          type: string
          nullable: true
        VehicleTypeImageUrl:
          type: string
          nullable: true
        HasExpiredLicense:
          type: boolean
        ColorRed:
          type: integer
          format: int32
        ColorGreen:
          type: integer
          format: int32
        ColorBlue:
          type: integer
          format: int32
      additionalProperties: false
    ReservationDriverType:
      enum:
        - None
        - Employee
        - Affiliate
      type: string
      description: Maps to rows in DB table ReservationDriverType
      format: int32
    DriverInfo:
      type: object
      properties:
        EmployeeId:
          type: integer
          format: int32
        AffiliateId:
          type: integer
          format: int32
        AffiliateDriverId:
          type: integer
          format: int32
        FirstName:
          type: string
          nullable: true
        LastName:
          type: string
          nullable: true
        CellPhoneNumber:
          type: string
          nullable: true
        EmailAddress:
          type: string
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/EmployeeStatusType'
        ImageUrl:
          type: string
          nullable: true
        DriverType:
          allOf:
            - $ref: '#/components/schemas/ReservationDriverType'
      additionalProperties: false
    ReservationDetail:
      required:
        - CollectionMethod
        - CollectionType
        - CompanyId
        - CustomerId
        - EstimatedEndTime
        - GreeterId
        - InternalVehicleTypeId
        - LuggageCount
        - PassengerCount
        - PrimaryPassenger
        - ReservationId
        - ReservationOrigin
        - ReservationStatus
        - ScheduledPickupTime
        - TravelType
        - VehicleId
      type: object
      properties:
        TotalDeposits:
          type: number
          format: double
        CreditCardAuthorizationAmount:
          type: number
          format: double
        PricingInformation:
          allOf:
            - $ref: '#/components/schemas/ReservationPricingInfo'
          nullable: true
        AdditionalPassengerStopList:
          type: array
          items:
            $ref: '#/components/schemas/AdditionalStopInfo'
          nullable: true
        ReservationId:
          type: integer
          description: Intenal FASTTRAK Reservation ID
          format: int32
        VehicleId:
          maximum: 9999
          minimum: 0
          type: integer
          description: Intenal id of selected vehicle
          format: int32
        GreeterId:
          maximum: 9999
          minimum: 0
          type: integer
          format: int32
        ReservationStatus:
          allOf:
            - $ref: '#/components/schemas/ReservationStatusType'
        IsDatabaseTimezone:
          type: boolean
          description: True of timezone matches database timezone
        TimeZoneUTCOffsetMinutes:
          type: number
          description: Number of minutes the timezone is offset from UTC time
          format: double
        DriverInTime:
          type: string
          description: 'Specifies the time the driver should report to the office/garage, ready for trip'
          format: date-time
        DriverSpotTime:
          type: string
          description: 'Specifies the time the driver should be on location, ready to pick-up passenger'
          format: date-time
        EnRouteTime:
          type: string
          description: Specifies time when En Route status was set on trip
          format: date-time
        OnLocationTime:
          type: string
          description: Specifies time when On Location status was set on trip
          format: date-time
        ActualPickupTime:
          type: string
          description: Specifies time when On Board status was set on trip
          format: date-time
        DropoffTime:
          type: string
          description: Specifies time when Dropped status was set on trip
          format: date-time
        NoShowTime:
          type: string
          description: Specifies time when No Show status was set on trip
          format: date-time
        CancelTime:
          type: string
          description: Specifies time when Cancel status was set on trip
          format: date-time
        ReturnTime:
          type: string
          description: Specifies time when Driver set Return to Base on trip
          format: date-time
        CancelledBy:
          maxLength: 100
          minLength: 0
          type: string
          nullable: true
        ConfirmedBy:
          maxLength: 100
          minLength: 0
          type: string
          nullable: true
        CreateTime:
          type: string
          description: Internal create timestamp
          format: date-time
        ModifiedTime:
          type: string
          description: Internal modified timestamp
          format: date-time
        ActualHours:
          type: number
          description: Actual duration of trip
          format: double
        DriverNotes:
          maxLength: 4000
          minLength: 0
          type: string
          description: Driver entered notes for reservation
          nullable: true
        DriverDispatchStatus:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        DispatchNotes:
          maxLength: 250
          minLength: 0
          type: string
          nullable: true
        BeginMileage:
          type: integer
          format: int32
        EndMileage:
          type: integer
          format: int32
        NumAdditionalStops:
          type: integer
          description: Number of additional stops on record
          format: int32
        ReservationOrigin:
          allOf:
            - $ref: '#/components/schemas/ReservationOrigin'
          description: Origin of Reservation
        TotalCharges:
          type: number
          description: Total of reservation charges
          format: double
        AffiliatePay:
          type: number
          description: Total ffiliate pay for reservation
          format: double
        IsInBilling:
          type: boolean
        IsInvoiced:
          type: boolean
        IsFinalied:
          type: boolean
        IsChangedDayOfDispatch:
          type: boolean
          description: 'If true, the reservation has been modified day of dispatch'
        IsRecurring:
          type: boolean
        HasReservationNotes:
          type: boolean
          description: True if additional note records are available for reservation
        HasIncidents:
          type: boolean
          description: True if incident records are available for reservation
        IsFarmIn:
          type: boolean
          description: True if reservation is form a farm in affiliate
        IsFarmOut:
          type: boolean
          description: True if reservation was farmed out to an affiliate.
        FarmInAffiliateSummary:
          allOf:
            - $ref: '#/components/schemas/AffiliateSummary'
          nullable: true
        FarmOutAffiliateSummary:
          allOf:
            - $ref: '#/components/schemas/AffiliateSummary'
          nullable: true
        CompanySummary:
          allOf:
            - $ref: '#/components/schemas/CompanySummary'
          description: Provide a summary of Company related to reservation
          nullable: true
        CustomerSummary:
          allOf:
            - $ref: '#/components/schemas/CustomerSummary'
          description: Provide a summary of customer profile related to reservation
          nullable: true
        CorporateProfileSummary:
          allOf:
            - $ref: '#/components/schemas/CorporateProfileSummary'
          description: Provide a summary of corporate profile related to reservation
          nullable: true
        ReservationGroupSummary:
          allOf:
            - $ref: '#/components/schemas/ReservationGroupSummary'
          description: Provide a summary of the Reservation Group related to reservation
          nullable: true
        VehicleSummary:
          allOf:
            - $ref: '#/components/schemas/VehicleInfo'
          description: Information on selected vehicle for reservation (if specified)
          nullable: true
        VehicleTypeSummary:
          allOf:
            - $ref: '#/components/schemas/VehicleTypeSummary'
          description: Information on selected vehicle type definition
          nullable: true
        DriverSummary:
          allOf:
            - $ref: '#/components/schemas/DriverInfo'
          description: Information on selected Driver for reservation (if specified)
          nullable: true
        GreeterSummary:
          allOf:
            - $ref: '#/components/schemas/DriverInfo'
          description: Information on selected Greeter for reservation
          nullable: true
        CompanyId:
          type: integer
          description: Id of corresponding Company
          format: int32
        ReservationGroupId:
          type: integer
          description: Id of corresponding Reservation Group
          format: int32
        CustomerId:
          type: integer
          description: Id of corresponding Customer
          format: int32
        CorporateProfileId:
          type: integer
          description: Id of corresponding Corporate Profile
          format: int32
        PricingId:
          type: integer
          description: Pricing plan set to the reservation
          format: int32
        InternalVehicleTypeId:
          maximum: 9999
          minimum: 1
          type: integer
          description: Internal vehicle type ID on reservation
          format: int32
        TravelType:
          allOf:
            - $ref: '#/components/schemas/ReservationTravelType'
          description: 'Type of reservation travel (arrival, departures, etc.)'
        TimeZoneName:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        ReservationPhoneNumber:
          maxLength: 25
          minLength: 0
          type: string
          description: Primary reservation phone number
          nullable: true
        ReferencePO:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        CostCode:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        BookingSource:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        BookingCategory:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        TripCategory:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        TripType:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        OrderedBy:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        OrderedByPhone:
          maxLength: 25
          minLength: 0
          type: string
          nullable: true
        ScheduledPickupTime:
          type: string
          description: As scheduled in operators system
          format: date-time
        EstimatedEndTime:
          type: string
          description: As estimated in providers system
          format: date-time
        EstimatedHours:
          type: number
          description: Estimated duration of trip
          format: double
        TripNotes:
          maxLength: 4000
          minLength: 0
          type: string
          description: Trip Notes for reservation. May be defaulted from customer profile.
          nullable: true
        AffiliateNotes:
          maxLength: 4000
          minLength: 0
          type: string
          description: Affiliate notes for reservation. May be defaulted from customer profile
          nullable: true
        TripPreferences:
          maxLength: 4000
          minLength: 0
          type: string
          description: Trip preferences entered for reservation. May be defaulted from customer profile.
          nullable: true
        FromLocation:
          allOf:
            - $ref: '#/components/schemas/LocationDetail'
          description: Location detail of Pick-Up Location
          nullable: true
        ToLocation:
          allOf:
            - $ref: '#/components/schemas/LocationDetail'
          description: Location detail of Drop-Off Location
          nullable: true
        PassengerCount:
          type: integer
          description: Passenger count as defined on reservation record. (not driven by additional passenger/stops directly)
          format: int32
        LuggageCount:
          type: integer
          format: int32
        PrimaryPassenger:
          allOf:
            - $ref: '#/components/schemas/PrimaryPassengerInfo'
          description: Manages information about the primary passenger.
        CollectionMethod:
          allOf:
            - $ref: '#/components/schemas/CollectionMethod'
          description: Selected Collection Type
        CollectionType:
          allOf:
            - $ref: '#/components/schemas/CollectionType'
        CreditCardId:
          type: integer
          description: Selected Credit Card (if applicable)
          format: int32
        IsVip:
          type: boolean
        IsSpecialHandling:
          type: boolean
        SegmentId:
          type: string
          description: Identifies this reservation as a segment of a larger reservation grouping
          nullable: true
        AlternateContractId:
          type: integer
          description: 'If set, the corresponding contract will be used instead of the standard company contract.'
          format: int32
        AttachmentIds:
          type: array
          items:
            type: integer
            format: int32
          description: List of associated attachments for the reservation
          nullable: true
        DoInvoiceCustomerDirectly:
          type: boolean
          description: 'If true, the corporate customer will direct-bill customer directly.'
      additionalProperties: false
    MethodAttributes:
      enum:
        - ReuseSlot
        - PrivateScope
        - Private
        - FamANDAssem
        - Assembly
        - Family
        - FamORAssem
        - Public
        - MemberAccessMask
        - UnmanagedExport
        - Static
        - Final
        - Virtual
        - HideBySig
        - NewSlot
        - VtableLayoutMask
        - CheckAccessOnOverride
        - Abstract
        - SpecialName
        - RTSpecialName
        - PinvokeImpl
        - HasSecurity
        - RequireSecObject
        - ReservedMask
      type: string
      format: int32
    MethodImplAttributes:
      enum:
        - Managed
        - IL
        - Native
        - OPTIL
        - Runtime
        - CodeTypeMask
        - Unmanaged
        - ManagedMask
        - NoInlining
        - ForwardRef
        - Synchronized
        - NoOptimization
        - PreserveSig
        - AggressiveInlining
        - InternalCall
        - MaxMethodImplVal
      type: string
      format: int32
    CallingConventions:
      enum:
        - Standard
        - VarArgs
        - Any
        - HasThis
        - ExplicitThis
      type: string
      format: int32
    IntPtr:
      type: object
      additionalProperties: false
    RuntimeMethodHandle:
      type: object
      properties:
        Value:
          allOf:
            - $ref: '#/components/schemas/IntPtr'
          readOnly: true
      additionalProperties: false
    MemberTypes:
      enum:
        - Constructor
        - Event
        - Field
        - Method
        - Property
        - TypeInfo
        - Custom
        - NestedType
        - All
      type: string
      format: int32
    ModuleHandle:
      type: object
      properties:
        MDStreamVersion:
          type: integer
          format: int32
          readOnly: true
      additionalProperties: false
    CustomAttributeTypedArgument:
      type: object
      properties:
        ArgumentType:
          allOf:
            - $ref: '#/components/schemas/Type'
          nullable: true
          readOnly: true
        Value:
          type: object
          additionalProperties: false
          nullable: true
          readOnly: true
      additionalProperties: false
    MemberInfo:
      type: object
      properties:
        MemberType:
          allOf:
            - $ref: '#/components/schemas/MemberTypes'
          readOnly: true
        Name:
          type: string
          nullable: true
          readOnly: true
        DeclaringType:
          allOf:
            - $ref: '#/components/schemas/Type'
          nullable: true
          readOnly: true
        ReflectedType:
          allOf:
            - $ref: '#/components/schemas/Type'
          nullable: true
          readOnly: true
        Module:
          allOf:
            - $ref: '#/components/schemas/Module'
          nullable: true
          readOnly: true
        CustomAttributes:
          type: array
          items:
            $ref: '#/components/schemas/CustomAttributeData'
          nullable: true
          readOnly: true
        MetadataToken:
          type: integer
          format: int32
          readOnly: true
      additionalProperties: false
    CustomAttributeNamedArgument:
      type: object
      properties:
        MemberInfo:
          allOf:
            - $ref: '#/components/schemas/MemberInfo'
          nullable: true
          readOnly: true
        TypedValue:
          allOf:
            - $ref: '#/components/schemas/CustomAttributeTypedArgument'
          readOnly: true
        MemberName:
          type: string
          nullable: true
          readOnly: true
        IsField:
          type: boolean
          readOnly: true
      additionalProperties: false
    CustomAttributeData:
      type: object
      properties:
        AttributeType:
          allOf:
            - $ref: '#/components/schemas/Type'
          nullable: true
          readOnly: true
        Constructor:
          allOf:
            - $ref: '#/components/schemas/ConstructorInfo'
          nullable: true
          readOnly: true
        ConstructorArguments:
          type: array
          items:
            $ref: '#/components/schemas/CustomAttributeTypedArgument'
          nullable: true
          readOnly: true
        NamedArguments:
          type: array
          items:
            $ref: '#/components/schemas/CustomAttributeNamedArgument'
          nullable: true
          readOnly: true
      additionalProperties: false
    Module:
      type: object
      properties:
        Assembly:
          allOf:
            - $ref: '#/components/schemas/Assembly'
          nullable: true
          readOnly: true
        FullyQualifiedName:
          type: string
          nullable: true
          readOnly: true
        Name:
          type: string
          nullable: true
          readOnly: true
        MDStreamVersion:
          type: integer
          format: int32
          readOnly: true
        ModuleVersionId:
          type: string
          format: uuid
          readOnly: true
        ScopeName:
          type: string
          nullable: true
          readOnly: true
        ModuleHandle:
          allOf:
            - $ref: '#/components/schemas/ModuleHandle'
          readOnly: true
        CustomAttributes:
          type: array
          items:
            $ref: '#/components/schemas/CustomAttributeData'
          nullable: true
          readOnly: true
        MetadataToken:
          type: integer
          format: int32
          readOnly: true
      additionalProperties: false
    ConstructorInfo:
      type: object
      properties:
        MemberType:
          allOf:
            - $ref: '#/components/schemas/MemberTypes'
          readOnly: true
        Attributes:
          allOf:
            - $ref: '#/components/schemas/MethodAttributes'
          readOnly: true
        MethodImplementationFlags:
          allOf:
            - $ref: '#/components/schemas/MethodImplAttributes'
          readOnly: true
        CallingConvention:
          allOf:
            - $ref: '#/components/schemas/CallingConventions'
          readOnly: true
        IsAbstract:
          type: boolean
          readOnly: true
        IsConstructor:
          type: boolean
          readOnly: true
        IsFinal:
          type: boolean
          readOnly: true
        IsHideBySig:
          type: boolean
          readOnly: true
        IsSpecialName:
          type: boolean
          readOnly: true
        IsStatic:
          type: boolean
          readOnly: true
        IsVirtual:
          type: boolean
          readOnly: true
        IsAssembly:
          type: boolean
          readOnly: true
        IsFamily:
          type: boolean
          readOnly: true
        IsFamilyAndAssembly:
          type: boolean
          readOnly: true
        IsFamilyOrAssembly:
          type: boolean
          readOnly: true
        IsPrivate:
          type: boolean
          readOnly: true
        IsPublic:
          type: boolean
          readOnly: true
        IsConstructedGenericMethod:
          type: boolean
          readOnly: true
        IsGenericMethod:
          type: boolean
          readOnly: true
        IsGenericMethodDefinition:
          type: boolean
          readOnly: true
        ContainsGenericParameters:
          type: boolean
          readOnly: true
        MethodHandle:
          allOf:
            - $ref: '#/components/schemas/RuntimeMethodHandle'
          readOnly: true
        IsSecurityCritical:
          type: boolean
          readOnly: true
        IsSecuritySafeCritical:
          type: boolean
          readOnly: true
        IsSecurityTransparent:
          type: boolean
          readOnly: true
        Name:
          type: string
          nullable: true
          readOnly: true
        DeclaringType:
          allOf:
            - $ref: '#/components/schemas/Type'
          nullable: true
          readOnly: true
        ReflectedType:
          allOf:
            - $ref: '#/components/schemas/Type'
          nullable: true
          readOnly: true
        Module:
          allOf:
            - $ref: '#/components/schemas/Module'
          nullable: true
          readOnly: true
        CustomAttributes:
          type: array
          items:
            $ref: '#/components/schemas/CustomAttributeData'
          nullable: true
          readOnly: true
        MetadataToken:
          type: integer
          format: int32
          readOnly: true
      additionalProperties: false
    EventAttributes:
      enum:
        - None
        - SpecialName
        - RTSpecialName
        - ReservedMask
      type: string
      format: int32
    ParameterAttributes:
      enum:
        - None
        - In
        - Out
        - Lcid
        - Retval
        - Optional
        - HasDefault
        - HasFieldMarshal
        - Reserved3
        - Reserved4
        - ReservedMask
      type: string
      format: int32
    ParameterInfo:
      type: object
      properties:
        Attributes:
          allOf:
            - $ref: '#/components/schemas/ParameterAttributes'
          readOnly: true
        Member:
          allOf:
            - $ref: '#/components/schemas/MemberInfo'
          nullable: true
          readOnly: true
        Name:
          type: string
          nullable: true
          readOnly: true
        ParameterType:
          allOf:
            - $ref: '#/components/schemas/Type'
          nullable: true
          readOnly: true
        Position:
          type: integer
          format: int32
          readOnly: true
        IsIn:
          type: boolean
          readOnly: true
        IsLcid:
          type: boolean
          readOnly: true
        IsOptional:
          type: boolean
          readOnly: true
        IsOut:
          type: boolean
          readOnly: true
        IsRetval:
          type: boolean
          readOnly: true
        DefaultValue:
          type: object
          additionalProperties: false
          nullable: true
          readOnly: true
        RawDefaultValue:
          type: object
          additionalProperties: false
          nullable: true
          readOnly: true
        HasDefaultValue:
          type: boolean
          readOnly: true
        CustomAttributes:
          type: array
          items:
            $ref: '#/components/schemas/CustomAttributeData'
          nullable: true
          readOnly: true
        MetadataToken:
          type: integer
          format: int32
          readOnly: true
      additionalProperties: false
    ICustomAttributeProvider:
      type: object
      additionalProperties: false
    MethodInfo:
      type: object
      properties:
        MemberType:
          allOf:
            - $ref: '#/components/schemas/MemberTypes'
          readOnly: true
        ReturnParameter:
          allOf:
            - $ref: '#/components/schemas/ParameterInfo'
          nullable: true
          readOnly: true
        ReturnType:
          allOf:
            - $ref: '#/components/schemas/Type'
          nullable: true
          readOnly: true
        ReturnTypeCustomAttributes:
          allOf:
            - $ref: '#/components/schemas/ICustomAttributeProvider'
          nullable: true
          readOnly: true
        Attributes:
          allOf:
            - $ref: '#/components/schemas/MethodAttributes'
          readOnly: true
        MethodImplementationFlags:
          allOf:
            - $ref: '#/components/schemas/MethodImplAttributes'
          readOnly: true
        CallingConvention:
          allOf:
            - $ref: '#/components/schemas/CallingConventions'
          readOnly: true
        IsAbstract:
          type: boolean
          readOnly: true
        IsConstructor:
          type: boolean
          readOnly: true
        IsFinal:
          type: boolean
          readOnly: true
        IsHideBySig:
          type: boolean
          readOnly: true
        IsSpecialName:
          type: boolean
          readOnly: true
        IsStatic:
          type: boolean
          readOnly: true
        IsVirtual:
          type: boolean
          readOnly: true
        IsAssembly:
          type: boolean
          readOnly: true
        IsFamily:
          type: boolean
          readOnly: true
        IsFamilyAndAssembly:
          type: boolean
          readOnly: true
        IsFamilyOrAssembly:
          type: boolean
          readOnly: true
        IsPrivate:
          type: boolean
          readOnly: true
        IsPublic:
          type: boolean
          readOnly: true
        IsConstructedGenericMethod:
          type: boolean
          readOnly: true
        IsGenericMethod:
          type: boolean
          readOnly: true
        IsGenericMethodDefinition:
          type: boolean
          readOnly: true
        ContainsGenericParameters:
          type: boolean
          readOnly: true
        MethodHandle:
          allOf:
            - $ref: '#/components/schemas/RuntimeMethodHandle'
          readOnly: true
        IsSecurityCritical:
          type: boolean
          readOnly: true
        IsSecuritySafeCritical:
          type: boolean
          readOnly: true
        IsSecurityTransparent:
          type: boolean
          readOnly: true
        Name:
          type: string
          nullable: true
          readOnly: true
        DeclaringType:
          allOf:
            - $ref: '#/components/schemas/Type'
          nullable: true
          readOnly: true
        ReflectedType:
          allOf:
            - $ref: '#/components/schemas/Type'
          nullable: true
          readOnly: true
        Module:
          allOf:
            - $ref: '#/components/schemas/Module'
          nullable: true
          readOnly: true
        CustomAttributes:
          type: array
          items:
            $ref: '#/components/schemas/CustomAttributeData'
          nullable: true
          readOnly: true
        MetadataToken:
          type: integer
          format: int32
          readOnly: true
      additionalProperties: false
    EventInfo:
      type: object
      properties:
        MemberType:
          allOf:
            - $ref: '#/components/schemas/MemberTypes'
          readOnly: true
        Attributes:
          allOf:
            - $ref: '#/components/schemas/EventAttributes'
          readOnly: true
        IsSpecialName:
          type: boolean
          readOnly: true
        AddMethod:
          allOf:
            - $ref: '#/components/schemas/MethodInfo'
          nullable: true
          readOnly: true
        RemoveMethod:
          allOf:
            - $ref: '#/components/schemas/MethodInfo'
          nullable: true
          readOnly: true
        RaiseMethod:
          allOf:
            - $ref: '#/components/schemas/MethodInfo'
          nullable: true
          readOnly: true
        IsMulticast:
          type: boolean
          readOnly: true
        EventHandlerType:
          allOf:
            - $ref: '#/components/schemas/Type'
          nullable: true
          readOnly: true
        Name:
          type: string
          nullable: true
          readOnly: true
        DeclaringType:
          allOf:
            - $ref: '#/components/schemas/Type'
          nullable: true
          readOnly: true
        ReflectedType:
          allOf:
            - $ref: '#/components/schemas/Type'
          nullable: true
          readOnly: true
        Module:
          allOf:
            - $ref: '#/components/schemas/Module'
          nullable: true
          readOnly: true
        CustomAttributes:
          type: array
          items:
            $ref: '#/components/schemas/CustomAttributeData'
          nullable: true
          readOnly: true
        MetadataToken:
          type: integer
          format: int32
          readOnly: true
      additionalProperties: false
    FieldAttributes:
      enum:
        - PrivateScope
        - Private
        - FamANDAssem
        - Assembly
        - Family
        - FamORAssem
        - Public
        - FieldAccessMask
        - Static
        - InitOnly
        - Literal
        - NotSerialized
        - HasFieldRVA
        - SpecialName
        - RTSpecialName
        - HasFieldMarshal
        - PinvokeImpl
        - HasDefault
        - ReservedMask
      type: string
      format: int32
    RuntimeFieldHandle:
      type: object
      properties:
        Value:
          allOf:
            - $ref: '#/components/schemas/IntPtr'
          readOnly: true
      additionalProperties: false
    FieldInfo:
      type: object
      properties:
        MemberType:
          allOf:
            - $ref: '#/components/schemas/MemberTypes'
          readOnly: true
        Attributes:
          allOf:
            - $ref: '#/components/schemas/FieldAttributes'
          readOnly: true
        FieldType:
          allOf:
            - $ref: '#/components/schemas/Type'
          nullable: true
          readOnly: true
        IsInitOnly:
          type: boolean
          readOnly: true
        IsLiteral:
          type: boolean
          readOnly: true
        IsNotSerialized:
          type: boolean
          readOnly: true
        IsPinvokeImpl:
          type: boolean
          readOnly: true
        IsSpecialName:
          type: boolean
          readOnly: true
        IsStatic:
          type: boolean
          readOnly: true
        IsAssembly:
          type: boolean
          readOnly: true
        IsFamily:
          type: boolean
          readOnly: true
        IsFamilyAndAssembly:
          type: boolean
          readOnly: true
        IsFamilyOrAssembly:
          type: boolean
          readOnly: true
        IsPrivate:
          type: boolean
          readOnly: true
        IsPublic:
          type: boolean
          readOnly: true
        IsSecurityCritical:
          type: boolean
          readOnly: true
        IsSecuritySafeCritical:
          type: boolean
          readOnly: true
        IsSecurityTransparent:
          type: boolean
          readOnly: true
        FieldHandle:
          allOf:
            - $ref: '#/components/schemas/RuntimeFieldHandle'
          readOnly: true
        Name:
          type: string
          nullable: true
          readOnly: true
        DeclaringType:
          allOf:
            - $ref: '#/components/schemas/Type'
          nullable: true
          readOnly: true
        ReflectedType:
          allOf:
            - $ref: '#/components/schemas/Type'
          nullable: true
          readOnly: true
        Module:
          allOf:
            - $ref: '#/components/schemas/Module'
          nullable: true
          readOnly: true
        CustomAttributes:
          type: array
          items:
            $ref: '#/components/schemas/CustomAttributeData'
          nullable: true
          readOnly: true
        MetadataToken:
          type: integer
          format: int32
          readOnly: true
      additionalProperties: false
    PropertyAttributes:
      enum:
        - None
        - SpecialName
        - RTSpecialName
        - HasDefault
        - Reserved2
        - Reserved3
        - Reserved4
        - ReservedMask
      type: string
      format: int32
    PropertyInfo:
      type: object
      properties:
        MemberType:
          allOf:
            - $ref: '#/components/schemas/MemberTypes'
          readOnly: true
        PropertyType:
          allOf:
            - $ref: '#/components/schemas/Type'
          nullable: true
          readOnly: true
        Attributes:
          allOf:
            - $ref: '#/components/schemas/PropertyAttributes'
          readOnly: true
        IsSpecialName:
          type: boolean
          readOnly: true
        CanRead:
          type: boolean
          readOnly: true
        CanWrite:
          type: boolean
          readOnly: true
        GetMethod:
          allOf:
            - $ref: '#/components/schemas/MethodInfo'
          nullable: true
          readOnly: true
        SetMethod:
          allOf:
            - $ref: '#/components/schemas/MethodInfo'
          nullable: true
          readOnly: true
        Name:
          type: string
          nullable: true
          readOnly: true
        DeclaringType:
          allOf:
            - $ref: '#/components/schemas/Type'
          nullable: true
          readOnly: true
        ReflectedType:
          allOf:
            - $ref: '#/components/schemas/Type'
          nullable: true
          readOnly: true
        Module:
          allOf:
            - $ref: '#/components/schemas/Module'
          nullable: true
          readOnly: true
        CustomAttributes:
          type: array
          items:
            $ref: '#/components/schemas/CustomAttributeData'
          nullable: true
          readOnly: true
        MetadataToken:
          type: integer
          format: int32
          readOnly: true
      additionalProperties: false
    GenericParameterAttributes:
      enum:
        - None
        - Covariant
        - Contravariant
        - VarianceMask
        - ReferenceTypeConstraint
        - NotNullableValueTypeConstraint
        - DefaultConstructorConstraint
        - SpecialConstraintMask
      type: string
      format: int32
    TypeAttributes:
      enum:
        - NotPublic
        - AutoLayout
        - AnsiClass
        - Class
        - Public
        - NestedPublic
        - NestedPrivate
        - NestedFamily
        - NestedAssembly
        - NestedFamANDAssem
        - NestedFamORAssem
        - VisibilityMask
        - SequentialLayout
        - ExplicitLayout
        - LayoutMask
        - Interface
        - ClassSemanticsMask
        - Abstract
        - Sealed
        - SpecialName
        - RTSpecialName
        - Import
        - Serializable
        - WindowsRuntime
        - UnicodeClass
        - AutoClass
        - CustomFormatClass
        - StringFormatMask
        - HasSecurity
        - ReservedMask
        - BeforeFieldInit
        - CustomFormatMask
      type: string
      format: int32
    LayoutKind:
      enum:
        - Sequential
        - Explicit
        - Auto
      type: string
      format: int32
    StructLayoutAttribute:
      type: object
      properties:
        Value:
          allOf:
            - $ref: '#/components/schemas/LayoutKind'
          readOnly: true
        TypeId:
          type: object
          additionalProperties: false
          nullable: true
          readOnly: true
      additionalProperties: false
    RuntimeTypeHandle:
      type: object
      properties:
        Value:
          allOf:
            - $ref: '#/components/schemas/IntPtr'
          readOnly: true
      additionalProperties: false
    TypeInfo:
      type: object
      properties:
        GenericTypeParameters:
          type: array
          items:
            $ref: '#/components/schemas/Type'
          nullable: true
          readOnly: true
        DeclaredConstructors:
          type: array
          items:
            $ref: '#/components/schemas/ConstructorInfo'
          nullable: true
          readOnly: true
        DeclaredEvents:
          type: array
          items:
            $ref: '#/components/schemas/EventInfo'
          nullable: true
          readOnly: true
        DeclaredFields:
          type: array
          items:
            $ref: '#/components/schemas/FieldInfo'
          nullable: true
          readOnly: true
        DeclaredMembers:
          type: array
          items:
            $ref: '#/components/schemas/MemberInfo'
          nullable: true
          readOnly: true
        DeclaredMethods:
          type: array
          items:
            $ref: '#/components/schemas/MethodInfo'
          nullable: true
          readOnly: true
        DeclaredNestedTypes:
          type: array
          items:
            $ref: '#/components/schemas/TypeInfo'
          nullable: true
          readOnly: true
        DeclaredProperties:
          type: array
          items:
            $ref: '#/components/schemas/PropertyInfo'
          nullable: true
          readOnly: true
        ImplementedInterfaces:
          type: array
          items:
            $ref: '#/components/schemas/Type'
          nullable: true
          readOnly: true
        IsInterface:
          type: boolean
          readOnly: true
        MemberType:
          allOf:
            - $ref: '#/components/schemas/MemberTypes'
          readOnly: true
        Namespace:
          type: string
          nullable: true
          readOnly: true
        AssemblyQualifiedName:
          type: string
          nullable: true
          readOnly: true
        FullName:
          type: string
          nullable: true
          readOnly: true
        Assembly:
          allOf:
            - $ref: '#/components/schemas/Assembly'
          nullable: true
          readOnly: true
        Module:
          allOf:
            - $ref: '#/components/schemas/Module'
          nullable: true
          readOnly: true
        IsNested:
          type: boolean
          readOnly: true
        DeclaringType:
          allOf:
            - $ref: '#/components/schemas/Type'
          nullable: true
          readOnly: true
        DeclaringMethod:
          allOf:
            - $ref: '#/components/schemas/MethodBase'
          nullable: true
          readOnly: true
        ReflectedType:
          allOf:
            - $ref: '#/components/schemas/Type'
          nullable: true
          readOnly: true
        UnderlyingSystemType:
          allOf:
            - $ref: '#/components/schemas/Type'
          nullable: true
          readOnly: true
        IsTypeDefinition:
          type: boolean
          readOnly: true
        IsArray:
          type: boolean
          readOnly: true
        IsByRef:
          type: boolean
          readOnly: true
        IsPointer:
          type: boolean
          readOnly: true
        IsConstructedGenericType:
          type: boolean
          readOnly: true
        IsGenericParameter:
          type: boolean
          readOnly: true
        IsGenericTypeParameter:
          type: boolean
          readOnly: true
        IsGenericMethodParameter:
          type: boolean
          readOnly: true
        IsGenericType:
          type: boolean
          readOnly: true
        IsGenericTypeDefinition:
          type: boolean
          readOnly: true
        IsSZArray:
          type: boolean
          readOnly: true
        IsVariableBoundArray:
          type: boolean
          readOnly: true
        IsByRefLike:
          type: boolean
          readOnly: true
        HasElementType:
          type: boolean
          readOnly: true
        GenericTypeArguments:
          type: array
          items:
            $ref: '#/components/schemas/Type'
          nullable: true
          readOnly: true
        GenericParameterPosition:
          type: integer
          format: int32
          readOnly: true
        GenericParameterAttributes:
          allOf:
            - $ref: '#/components/schemas/GenericParameterAttributes'
          readOnly: true
        Attributes:
          allOf:
            - $ref: '#/components/schemas/TypeAttributes'
          readOnly: true
        IsAbstract:
          type: boolean
          readOnly: true
        IsImport:
          type: boolean
          readOnly: true
        IsSealed:
          type: boolean
          readOnly: true
        IsSpecialName:
          type: boolean
          readOnly: true
        IsClass:
          type: boolean
          readOnly: true
        IsNestedAssembly:
          type: boolean
          readOnly: true
        IsNestedFamANDAssem:
          type: boolean
          readOnly: true
        IsNestedFamily:
          type: boolean
          readOnly: true
        IsNestedFamORAssem:
          type: boolean
          readOnly: true
        IsNestedPrivate:
          type: boolean
          readOnly: true
        IsNestedPublic:
          type: boolean
          readOnly: true
        IsNotPublic:
          type: boolean
          readOnly: true
        IsPublic:
          type: boolean
          readOnly: true
        IsAutoLayout:
          type: boolean
          readOnly: true
        IsExplicitLayout:
          type: boolean
          readOnly: true
        IsLayoutSequential:
          type: boolean
          readOnly: true
        IsAnsiClass:
          type: boolean
          readOnly: true
        IsAutoClass:
          type: boolean
          readOnly: true
        IsUnicodeClass:
          type: boolean
          readOnly: true
        IsCOMObject:
          type: boolean
          readOnly: true
        IsContextful:
          type: boolean
          readOnly: true
        IsCollectible:
          type: boolean
          readOnly: true
        IsEnum:
          type: boolean
          readOnly: true
        IsMarshalByRef:
          type: boolean
          readOnly: true
        IsPrimitive:
          type: boolean
          readOnly: true
        IsValueType:
          type: boolean
          readOnly: true
        IsSignatureType:
          type: boolean
          readOnly: true
        IsSecurityCritical:
          type: boolean
          readOnly: true
        IsSecuritySafeCritical:
          type: boolean
          readOnly: true
        IsSecurityTransparent:
          type: boolean
          readOnly: true
        StructLayoutAttribute:
          allOf:
            - $ref: '#/components/schemas/StructLayoutAttribute'
          nullable: true
          readOnly: true
        TypeInitializer:
          allOf:
            - $ref: '#/components/schemas/ConstructorInfo'
          nullable: true
          readOnly: true
        TypeHandle:
          allOf:
            - $ref: '#/components/schemas/RuntimeTypeHandle'
          readOnly: true
        GUID:
          type: string
          format: uuid
          readOnly: true
        BaseType:
          allOf:
            - $ref: '#/components/schemas/Type'
          nullable: true
          readOnly: true
        IsSerializable:
          type: boolean
          readOnly: true
        ContainsGenericParameters:
          type: boolean
          readOnly: true
        IsVisible:
          type: boolean
          readOnly: true
        Name:
          type: string
          nullable: true
          readOnly: true
        CustomAttributes:
          type: array
          items:
            $ref: '#/components/schemas/CustomAttributeData'
          nullable: true
          readOnly: true
        MetadataToken:
          type: integer
          format: int32
          readOnly: true
      additionalProperties: false
    SecurityRuleSet:
      enum:
        - None
        - Level1
        - Level2
      type: string
      format: int32
    Assembly:
      type: object
      properties:
        DefinedTypes:
          type: array
          items:
            $ref: '#/components/schemas/TypeInfo'
          nullable: true
          readOnly: true
        ExportedTypes:
          type: array
          items:
            $ref: '#/components/schemas/Type'
          nullable: true
          readOnly: true
        CodeBase:
          type: string
          nullable: true
          readOnly: true
        EntryPoint:
          allOf:
            - $ref: '#/components/schemas/MethodInfo'
          nullable: true
          readOnly: true
        FullName:
          type: string
          nullable: true
          readOnly: true
        ImageRuntimeVersion:
          type: string
          nullable: true
          readOnly: true
        IsDynamic:
          type: boolean
          readOnly: true
        Location:
          type: string
          nullable: true
          readOnly: true
        ReflectionOnly:
          type: boolean
          readOnly: true
        IsFullyTrusted:
          type: boolean
          readOnly: true
        CustomAttributes:
          type: array
          items:
            $ref: '#/components/schemas/CustomAttributeData'
          nullable: true
          readOnly: true
        EscapedCodeBase:
          type: string
          nullable: true
          readOnly: true
        ManifestModule:
          allOf:
            - $ref: '#/components/schemas/Module'
          nullable: true
          readOnly: true
        Modules:
          type: array
          items:
            $ref: '#/components/schemas/Module'
          nullable: true
          readOnly: true
        GlobalAssemblyCache:
          type: boolean
          readOnly: true
        HostContext:
          type: integer
          format: int64
          readOnly: true
        SecurityRuleSet:
          allOf:
            - $ref: '#/components/schemas/SecurityRuleSet'
          readOnly: true
      additionalProperties: false
    Type:
      type: object
      properties:
        IsInterface:
          type: boolean
          readOnly: true
        MemberType:
          allOf:
            - $ref: '#/components/schemas/MemberTypes'
          readOnly: true
        Namespace:
          type: string
          nullable: true
          readOnly: true
        AssemblyQualifiedName:
          type: string
          nullable: true
          readOnly: true
        FullName:
          type: string
          nullable: true
          readOnly: true
        Assembly:
          allOf:
            - $ref: '#/components/schemas/Assembly'
          nullable: true
          readOnly: true
        Module:
          allOf:
            - $ref: '#/components/schemas/Module'
          nullable: true
          readOnly: true
        IsNested:
          type: boolean
          readOnly: true
        DeclaringType:
          allOf:
            - $ref: '#/components/schemas/Type'
          nullable: true
          readOnly: true
        DeclaringMethod:
          allOf:
            - $ref: '#/components/schemas/MethodBase'
          nullable: true
          readOnly: true
        ReflectedType:
          allOf:
            - $ref: '#/components/schemas/Type'
          nullable: true
          readOnly: true
        UnderlyingSystemType:
          allOf:
            - $ref: '#/components/schemas/Type'
          nullable: true
          readOnly: true
        IsTypeDefinition:
          type: boolean
          readOnly: true
        IsArray:
          type: boolean
          readOnly: true
        IsByRef:
          type: boolean
          readOnly: true
        IsPointer:
          type: boolean
          readOnly: true
        IsConstructedGenericType:
          type: boolean
          readOnly: true
        IsGenericParameter:
          type: boolean
          readOnly: true
        IsGenericTypeParameter:
          type: boolean
          readOnly: true
        IsGenericMethodParameter:
          type: boolean
          readOnly: true
        IsGenericType:
          type: boolean
          readOnly: true
        IsGenericTypeDefinition:
          type: boolean
          readOnly: true
        IsSZArray:
          type: boolean
          readOnly: true
        IsVariableBoundArray:
          type: boolean
          readOnly: true
        IsByRefLike:
          type: boolean
          readOnly: true
        HasElementType:
          type: boolean
          readOnly: true
        GenericTypeArguments:
          type: array
          items:
            $ref: '#/components/schemas/Type'
          nullable: true
          readOnly: true
        GenericParameterPosition:
          type: integer
          format: int32
          readOnly: true
        GenericParameterAttributes:
          allOf:
            - $ref: '#/components/schemas/GenericParameterAttributes'
          readOnly: true
        Attributes:
          allOf:
            - $ref: '#/components/schemas/TypeAttributes'
          readOnly: true
        IsAbstract:
          type: boolean
          readOnly: true
        IsImport:
          type: boolean
          readOnly: true
        IsSealed:
          type: boolean
          readOnly: true
        IsSpecialName:
          type: boolean
          readOnly: true
        IsClass:
          type: boolean
          readOnly: true
        IsNestedAssembly:
          type: boolean
          readOnly: true
        IsNestedFamANDAssem:
          type: boolean
          readOnly: true
        IsNestedFamily:
          type: boolean
          readOnly: true
        IsNestedFamORAssem:
          type: boolean
          readOnly: true
        IsNestedPrivate:
          type: boolean
          readOnly: true
        IsNestedPublic:
          type: boolean
          readOnly: true
        IsNotPublic:
          type: boolean
          readOnly: true
        IsPublic:
          type: boolean
          readOnly: true
        IsAutoLayout:
          type: boolean
          readOnly: true
        IsExplicitLayout:
          type: boolean
          readOnly: true
        IsLayoutSequential:
          type: boolean
          readOnly: true
        IsAnsiClass:
          type: boolean
          readOnly: true
        IsAutoClass:
          type: boolean
          readOnly: true
        IsUnicodeClass:
          type: boolean
          readOnly: true
        IsCOMObject:
          type: boolean
          readOnly: true
        IsContextful:
          type: boolean
          readOnly: true
        IsCollectible:
          type: boolean
          readOnly: true
        IsEnum:
          type: boolean
          readOnly: true
        IsMarshalByRef:
          type: boolean
          readOnly: true
        IsPrimitive:
          type: boolean
          readOnly: true
        IsValueType:
          type: boolean
          readOnly: true
        IsSignatureType:
          type: boolean
          readOnly: true
        IsSecurityCritical:
          type: boolean
          readOnly: true
        IsSecuritySafeCritical:
          type: boolean
          readOnly: true
        IsSecurityTransparent:
          type: boolean
          readOnly: true
        StructLayoutAttribute:
          allOf:
            - $ref: '#/components/schemas/StructLayoutAttribute'
          nullable: true
          readOnly: true
        TypeInitializer:
          allOf:
            - $ref: '#/components/schemas/ConstructorInfo'
          nullable: true
          readOnly: true
        TypeHandle:
          allOf:
            - $ref: '#/components/schemas/RuntimeTypeHandle'
          readOnly: true
        GUID:
          type: string
          format: uuid
          readOnly: true
        BaseType:
          allOf:
            - $ref: '#/components/schemas/Type'
          nullable: true
          readOnly: true
        IsSerializable:
          type: boolean
          readOnly: true
        ContainsGenericParameters:
          type: boolean
          readOnly: true
        IsVisible:
          type: boolean
          readOnly: true
        Name:
          type: string
          nullable: true
          readOnly: true
        CustomAttributes:
          type: array
          items:
            $ref: '#/components/schemas/CustomAttributeData'
          nullable: true
          readOnly: true
        MetadataToken:
          type: integer
          format: int32
          readOnly: true
      additionalProperties: false
    MethodBase:
      type: object
      properties:
        Attributes:
          allOf:
            - $ref: '#/components/schemas/MethodAttributes'
          readOnly: true
        MethodImplementationFlags:
          allOf:
            - $ref: '#/components/schemas/MethodImplAttributes'
          readOnly: true
        CallingConvention:
          allOf:
            - $ref: '#/components/schemas/CallingConventions'
          readOnly: true
        IsAbstract:
          type: boolean
          readOnly: true
        IsConstructor:
          type: boolean
          readOnly: true
        IsFinal:
          type: boolean
          readOnly: true
        IsHideBySig:
          type: boolean
          readOnly: true
        IsSpecialName:
          type: boolean
          readOnly: true
        IsStatic:
          type: boolean
          readOnly: true
        IsVirtual:
          type: boolean
          readOnly: true
        IsAssembly:
          type: boolean
          readOnly: true
        IsFamily:
          type: boolean
          readOnly: true
        IsFamilyAndAssembly:
          type: boolean
          readOnly: true
        IsFamilyOrAssembly:
          type: boolean
          readOnly: true
        IsPrivate:
          type: boolean
          readOnly: true
        IsPublic:
          type: boolean
          readOnly: true
        IsConstructedGenericMethod:
          type: boolean
          readOnly: true
        IsGenericMethod:
          type: boolean
          readOnly: true
        IsGenericMethodDefinition:
          type: boolean
          readOnly: true
        ContainsGenericParameters:
          type: boolean
          readOnly: true
        MethodHandle:
          allOf:
            - $ref: '#/components/schemas/RuntimeMethodHandle'
          readOnly: true
        IsSecurityCritical:
          type: boolean
          readOnly: true
        IsSecuritySafeCritical:
          type: boolean
          readOnly: true
        IsSecurityTransparent:
          type: boolean
          readOnly: true
        MemberType:
          allOf:
            - $ref: '#/components/schemas/MemberTypes'
          readOnly: true
        Name:
          type: string
          nullable: true
          readOnly: true
        DeclaringType:
          allOf:
            - $ref: '#/components/schemas/Type'
          nullable: true
          readOnly: true
        ReflectedType:
          allOf:
            - $ref: '#/components/schemas/Type'
          nullable: true
          readOnly: true
        Module:
          allOf:
            - $ref: '#/components/schemas/Module'
          nullable: true
          readOnly: true
        CustomAttributes:
          type: array
          items:
            $ref: '#/components/schemas/CustomAttributeData'
          nullable: true
          readOnly: true
        MetadataToken:
          type: integer
          format: int32
          readOnly: true
      additionalProperties: false
    Exception:
      type: object
      properties:
        Message:
          type: string
          nullable: true
          readOnly: true
        Data:
          type: object
          additionalProperties:
            type: object
            additionalProperties: false
          nullable: true
          readOnly: true
        InnerException:
          allOf:
            - $ref: '#/components/schemas/Exception'
          nullable: true
          readOnly: true
        TargetSite:
          allOf:
            - $ref: '#/components/schemas/MethodBase'
          nullable: true
          readOnly: true
        StackTrace:
          type: string
          nullable: true
          readOnly: true
        HelpLink:
          type: string
          nullable: true
        Source:
          type: string
          nullable: true
        HResult:
          type: integer
          format: int32
          readOnly: true
      additionalProperties: false
    ReservationUpdateOperationResult:
      type: object
      properties:
        ReservationID:
          type: integer
          format: int32
        ReservationDetail:
          allOf:
            - $ref: '#/components/schemas/ReservationDetail'
          nullable: true
        IsSuccess:
          type: boolean
        IncludesOperationalMessages:
          type: boolean
          readOnly: true
        OperationalMessageList:
          type: array
          items:
            type: string
          nullable: true
        CaughtException:
          allOf:
            - $ref: '#/components/schemas/Exception'
          nullable: true
      additionalProperties: false
    ReservationUpdateOperationResultApiItemResponse:
      type: object
      properties:
        Item:
          allOf:
            - $ref: '#/components/schemas/ReservationUpdateOperationResult'
          description: Response object
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defines An API response that includes a single model
    ReservationSearchRequest:
      type: object
      properties:
        StartDate:
          type: string
          description: Earliest ScheduledPickupDate to return in trip search
          format: date-time
          nullable: true
        EndDate:
          type: string
          description: Latest ScheduledPickupDate to return in trip search
          format: date-time
          nullable: true
        DoAssumeLocalTimeSearch:
          type: boolean
          description: "If true, the incoming dates will be assumed to be local to the operator database. Helpful when the underlying database timezone is not known.\r\n\r\nDefault true;"
        MaxResults:
          type: integer
          format: int32
      additionalProperties: false
      description: Manages details of a simple Trip Search Request
    ReservationInfo:
      required:
        - CollectionMethod
        - CollectionType
        - CompanyId
        - CustomerId
        - EstimatedEndTime
        - GreeterId
        - InternalVehicleTypeId
        - LuggageCount
        - PassengerCount
        - PrimaryPassenger
        - ReservationId
        - ReservationOrigin
        - ReservationStatus
        - ScheduledPickupTime
        - TravelType
        - VehicleId
      type: object
      properties:
        ReservationId:
          type: integer
          description: Intenal FASTTRAK Reservation ID
          format: int32
        VehicleId:
          maximum: 9999
          minimum: 0
          type: integer
          description: Intenal id of selected vehicle
          format: int32
        GreeterId:
          maximum: 9999
          minimum: 0
          type: integer
          format: int32
        ReservationStatus:
          allOf:
            - $ref: '#/components/schemas/ReservationStatusType'
        IsDatabaseTimezone:
          type: boolean
          description: True of timezone matches database timezone
        TimeZoneUTCOffsetMinutes:
          type: number
          description: Number of minutes the timezone is offset from UTC time
          format: double
        DriverInTime:
          type: string
          description: 'Specifies the time the driver should report to the office/garage, ready for trip'
          format: date-time
        DriverSpotTime:
          type: string
          description: 'Specifies the time the driver should be on location, ready to pick-up passenger'
          format: date-time
        EnRouteTime:
          type: string
          description: Specifies time when En Route status was set on trip
          format: date-time
        OnLocationTime:
          type: string
          description: Specifies time when On Location status was set on trip
          format: date-time
        ActualPickupTime:
          type: string
          description: Specifies time when On Board status was set on trip
          format: date-time
        DropoffTime:
          type: string
          description: Specifies time when Dropped status was set on trip
          format: date-time
        NoShowTime:
          type: string
          description: Specifies time when No Show status was set on trip
          format: date-time
        CancelTime:
          type: string
          description: Specifies time when Cancel status was set on trip
          format: date-time
        ReturnTime:
          type: string
          description: Specifies time when Driver set Return to Base on trip
          format: date-time
        CancelledBy:
          maxLength: 100
          minLength: 0
          type: string
          nullable: true
        ConfirmedBy:
          maxLength: 100
          minLength: 0
          type: string
          nullable: true
        CreateTime:
          type: string
          description: Internal create timestamp
          format: date-time
        ModifiedTime:
          type: string
          description: Internal modified timestamp
          format: date-time
        ActualHours:
          type: number
          description: Actual duration of trip
          format: double
        DriverNotes:
          maxLength: 4000
          minLength: 0
          type: string
          description: Driver entered notes for reservation
          nullable: true
        DriverDispatchStatus:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        DispatchNotes:
          maxLength: 250
          minLength: 0
          type: string
          nullable: true
        BeginMileage:
          type: integer
          format: int32
        EndMileage:
          type: integer
          format: int32
        NumAdditionalStops:
          type: integer
          description: Number of additional stops on record
          format: int32
        ReservationOrigin:
          allOf:
            - $ref: '#/components/schemas/ReservationOrigin'
          description: Origin of Reservation
        TotalCharges:
          type: number
          description: Total of reservation charges
          format: double
        AffiliatePay:
          type: number
          description: Total ffiliate pay for reservation
          format: double
        IsInBilling:
          type: boolean
        IsInvoiced:
          type: boolean
        IsFinalied:
          type: boolean
        IsChangedDayOfDispatch:
          type: boolean
          description: 'If true, the reservation has been modified day of dispatch'
        IsRecurring:
          type: boolean
        HasReservationNotes:
          type: boolean
          description: True if additional note records are available for reservation
        HasIncidents:
          type: boolean
          description: True if incident records are available for reservation
        IsFarmIn:
          type: boolean
          description: True if reservation is form a farm in affiliate
        IsFarmOut:
          type: boolean
          description: True if reservation was farmed out to an affiliate.
        FarmInAffiliateSummary:
          allOf:
            - $ref: '#/components/schemas/AffiliateSummary'
          nullable: true
        FarmOutAffiliateSummary:
          allOf:
            - $ref: '#/components/schemas/AffiliateSummary'
          nullable: true
        CompanySummary:
          allOf:
            - $ref: '#/components/schemas/CompanySummary'
          description: Provide a summary of Company related to reservation
          nullable: true
        CustomerSummary:
          allOf:
            - $ref: '#/components/schemas/CustomerSummary'
          description: Provide a summary of customer profile related to reservation
          nullable: true
        CorporateProfileSummary:
          allOf:
            - $ref: '#/components/schemas/CorporateProfileSummary'
          description: Provide a summary of corporate profile related to reservation
          nullable: true
        ReservationGroupSummary:
          allOf:
            - $ref: '#/components/schemas/ReservationGroupSummary'
          description: Provide a summary of the Reservation Group related to reservation
          nullable: true
        VehicleSummary:
          allOf:
            - $ref: '#/components/schemas/VehicleInfo'
          description: Information on selected vehicle for reservation (if specified)
          nullable: true
        VehicleTypeSummary:
          allOf:
            - $ref: '#/components/schemas/VehicleTypeSummary'
          description: Information on selected vehicle type definition
          nullable: true
        DriverSummary:
          allOf:
            - $ref: '#/components/schemas/DriverInfo'
          description: Information on selected Driver for reservation (if specified)
          nullable: true
        GreeterSummary:
          allOf:
            - $ref: '#/components/schemas/DriverInfo'
          description: Information on selected Greeter for reservation
          nullable: true
        CompanyId:
          type: integer
          description: Id of corresponding Company
          format: int32
        ReservationGroupId:
          type: integer
          description: Id of corresponding Reservation Group
          format: int32
        CustomerId:
          type: integer
          description: Id of corresponding Customer
          format: int32
        CorporateProfileId:
          type: integer
          description: Id of corresponding Corporate Profile
          format: int32
        PricingId:
          type: integer
          description: Pricing plan set to the reservation
          format: int32
        InternalVehicleTypeId:
          maximum: 9999
          minimum: 1
          type: integer
          description: Internal vehicle type ID on reservation
          format: int32
        TravelType:
          allOf:
            - $ref: '#/components/schemas/ReservationTravelType'
          description: 'Type of reservation travel (arrival, departures, etc.)'
        TimeZoneName:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        ReservationPhoneNumber:
          maxLength: 25
          minLength: 0
          type: string
          description: Primary reservation phone number
          nullable: true
        ReferencePO:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        CostCode:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        BookingSource:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        BookingCategory:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        TripCategory:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        TripType:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        OrderedBy:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        OrderedByPhone:
          maxLength: 25
          minLength: 0
          type: string
          nullable: true
        ScheduledPickupTime:
          type: string
          description: As scheduled in operators system
          format: date-time
        EstimatedEndTime:
          type: string
          description: As estimated in providers system
          format: date-time
        EstimatedHours:
          type: number
          description: Estimated duration of trip
          format: double
        TripNotes:
          maxLength: 4000
          minLength: 0
          type: string
          description: Trip Notes for reservation. May be defaulted from customer profile.
          nullable: true
        AffiliateNotes:
          maxLength: 4000
          minLength: 0
          type: string
          description: Affiliate notes for reservation. May be defaulted from customer profile
          nullable: true
        TripPreferences:
          maxLength: 4000
          minLength: 0
          type: string
          description: Trip preferences entered for reservation. May be defaulted from customer profile.
          nullable: true
        FromLocation:
          allOf:
            - $ref: '#/components/schemas/LocationDetail'
          description: Location detail of Pick-Up Location
          nullable: true
        ToLocation:
          allOf:
            - $ref: '#/components/schemas/LocationDetail'
          description: Location detail of Drop-Off Location
          nullable: true
        PassengerCount:
          type: integer
          description: Passenger count as defined on reservation record. (not driven by additional passenger/stops directly)
          format: int32
        LuggageCount:
          type: integer
          format: int32
        PrimaryPassenger:
          allOf:
            - $ref: '#/components/schemas/PrimaryPassengerInfo'
          description: Manages information about the primary passenger.
        CollectionMethod:
          allOf:
            - $ref: '#/components/schemas/CollectionMethod'
          description: Selected Collection Type
        CollectionType:
          allOf:
            - $ref: '#/components/schemas/CollectionType'
        CreditCardId:
          type: integer
          description: Selected Credit Card (if applicable)
          format: int32
        IsVip:
          type: boolean
        IsSpecialHandling:
          type: boolean
        SegmentId:
          type: string
          description: Identifies this reservation as a segment of a larger reservation grouping
          nullable: true
        AlternateContractId:
          type: integer
          description: 'If set, the corresponding contract will be used instead of the standard company contract.'
          format: int32
        AttachmentIds:
          type: array
          items:
            type: integer
            format: int32
          description: List of associated attachments for the reservation
          nullable: true
        DoInvoiceCustomerDirectly:
          type: boolean
          description: 'If true, the corporate customer will direct-bill customer directly.'
      additionalProperties: false
      description: Outgoing reservation information
    ReservationInfoIEnumerableApiItemResponse:
      type: object
      properties:
        Item:
          type: array
          items:
            $ref: '#/components/schemas/ReservationInfo'
          description: Response object
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defines An API response that includes a single model
    ReservationAdvancedSearchRequest:
      type: object
      properties:
        ReservationId:
          type: integer
          description: Internal ID match (exact)
          format: int32
        SegmentId:
          type: string
          description: Segment ID match (exact)
          nullable: true
        CustomerId:
          type: integer
          description: Allows search on customer ID
          format: int32
        CustomerName:
          maxLength: 100
          minLength: 0
          type: string
          description: Allows search on customer first adn last name
          nullable: true
        PassengerName:
          maxLength: 155
          minLength: 0
          type: string
          description: "Name of primary passenger. \r\n(contains)"
          nullable: true
        PassengerPhone:
          maxLength: 25
          minLength: 0
          type: string
          description: Search Passenger Phone (contains)
          nullable: true
        PassengerEmailAddress:
          maxLength: 125
          minLength: 0
          type: string
          description: Email address of Primary Passenger (contains)
          nullable: true
        CorporateProfileId:
          type: integer
          description: 'If set, will limit results by Corporate Profile'
          format: int32
        OrderedBy:
          maxLength: 50
          minLength: 0
          type: string
          description: Searched by reservation ordered by (contains)
          nullable: true
        CreditCardLastDigits:
          maxLength: 4
          minLength: 0
          type: string
          description: Searched by last 4 of credit card (contains)
          nullable: true
        ReferencePO:
          maxLength: 50
          minLength: 0
          type: string
          description: Searched by ReferencePO (contains)
          nullable: true
        CostCode:
          maxLength: 50
          minLength: 0
          type: string
          description: Searches by CostCode (contains)
          nullable: true
        GroupName:
          maxLength: 100
          minLength: 0
          type: string
          description: Searches by Group Name (contains)
          nullable: true
        BookedByUserId:
          type: integer
          description: Searches by FTUser ID that created reservation (contains)
          format: int32
        ReservationOrigin:
          allOf:
            - $ref: '#/components/schemas/ReservationOrigin'
          description: Searches by BookedOrigin
        DoSearchAdditionalStops:
          type: boolean
          description: 'If true, all additional stops will be searched when searchign passenger name'
        DoSearchByCreateDate:
          type: boolean
          description: 'If true, create date will be used, otherwise scheduled pickup date (default)'
        DoSearchExcludedFromBilling:
          type: boolean
          description: 'If true, will also search reservations excluded from billing (default)'
        DoSearchAffiliateFarmOut:
          type: boolean
          description: 'If true, will also search eAffiliate Farm-Outs'
        DoSearchAffiliateFarmIn:
          type: boolean
          description: 'If true, will also search eAffiliate Farm-Ins'
        StartDate:
          type: string
          description: Earliest ScheduledPickupDate to return in trip search
          format: date-time
          nullable: true
        EndDate:
          type: string
          description: Latest ScheduledPickupDate to return in trip search
          format: date-time
          nullable: true
        DoAssumeLocalTimeSearch:
          type: boolean
          description: "If true, the incoming dates will be assumed to be local to the operator database. Helpful when the underlying database timezone is not known.\r\n\r\nDefault true;"
        MaxResults:
          type: integer
          format: int32
      additionalProperties: false
      description: Manages model for advanced search requests.
    ReservationDefaultsRequest:
      type: object
      properties:
        CustomerId:
          type: integer
          format: int32
        TravelType:
          allOf:
            - $ref: '#/components/schemas/ReservationTravelType'
        ScheduledPickupTime:
          type: string
          format: date-time
        SegmentId:
          type: string
          nullable: true
      additionalProperties: false
    ReservationDetailApiItemResponse:
      type: object
      properties:
        Item:
          allOf:
            - $ref: '#/components/schemas/ReservationDetail'
          description: Response object
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defines An API response that includes a single model
    ReservationFieldEditRequest:
      required:
        - FieldsToUpdate
        - ReservationIds
      type: object
      properties:
        ReservationIds:
          type: array
          items:
            type: integer
            format: int32
          description: Id list of reservations to update
        FieldsToUpdate:
          type: object
          additionalProperties:
            type: string
          description: 'Field list of fields ot update {ExternalFieldKey, Value}'
      additionalProperties: false
    ReservationUpdateResult:
      type: object
      properties:
        ReservationId:
          type: integer
          format: int32
        ResultMessage:
          type: string
          nullable: true
        IsSuccess:
          type: boolean
        DocumentSendDefaults:
          allOf:
            - $ref: '#/components/schemas/DocumentSendRequestDetail'
          nullable: true
      additionalProperties: false
    ReservationUpdateResultApiItemListResponse:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/ReservationUpdateResult'
          description: List of items to be returned in response
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defined an Api response that includes a list of models
    ReservationAddWithNewCustomerRequest:
      required:
        - ReservationDetail
      type: object
      properties:
        ReservationDetail:
          allOf:
            - $ref: '#/components/schemas/ReservationDetail'
          description: Details of new reservation
        CustomerSummary:
          allOf:
            - $ref: '#/components/schemas/CustomerSummary'
          description: Details of new Customer
          nullable: true
        CreditCardInfo:
          allOf:
            - $ref: '#/components/schemas/CreditCardInfo'
          description: 'If necessary, new customers and reservations can be created with a given credit card detail'
          nullable: true
        ReservationUpdateOverrides:
          allOf:
            - $ref: '#/components/schemas/ReservationUpdateOverrides'
          description: 'If necessary, update overrides can disable default business rule behaviors'
          nullable: true
      additionalProperties: false
      description: Allows creation of new reservation with new customer and credit card detail
    ReservationUpdateRequest:
      required:
        - ReservationDetail
      type: object
      properties:
        ReservationDetail:
          allOf:
            - $ref: '#/components/schemas/ReservationDetail'
          description: Reservation detail with full update details
        UpdateNote:
          maxLength: 3000
          minLength: 0
          type: string
          description: 'If necessary, set a new reservation note for the update'
          nullable: true
        ReservationUpdateOverrides:
          allOf:
            - $ref: '#/components/schemas/ReservationUpdateOverrides'
          description: 'If necessary, update overrides can disable default business rule behaviors'
          nullable: true
      additionalProperties: false
      description: 'Manages updates to a specific reservation, allowing overrides to normal business rule processing.'
    ReservationSegmentInfo:
      type: object
      properties:
        ReservationId:
          type: integer
          description: Reservation ID for segment
          format: int32
        SegmentId:
          type: string
          description: Uniquue identifier of segment group
          nullable: true
      additionalProperties: false
    ReservationSegmentInfoApiItemResponse:
      type: object
      properties:
        Item:
          allOf:
            - $ref: '#/components/schemas/ReservationSegmentInfo'
          description: Response object
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defines An API response that includes a single model
    CustomerDetailIEnumerableApiItemResponse:
      type: object
      properties:
        Item:
          type: array
          items:
            $ref: '#/components/schemas/CustomerDetail'
          description: Response object
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defines An API response that includes a single model
    DriverAssignmentInfo:
      type: object
      properties:
        IsElectronicAffiliate:
          type: boolean
        HasExpiredLicense:
          type: boolean
        FullName:
          type: string
          nullable: true
        CurrentPayPeriodHours:
          type: number
          format: double
        IsAssignedWithinTimeframe:
          type: boolean
        AffiliateTypeId:
          type: integer
          format: int32
        TypeDescription:
          type: string
          nullable: true
        DriverType:
          allOf:
            - $ref: '#/components/schemas/ReservationDriverType'
        EmployeeId:
          type: integer
          format: int32
        AffiliateId:
          type: integer
          format: int32
        AffiliateDriverId:
          type: integer
          format: int32
        FirstName:
          type: string
          nullable: true
        LastName:
          type: string
          nullable: true
        CellPhoneNumber:
          type: string
          nullable: true
        EmailAddress:
          type: string
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/EmployeeStatusType'
        ImageUrl:
          type: string
          nullable: true
      additionalProperties: false
    AvailableDriversResponse:
      type: object
      properties:
        ReservationIdList:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        DriverAssignmentList:
          type: array
          items:
            $ref: '#/components/schemas/DriverAssignmentInfo'
          nullable: true
      additionalProperties: false
      description: Provides information on current reservation state and driver assignment options
    AvailableDriversResponseIEnumerableApiItemResponse:
      type: object
      properties:
        Item:
          type: array
          items:
            $ref: '#/components/schemas/AvailableDriversResponse'
          description: Response object
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defines An API response that includes a single model
    AvailableDriversRequest:
      type: object
      properties:
        ReservationIdList:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
      additionalProperties: false
    SendConfirmationRequest:
      type: object
      properties:
        RecipientList:
          type: array
          items:
            type: string
          description: 'If manual entries have been set, add them here'
          nullable: true
        AttachmentIdList:
          type: array
          items:
            type: integer
            format: int32
          description: Selected attachments
          nullable: true
        DoSendToCustomer:
          type: boolean
          description: 'If true, confirmation will be sent to customer'
        DoSendToCustomerContacts:
          type: boolean
          description: 'If true, confirmation will be sent to customer contacts'
        DoSendToAffiliate:
          type: boolean
          description: 'If true, confirmation will be sent to affiliate'
        Message:
          type: string
          nullable: true
      additionalProperties: false
    AssignDriverRequest:
      required:
        - ReservationId
      type: object
      properties:
        ReservationId:
          maximum: 2147483647
          minimum: 1
          type: integer
          description: Reservation ID to assign
          format: int32
        EmployeeId:
          maximum: 2147483647
          minimum: 0
          type: integer
          description: 'If an intenal employee, id of employee to assign'
          format: int32
        AffiliateId:
          maximum: 2147483647
          minimum: 0
          type: integer
          description: 'If an external affiliate, the ID of the Affiliate'
          format: int32
        AffiliateDriverId:
          maximum: 2147483647
          minimum: 0
          type: integer
          description: 'If an external affiliate and a more precise affiliate driver is set, the ID of the Affiliate Driver'
          format: int32
        DoSetGarageSpotTime:
          type: boolean
          description: 'If true, Garage Time and Spot Time are requried, and will be set into reservation.'
        GarageTime:
          type: string
          format: date-time
        SpotTime:
          type: string
          format: date-time
        DoSetDriverScheduledStatus:
          type: boolean
          description: 'If true, status will be set to driver scheduled after assignment (current status otherwise)'
        ConfirmationRequest:
          allOf:
            - $ref: '#/components/schemas/SendConfirmationRequest'
          description: Manages information for confirmation send
          nullable: true
        DoForceAffiliateOperation:
          type: boolean
          description: 'If true, the affiliate will be assigned internally only. Used to bypass the external assignment in case of error.'
      additionalProperties: false
      description: Manages information to assign a driver to a single reservation
    AssignDriverOperationDetail:
      type: object
      properties:
        PreviousEmployeeId:
          type: integer
          format: int32
        PreviousAffiliateId:
          type: integer
          format: int32
        PreviousAffiliateDriverId:
          type: integer
          format: int32
        PreviousReservationStatusId:
          type: integer
          format: int32
        IsTargetStatusAssignedOrHigher:
          type: boolean
        InternalUnassignSuccessful:
          type: boolean
          nullable: true
        ExternalUnassignSuccessful:
          type: boolean
          nullable: true
        InternalAssignSuccessful:
          type: boolean
          nullable: true
        ExternalAssignSuccessful:
          type: boolean
          nullable: true
        IsInternalUnassign:
          type: boolean
        IsExternalUnassign:
          type: boolean
        IsInternalAssign:
          type: boolean
        IsExternalAssign:
          type: boolean
        IsExternalDriverChange:
          type: boolean
      additionalProperties: false
    AssignDriverResponse:
      type: object
      properties:
        IsSuccess:
          type: boolean
        Message:
          type: string
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          readOnly: true
        OperationDetail:
          allOf:
            - $ref: '#/components/schemas/AssignDriverOperationDetail'
          nullable: true
      additionalProperties: false
      description: Manages information on assignment of an internal or external emplopyee
    AssignDriverResponseApiItemResponse:
      type: object
      properties:
        Item:
          allOf:
            - $ref: '#/components/schemas/AssignDriverResponse'
          description: Response object
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defines An API response that includes a single model
    GarageTimeEstimateRequest:
      type: object
      properties:
        ReservationId:
          type: integer
          format: int32
        CompanyId:
          type: integer
          format: int32
        TimeZone:
          type: string
          nullable: true
        ScheduledPickupDate:
          type: string
          format: date-time
        PickupAddress:
          allOf:
            - $ref: '#/components/schemas/AddressInfo'
          nullable: true
      additionalProperties: false
      description: Provides request model to retrieve GEO Garage Time Request
    GarageTimeEstimateResponse:
      type: object
      properties:
        DriverInTime:
          type: string
          format: date-time
        DriverSpotTime:
          type: string
          format: date-time
        GarageToSpotEstimatedMinutes:
          type: integer
          format: int32
        EstimateSummary:
          type: string
          nullable: true
      additionalProperties: false
    GarageTimeEstimateResponseIEnumerableApiItemResponse:
      type: object
      properties:
        Item:
          type: array
          items:
            $ref: '#/components/schemas/GarageTimeEstimateResponse'
          description: Response object
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defines An API response that includes a single model
    AssignStatusRequest:
      required:
        - ReservationId
        - ReservationStatus
      type: object
      properties:
        ReservationId:
          maximum: 2147483647
          minimum: 1
          type: integer
          description: Reservation ID to assign
          format: int32
        ReservationStatus:
          allOf:
            - $ref: '#/components/schemas/ReservationStatusType'
          description: Status to assign
        ConfirmByInformation:
          type: string
          description: 'If confirmed or cancelled, will hold the user-entered message of who confirmed.'
          nullable: true
        ConfirmationRequest:
          allOf:
            - $ref: '#/components/schemas/SendConfirmationRequest'
          description: Manages information for confirmation send
          nullable: true
        DoForceAffiliateOperation:
          type: boolean
          description: 'If true, the affiliate will be assigned internally only. Used to bypass the external assignment in case of error.'
      additionalProperties: false
    AssignStatusOperationDetail:
      type: object
      properties:
        PreviousReservationStatusId:
          type: integer
          format: int32
        TargetReservationStatusId:
          type: integer
          format: int32
        IsTargetStatusAssignedOrHigher:
          type: boolean
        IsExternalAffiliateUpdate:
          type: boolean
        ExternalCancellationSuccessful:
          type: boolean
          nullable: true
      additionalProperties: false
    AssignStatusResponse:
      type: object
      properties:
        IsSuccess:
          type: boolean
        Message:
          type: string
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          readOnly: true
        OperationDetail:
          allOf:
            - $ref: '#/components/schemas/AssignStatusOperationDetail'
          nullable: true
      additionalProperties: false
    AssignStatusResponseApiItemResponse:
      type: object
      properties:
        Item:
          allOf:
            - $ref: '#/components/schemas/AssignStatusResponse'
          description: Response object
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defines An API response that includes a single model
    AssignVehicleRequest:
      required:
        - ReservationId
        - VehicleId
      type: object
      properties:
        ReservationId:
          maximum: 2147483647
          minimum: 1
          type: integer
          description: Reservation ID to assign
          format: int32
        VehicleId:
          maximum: 2147483647
          minimum: 0
          type: integer
          description: Reservation ID to assign
          format: int32
      additionalProperties: false
    AssignVehicleResponse:
      type: object
      properties:
        IsSuccess:
          type: boolean
        Message:
          type: string
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          readOnly: true
      additionalProperties: false
    AssignVehicleResponseApiItemResponse:
      type: object
      properties:
        Item:
          allOf:
            - $ref: '#/components/schemas/AssignVehicleResponse'
          description: Response object
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defines An API response that includes a single model
    AdditionalStopInfoApiItemListResponse:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/AdditionalStopInfo'
          description: List of items to be returned in response
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defined an Api response that includes a list of models
    AdditionalStopInfoApiItemResponse:
      type: object
      properties:
        Item:
          allOf:
            - $ref: '#/components/schemas/AdditionalStopInfo'
          description: Response object
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defines An API response that includes a single model
    ReservationNoteInfo:
      required:
        - ReservationId
      type: object
      properties:
        ReservationNoteId:
          type: integer
          format: int32
        ReservationId:
          maximum: 2147483647
          minimum: 1
          type: integer
          format: int32
        Note:
          maxLength: 3000
          minLength: 0
          type: string
          nullable: true
        OtherInformation:
          maxLength: 50
          minLength: 0
          type: string
          nullable: true
        CreateTime:
          type: string
          description: 'Internal, readonly Created Time'
          format: date-time
        ModifiedTime:
          type: string
          description: 'Internal, readonly Last Modify Time'
          format: date-time
        ModifiedUsername:
          type: string
          description: '/// Internal, readonly Last Modify Time'
          nullable: true
      additionalProperties: false
    ReservationNoteInfoApiItemListResponse:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/ReservationNoteInfo'
          description: List of items to be returned in response
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defined an Api response that includes a list of models
    ReservationNoteInfoApiItemResponse:
      type: object
      properties:
        Item:
          allOf:
            - $ref: '#/components/schemas/ReservationNoteInfo'
          description: Response object
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defines An API response that includes a single model
    CreditCardAuthorizationInfo:
      required:
        - Amount
        - CardSecurityCode
        - CompanyId
        - CreditCardId
        - ReservationId
      type: object
      properties:
        CreditCardAuthorizationId:
          type: integer
          description: Unique Identifier
          format: int32
        CreditCardId:
          maximum: 2147483647
          minimum: 1
          type: integer
          format: int32
        ReservationId:
          maximum: 2147483647
          minimum: 1
          type: integer
          format: int32
        CompanyId:
          maximum: 2147483647
          minimum: 1
          type: integer
          description: Company ID associated with CC transaction
          format: int32
        CreditCardReferenceCode:
          maxLength: 4
          minLength: 0
          type: string
          description: Reference code from provider
          nullable: true
        CreditCardAuthorizationCode:
          maxLength: 50
          minLength: 0
          type: string
          description: Authorization code from provider
          nullable: true
        CardSecurityCode:
          type: integer
          description: Manages Card Security Code value for authorizations
          format: int32
        Amount:
          maximum: 2147483647
          minimum: 0
          type: number
          format: double
        CreditCardProcessingProviderId:
          type: integer
          description: Internal ID of Credit Card processor
          format: int32
        CreateTime:
          type: string
          description: Internal create timestamp (read-only)
          format: date-time
        AuthorizedByUsername:
          type: string
          description: 'Internally managed field, defined user who took the authorization'
          nullable: true
      additionalProperties: false
      description: Manages Credit Card Pre-Authorization Information
    ReservationDepositDetail:
      type: object
      properties:
        ReservationId:
          type: integer
          format: int32
        DepositList:
          type: array
          items:
            $ref: '#/components/schemas/DepositDetail'
          nullable: true
        PreAuthorizationInfo:
          allOf:
            - $ref: '#/components/schemas/CreditCardAuthorizationInfo'
          nullable: true
      additionalProperties: false
    ReservationDepositDetailApiItemResponse:
      type: object
      properties:
        Item:
          allOf:
            - $ref: '#/components/schemas/ReservationDepositDetail'
          description: Response object
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defines An API response that includes a single model
    CreditCardAuthorizationInfoApiItemResponse:
      type: object
      properties:
        Item:
          allOf:
            - $ref: '#/components/schemas/CreditCardAuthorizationInfo'
          description: Response object
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defines An API response that includes a single model
    ChangeLogInfo:
      type: object
      properties:
        ChangeLogId:
          type: integer
          description: Uniqueu identifier of log entry
          format: int32
        ReferenceId:
          type: integer
          description: 'ID of reference object that was changed (reservation ID, etc.)'
          format: int32
        TableName:
          type: string
          description: Name of table updated
          nullable: true
        FieldName:
          type: string
          description: Name of field updated
          nullable: true
        OldValue:
          type: string
          description: Original Value before update
          nullable: true
        NewValue:
          type: string
          description: New value after update
          nullable: true
        CreateTime:
          type: string
          format: date-time
        ModifyUserId:
          type: integer
          format: int32
        ModifyUserName:
          type: string
          nullable: true
      additionalProperties: false
    ChangeLogSummary:
      type: object
      properties:
        ChangeLogReferenceId:
          type: integer
          format: int32
        IsChangedDayOfDispatch:
          type: boolean
        ChangeLogList:
          type: array
          items:
            $ref: '#/components/schemas/ChangeLogInfo'
          nullable: true
      additionalProperties: false
    ChangeLogSummaryApiItemResponse:
      type: object
      properties:
        Item:
          allOf:
            - $ref: '#/components/schemas/ChangeLogSummary'
          description: Response object
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defines An API response that includes a single model
    CommissionAmountType:
      enum:
        - Unknown
        - Percent
        - FixedDollarAmount
      type: string
      format: int32
    CommissionApplyType:
      enum:
        - Unknown
        - BaseOnly
        - BaseAndAdditional1
        - BaseAndAdditional1And2
        - TotalCharges
      type: string
      format: int32
    ReservationAgentPayInfo:
      type: object
      properties:
        ReservationAgentPayId:
          type: integer
          description: Unique Identifier
          format: int32
        ReservationId:
          type: integer
          description: Related Reservation ID
          format: int32
        CommissionAgentId:
          type: integer
          description: Related Commission Agent ID
          format: int32
        Description:
          type: string
          nullable: true
        Rate:
          type: number
          format: double
        CommissionAmountType:
          allOf:
            - $ref: '#/components/schemas/CommissionAmountType'
        CommissionApplyType:
          allOf:
            - $ref: '#/components/schemas/CommissionApplyType'
        DoPayToAgent:
          type: boolean
        AgentName:
          type: string
          description: Read-only agent name field
          nullable: true
      additionalProperties: false
      description: Manages agent pay specifc to a reservation
    ReservationAgentPayInfoApiItemListResponse:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/ReservationAgentPayInfo'
          description: List of items to be returned in response
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defined an Api response that includes a list of models
    ReservationAgentPayInfoApiItemResponse:
      type: object
      properties:
        Item:
          allOf:
            - $ref: '#/components/schemas/ReservationAgentPayInfo'
          description: Response object
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defines An API response that includes a single model
    ReservationAgentPayUpdateRequest:
      type: object
      properties:
        ReservationId:
          maximum: 2147483647
          minimum: 1
          type: integer
          description: Reservation ID associated with IDs
          format: int32
        ReservationAgentPayIdPayList:
          type: array
          items:
            type: integer
            format: int32
          description: IDs to update during update request
          nullable: true
        ReservationAgentPayIdNoPayList:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
      additionalProperties: false
      description: Defines request to update specific Reservation Agent Pay records to be paid.
    ReservationAffiliatePayInfo:
      type: object
      properties:
        ReservationId:
          type: integer
          description: Reservation ID for Reservation Pay
          format: int32
        AffiliateId:
          type: integer
          description: Sets the affiliate for the reservation
          format: int32
        AffiliateDriverId:
          maximum: 2147483647
          minimum: 0
          type: integer
          description: 'If set, will also set affiliate driver into reservation'
          format: int32
        AffiliatePay:
          type: number
          description: Amount to pay affiliate
          format: double
      additionalProperties: false
      description: Manages information about reservation affiliate pay
    EmployeePayInfo:
      required:
        - EmployeeId
      type: object
      properties:
        EmployeePayId:
          type: integer
          description: Unique pay identifier
          format: int32
        EmployeeName:
          type: string
          description: 'Employee full name, summary field only (non-updateable)'
          nullable: true
        EmployeeId:
          maximum: 2147483647
          minimum: 1
          type: integer
          description: Employee for this pat
          format: int32
        ReservationId:
          maximum: 2147483647
          minimum: 0
          type: integer
          description: Reference Reservation ID
          format: int32
        Total:
          type: number
          description: Total amount of pay.
          format: double
        CompanyId:
          maximum: 2147483647
          minimum: 0
          type: integer
          description: Reference Company ID
          format: int32
        ScheduledPickupTime:
          type: string
          description: Schedule pickup for pay billing use
          format: date-time
        ScheduledPayDate:
          type: string
          format: date-time
        ActualPayDate:
          type: string
          format: date-time
        IsPaid:
          type: boolean
        IsApproved:
          type: boolean
        IsCreatedInBilling:
          type: boolean
        Reference:
          maxLength: 155
          type: string
          description: User reference
          nullable: true
        BillingHoursForPay:
          type: number
          description: Total hours for pay
          format: double
        PaymentNotes:
          type: string
          description: (Read Only) Original method of payment from reservation
          nullable: true
        PassengerName:
          type: string
          description: (Read Only) Original mepassenger name from reservation
          nullable: true
        CustomerName:
          type: string
          description: (Read Only) Original mepassenger name from reservation
          nullable: true
        CreateTime:
          type: string
          description: Internal create timestamp
          format: date-time
      additionalProperties: false
      description: Managed details of a single Employee Pay record
    EmployeePayInfoApiItemListResponse:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeePayInfo'
          description: List of items to be returned in response
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defined an Api response that includes a list of models
    EmployeePayInfoApiItemResponse:
      type: object
      properties:
        Item:
          allOf:
            - $ref: '#/components/schemas/EmployeePayInfo'
          description: Response object
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defines An API response that includes a single model
    EmployeePayLineItemInfo:
      required:
        - EmployeePayId
      type: object
      properties:
        EmployeePayLineItemId:
          type: integer
          description: Unique ID
          format: int32
        EmployeePayId:
          maximum: 2147483647
          minimum: 1
          type: integer
          description: Associated EmployeePayID
          format: int32
        Description:
          maxLength: 50
          type: string
          description: User description
          nullable: true
        TotalHours:
          maximum: 2147483647
          minimum: 0
          type: number
          description: Total hours for pay
          format: double
        Rate:
          maximum: 2147483647
          minimum: 0
          type: number
          description: Rate of hourly pay
          format: double
        ItemTotal:
          type: number
          description: Line item total (internally calculated)
          format: double
        StartTime:
          type: string
          description: Pay start time
          format: date-time
        EndTime:
          type: string
          description: Pay end time
          format: date-time
        CreateTime:
          type: string
          description: Internal create timestamp
          format: date-time
      additionalProperties: false
      description: Manged details of employee pay line items
    EmployeePayLineItemInfoApiItemListResponse:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/EmployeePayLineItemInfo'
          description: List of items to be returned in response
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defined an Api response that includes a list of models
    EmployeePayLineItemInfoApiItemResponse:
      type: object
      properties:
        Item:
          allOf:
            - $ref: '#/components/schemas/EmployeePayLineItemInfo'
          description: Response object
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defines An API response that includes a single model
    BlackoutDateInfo:
      type: object
      properties:
        BlackoutDateId:
          type: integer
          format: int32
        BlackoutDate:
          type: string
          description: 'Date of blackout, 24 hour period midnight to midnight'
          format: date-time
        Message:
          type: string
          description: Message to be displayed for blackout date
          nullable: true
        DoApplyCustomerPortal:
          type: boolean
          description: 'If true, applies to Customer Portal applications'
        DoApplyWebService:
          type: boolean
          description: 'If true, applies to web serice reservations'
        DoApplyAppBooking:
          type: boolean
          description: 'If true, applies to FASTTRAK application reservations'
      additionalProperties: false
    BlackoutDateInfoIEnumerableApiItemResponse:
      type: object
      properties:
        Item:
          type: array
          items:
            $ref: '#/components/schemas/BlackoutDateInfo'
          description: Response object
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defines An API response that includes a single model
    UserDetail:
      required:
        - CompanySecurityEnabled
        - EmailAddress
        - EmployeeID
        - FirstName
        - GlobalSecurityId
        - LastName
        - SecurityRole
        - UserId
      type: object
      properties:
        CompanyAccessList:
          type: array
          items:
            type: integer
            format: int32
          description: 'List of company ID''s the user has access too. If not set, company security is not defined and user has access to all companies.'
          nullable: true
        UserId:
          type: integer
          description: User ID of user in FT system database
          format: int32
        GlobalSecurityId:
          type: string
          description: Internal global security for refrerence to security system
        FirstName:
          type: string
          description: First naem of user
        LastName:
          type: string
          description: Last name of user
        EmailAddress:
          type: string
          description: User email address
        SecurityRole:
          type: string
          description: Security role of user
        EmployeeID:
          type: integer
          format: int32
        IsSystemAdministrator:
          type: boolean
          description: 'If true, user permissions do NOT apply and user has access to all features.'
        CompanySecurityEnabled:
          type: boolean
          description: True if company security is enabled for this user.
      additionalProperties: false
      description: Manages details of a user
    SettingValueType:
      enum:
        - Unknown
        - String
        - Integer
        - Boolean
        - DateTime
      type: string
      format: int32
    Setting:
      type: object
      properties:
        Name:
          type: string
          nullable: true
        Value:
          type: string
          nullable: true
        ValueType:
          allOf:
            - $ref: '#/components/schemas/SettingValueType'
        IsDefault:
          type: boolean
        IsGlobal:
          type: boolean
        IsCustomer:
          type: boolean
        IsCorporate:
          type: boolean
        ContextId:
          type: integer
          format: int32
      additionalProperties: false
    SessionInformation:
      type: object
      properties:
        UserDetail:
          allOf:
            - $ref: '#/components/schemas/UserDetail'
          description: UserDetail for initial session start
          nullable: true
        CompanyDetail:
          allOf:
            - $ref: '#/components/schemas/CompanyInfo'
          description: Primary company for session use
          nullable: true
        SessionSettings:
          type: array
          items:
            $ref: '#/components/schemas/Setting'
          description: Applicable settings for user session (user + system) => flattened
          nullable: true
        Permissions:
          type: array
          items:
            type: string
          description: List of permissions the user has assigned
          nullable: true
      additionalProperties: false
      description: Provides initial database specific context informatin=on for current session
    SessionInformationApiItemResponse:
      type: object
      properties:
        Item:
          allOf:
            - $ref: '#/components/schemas/SessionInformation'
          description: Response object
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defines An API response that includes a single model
    SettingConfigRule:
      type: object
      additionalProperties: false
    SettingConfig:
      type: object
      properties:
        Name:
          type: string
          nullable: true
        Key:
          type: string
          nullable: true
        Description:
          type: string
          nullable: true
        DefaultValue:
          type: string
          nullable: true
        Category:
          type: string
          nullable: true
        DataType:
          type: string
          nullable: true
        IsRequired:
          type: boolean
        HasDefault:
          type: boolean
        Rules:
          type: array
          items:
            $ref: '#/components/schemas/SettingConfigRule'
          nullable: true
        Options:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    SettingConfigApiItemListResponse:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/SettingConfig'
          description: List of items to be returned in response
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defined an Api response that includes a list of models
    DataListRequest:
      type: object
      properties:
        IncludeBillingMethod:
          type: boolean
          description: 'If true, Billing Method will be returned'
        IncludeBillingType:
          type: boolean
          description: 'If true, Billing Type will be returned'
        IncludeBookingSource:
          type: boolean
          description: 'If true, Booking Siurce will be returned'
        IncludeBookingCategory:
          type: boolean
          description: 'If true, Booking Category will be returned'
        IncludeTripCategory:
          type: boolean
          description: 'If true, Trip Category will be returned'
        IncludeTripType:
          type: boolean
          description: 'If true, Trip Type will be returned'
        IncludeDriverDispatchStatus:
          type: boolean
          description: 'If true, Driver Dispatch Status will be included'
        IncludeReservationOrigin:
          type: boolean
          description: 'If true, Reservation Origin will be included'
        IncludeTimezoneList:
          type: boolean
          description: 'if true, Timezones will be included'
        IncludePayItemDetailType:
          type: boolean
          description: if truem payItemDetailType will be included
      additionalProperties: false
      description: Retrieves list of data lists per request
    DataListType:
      enum:
        - Unknown
        - BillingMethod
        - BillingType
        - BookingSource
        - BookingCategory
        - TripCategory
        - TripType
        - DriverDispatchStatus
        - ReservationOrigin
        - Timezone
        - PayItemDetailType
      type: string
      description: Keys for data list retrieval
      format: int32
    DataListValueDetail:
      type: object
      properties:
        DataListType:
          allOf:
            - $ref: '#/components/schemas/DataListType'
          description: The list the value belongs too
        Id:
          type: integer
          description: Internal ID for this item (used for all static and dynamic list value)
          format: int32
        StaticKey:
          type: string
          description: The underlying static key for the value (only used when applying static list values to entities)
          nullable: true
        Value:
          type: string
          description: The user presentable string for the value (per culture aetting or defauly en_us)
          nullable: true
        DependentKey:
          type: integer
          description: 'If != -1, represents the key to the related list'
          format: int32
      additionalProperties: false
      description: Manages details around a single value within a data list
    DataListDetail:
      type: object
      properties:
        ExpirationSeconds:
          type: integer
          description: 'Expiration of list in seconds. If no expiration, then -1'
          format: int32
        ListKey:
          allOf:
            - $ref: '#/components/schemas/DataListType'
          description: ''
        ListValueDetail:
          type: array
          items:
            $ref: '#/components/schemas/DataListValueDetail'
          description: Key/value pair where key is the internal value identifier and value is the display string
          nullable: true
      additionalProperties: false
      description: Describes the detail of a data list
    DataListDetailApiItemListResponse:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/DataListDetail'
          description: List of items to be returned in response
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defined an Api response that includes a list of models
    ReservationStatusTypeInfo:
      type: object
      properties:
        ReservationStatusId:
          type: integer
          format: int32
        ReservationStatusType:
          allOf:
            - $ref: '#/components/schemas/ReservationStatusType'
        Description:
          type: string
          nullable: true
        DisplayOrder:
          type: integer
          format: int32
        IsInProgressStatus:
          type: boolean
        ColorRed:
          type: integer
          format: int32
        ColorGreen:
          type: integer
          format: int32
        ColorBlue:
          type: integer
          format: int32
      additionalProperties: false
    ReservationStatusTypeInfoApiItemListResponse:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/ReservationStatusTypeInfo'
          description: List of items to be returned in response
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defined an Api response that includes a list of models
    TimeZoneDetail:
      type: object
      properties:
        Id:
          type: string
          nullable: true
        WindowsId:
          type: string
          nullable: true
        IANAId:
          type: string
          nullable: true
        UtcOffsetMinutes:
          type: integer
          format: int32
        DisplayName:
          type: string
          nullable: true
      additionalProperties: false
    TimeZoneDetailApiItemListResponse:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/TimeZoneDetail'
          description: List of items to be returned in response
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defined an Api response that includes a list of models
    TestEnum:
      enum:
        - None
        - OOO
        - TTT
        - RRR
      type: string
      description: This is the enum
      format: int32
    TestEnumApiItemResponse:
      type: object
      properties:
        Item:
          allOf:
            - $ref: '#/components/schemas/TestEnum'
          description: Response object
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defines An API response that includes a single model
    UserInfo:
      required:
        - CompanySecurityEnabled
        - EmailAddress
        - EmployeeID
        - FirstName
        - GlobalSecurityId
        - LastName
        - SecurityRole
        - UserId
      type: object
      properties:
        UserId:
          type: integer
          description: User ID of user in FT system database
          format: int32
        GlobalSecurityId:
          type: string
          description: Internal global security for refrerence to security system
        FirstName:
          type: string
          description: First naem of user
        LastName:
          type: string
          description: Last name of user
        EmailAddress:
          type: string
          description: User email address
        SecurityRole:
          type: string
          description: Security role of user
        EmployeeID:
          type: integer
          format: int32
        IsSystemAdministrator:
          type: boolean
          description: 'If true, user permissions do NOT apply and user has access to all features.'
        CompanySecurityEnabled:
          type: boolean
          description: True if company security is enabled for this user.
      additionalProperties: false
    UserInfoApiItemResponse:
      type: object
      properties:
        Item:
          allOf:
            - $ref: '#/components/schemas/UserInfo'
          description: Response object
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defines An API response that includes a single model
    SettingApiItemListResponse:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/Setting'
          description: List of items to be returned in response
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defined an Api response that includes a list of models
    VehicleTypeInfoApiItemResponse:
      type: object
      properties:
        Item:
          allOf:
            - $ref: '#/components/schemas/VehicleTypeInfo'
          description: Response object
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defines An API response that includes a single model
    VehicleInfoApiItemListResponse:
      type: object
      properties:
        Items:
          type: array
          items:
            $ref: '#/components/schemas/VehicleInfo'
          description: List of items to be returned in response
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defined an Api response that includes a list of models
    VehicleInfoApiItemResponse:
      type: object
      properties:
        Item:
          allOf:
            - $ref: '#/components/schemas/VehicleInfo'
          description: Response object
          nullable: true
        Status:
          allOf:
            - $ref: '#/components/schemas/ApiStatus'
          description: Defines Api-level status of response
        Message:
          type: string
          description: Defines system message related to response (success or failure)
          nullable: true
        IncludesOperationalMessage:
          type: boolean
          description: 'In general, ff true, the response was successful but an important message is available to refine the success status.'
      additionalProperties: false
      description: Defines An API response that includes a single model
